<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>分布式架构设计</title>
      <link href="/2022/10/05/fen-bu-shi-jia-gou-she-ji/"/>
      <url>/2022/10/05/fen-bu-shi-jia-gou-she-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="一-分布式架构与理论"><a href="#一-分布式架构与理论" class="headerlink" title="一,分布式架构与理论"></a>一,分布式架构与理论</h1><h2 id="1-分布式架构与理论"><a href="#1-分布式架构与理论" class="headerlink" title="1,分布式架构与理论"></a>1,分布式架构与理论</h2><h3 id="1-1-什么是分布式系统"><a href="#1-1-什么是分布式系统" class="headerlink" title="1.1,什么是分布式系统"></a>1.1,什么是分布式系统</h3><p>分布式系统是硬软件分布在不同网络计算机上,彼此通过消息传递进行通信协调的系统  </p><p>把一个大的业务拆成多个可以独立部署和实现功能的子模块,分布在不同服务器节点,共同构成的系统  </p><p><img src="%E5%88%86%E5%B8%83%E5%BC%8F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/img.png" alt="/分布式架构设计/img.png">  </p><h3 id="1-2-分布式和集群的区别"><a href="#1-2-分布式和集群的区别" class="headerlink" title="1.2,分布式和集群的区别"></a>1.2,分布式和集群的区别</h3><p>集群-&gt;多个服务做同一件事  </p><p>分布式-&gt;多个服务做不同的事  </p><h3 id="1-3-分布式系统特性"><a href="#1-3-分布式系统特性" class="headerlink" title="1.3,分布式系统特性"></a>1.3,分布式系统特性</h3><p>分布性-&gt;可以分布在不同空间(物理)   </p><p>对等性-&gt;计算机服务节点没有主从之分  </p><p>并发性-&gt;分布式系统的多个节点,可能并发地操作资源(数据库等)  </p><p>缺乏全局时钟-&gt;由于处于不同机器,而且是远程通信,事件执行的先后顺序难以确认  </p><p>故障容易发生-&gt;机器越多,越有可能发生局部的故障  </p><p>单点故障-&gt;如果某个功能/角色只有一台计算机支撑,则它出现的故障就是单点故障</p><h3 id="1-4-分布式系统面临的问题"><a href="#1-4-分布式系统面临的问题" class="headerlink" title="1.4,分布式系统面临的问题"></a>1.4,分布式系统面临的问题</h3><h4 id="1-通信异常"><a href="#1-通信异常" class="headerlink" title="1,通信异常"></a>1,通信异常</h4><p>网络本身可能异常,则会出现<strong>分布式系统无法完成一次网络通信</strong>的情况,<br>而且,远程通信也有延迟,综上,分布式系统很容易出现<strong>消息丢失和延迟</strong></p><h4 id="2-网络分区"><a href="#2-网络分区" class="headerlink" title="2,网络分区"></a>2,网络分区</h4><p>部分网络不连通,但是子网络内部的网络通信正常,导致网络环境分成了不同的区域,出现<strong>局部小集群</strong>,<br>此时需要这些小集群完成服务,对分布式一致性提出巨大挑战</p><h4 id="3-节点故障"><a href="#3-节点故障" class="headerlink" title="3,节点故障"></a>3,节点故障</h4><p>组成微服务的服务器节点宕机或僵死</p><h4 id="4-三态-重发"><a href="#4-三态-重发" class="headerlink" title="4,三态,重发"></a>4,三态,重发</h4><p>三态-&gt;分布式系统每次请求响应都有<strong>成功/失败/超时</strong>三种状态  </p><p>重发-&gt;超时/失败的情况就需要重新发起调用</p><h4 id="5-幂等"><a href="#5-幂等" class="headerlink" title="5,幂等"></a>5,幂等</h4><p>多次请求某个资源,对资源本身都是产生和一次调用相同的结果</p><h1 id="二-分布式理论"><a href="#二-分布式理论" class="headerlink" title="二,分布式理论"></a>二,分布式理论</h1><h2 id="2-1-数据一致性"><a href="#2-1-数据一致性" class="headerlink" title="2.1,数据一致性"></a>2.1,数据一致性</h2><h3 id="2-1-1-什么是数据一致性"><a href="#2-1-1-什么是数据一致性" class="headerlink" title="2.1.1,什么是数据一致性"></a>2.1.1,什么是数据一致性</h3><p>数据在多副本中保存,各副本数据都是一样的</p><h3 id="2-1-2-副本一致性"><a href="#2-1-2-副本一致性" class="headerlink" title="2.1.2,副本一致性"></a>2.1.2,副本一致性</h3><p>分布式系统中,数据往往有多个副本,则带来了<strong>数据同步</strong>的问题,因为延迟等因素,几乎无法保证同时更新所有副本数据,<br>在性能和一致性之间,需要权衡-&gt;分布式一致性协议</p><h3 id="2-1-3-一致性分类"><a href="#2-1-3-一致性分类" class="headerlink" title="2.1.3,一致性分类"></a>2.1.3,一致性分类</h3><p>强一致性-&gt;系统写什么,读出来就是什么,但是对系统性能影响大,也很难实现  </p><p>弱一致性-&gt;写入成功后,不一定立刻且不一定多久可以读到写入的值,但尽可能在某个时间级别后让数据达到一致性状态</p><p>最终一致性-&gt;<strong>也是弱一致性的一种</strong>,<strong>保证一段时间后,节点数据达到一致性状态</strong>,<br>在一致性状态前的时间片段称为[不一致窗口]</p><p>最终一致性又有多个变种-&gt;因果一致性||读己所写一致性||会话一致性||单调/写读一致性||</p><p><img src="img.png" alt="/分布式架构设计/img1.png"></p><h2 id="2-2-CAP定理"><a href="#2-2-CAP定理" class="headerlink" title="2.2,CAP定理"></a>2.2,CAP定理</h2><h2 id="2-3-BASE理论"><a href="#2-3-BASE理论" class="headerlink" title="2.3,BASE理论"></a>2.3,BASE理论</h2><h1 id="三-分布式一致性协议"><a href="#三-分布式一致性协议" class="headerlink" title="三,分布式一致性协议"></a>三,分布式一致性协议</h1><h1 id="四-分布式系统设计策略"><a href="#四-分布式系统设计策略" class="headerlink" title="四,分布式系统设计策略"></a>四,分布式系统设计策略</h1><h1 id="五-分布式架构服务调用"><a href="#五-分布式架构服务调用" class="headerlink" title="五,分布式架构服务调用"></a>五,分布式架构服务调用</h1><h1 id="六-分布式服务治理"><a href="#六-分布式服务治理" class="headerlink" title="六,分布式服务治理"></a>六,分布式服务治理</h1><h1 id="七-架构设计基本原则"><a href="#七-架构设计基本原则" class="headerlink" title="七,架构设计基本原则"></a>七,架构设计基本原则</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第一代微服务</title>
      <link href="/2022/10/05/di-yi-dai-wei-fu-wu/"/>
      <url>/2022/10/05/di-yi-dai-wei-fu-wu/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 微服务 </tag>
            
            <tag> 分布式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试文章</title>
      <link href="/2022/10/04/ce-shi-wen-zhang/"/>
      <url>/2022/10/04/ce-shi-wen-zhang/</url>
      
        <content type="html"><![CDATA[<p>测试文章</p><img src="/2022/10/04/ce-shi-wen-zhang/test.jpg" class="" title="图片引用方法一"><p><img src="test.jpg" alt="图片引用方法二"></p><p><img src="/images/test.jpg" alt="图片引用方法三"></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>

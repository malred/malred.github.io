<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>第一代微服务组件</title>
      <link href="/2022/10/04/di-yi-dai-wei-fu-wu-zu-jian/"/>
      <url>/2022/10/04/di-yi-dai-wei-fu-wu-zu-jian/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663855338412-d5cbe6cc-55c8-4778-9c29-bda7754225fa.png#clientId=uc774d664-2de2-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=714&amp;id=ua291929f&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=893&amp;originWidth=1060&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=116352&amp;status=done&amp;style=none&amp;taskId=u2ba84c81-f3f9-489b-974f-6237d98cacb&amp;title=&amp;width=848" alt="image.png"><br><a name="dJxO3"></a></p><h1 id="Eureka服务注册中心-停止更新"><a href="#Eureka服务注册中心-停止更新" class="headerlink" title="Eureka服务注册中心(停止更新)"></a>Eureka服务注册中心(停止更新)</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663855624449-86539654-220a-402d-aa09-7f958c1b13c4.png#clientId=uc774d664-2de2-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=417&amp;id=ufafba8a5&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=521&amp;originWidth=1056&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=129784&amp;status=done&amp;style=none&amp;taskId=ufb14e810-f41d-4ddc-8ab9-6f3f38336ef&amp;title=&amp;width=844.8" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663855627629-d839d5c9-1999-4f85-b9d9-fc291c0b6a15.png#clientId=uc774d664-2de2-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=359&amp;id=u4b7f57bf&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=449&amp;originWidth=791&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=40138&amp;status=done&amp;style=none&amp;taskId=u2bda1534-aa01-4c24-b04e-8fd35f1cc64&amp;title=&amp;width=632.8" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663855631424-cd7b011e-6344-4edb-8aad-c685f43f2090.png#clientId=uc774d664-2de2-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=396&amp;id=uc0825502&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=495&amp;originWidth=973&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=77141&amp;status=done&amp;style=none&amp;taskId=u4b429566-912b-4fab-b21b-e2a3bf7475d&amp;title=&amp;width=778.4" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663855637876-aacd7b03-5f13-4925-91c5-f7d978c81604.png#clientId=uc774d664-2de2-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=364&amp;id=u0f241f1c&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=455&amp;originWidth=1015&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=122871&amp;status=done&amp;style=none&amp;taskId=u3d8bffad-928e-4f9e-a4f5-4aaa89eb10e&amp;title=&amp;width=812" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663855643783-1830821a-a9ff-4438-9d9f-6afaebbf44c5.png#clientId=uc774d664-2de2-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=219&amp;id=u6c530b8c&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=274&amp;originWidth=1024&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=64786&amp;status=done&amp;style=none&amp;taskId=u1649af0e-21bc-4cde-8cfd-da8d7939e4d&amp;title=&amp;width=819.2" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663855992401-4759e28f-40a2-4820-bfd6-7ee53444c0e4.png#clientId=uc774d664-2de2-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=741&amp;id=u0e09f3fe&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=926&amp;originWidth=838&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=244327&amp;status=done&amp;style=none&amp;taskId=uae204363-d90c-4d44-a0b6-f4a71f60860&amp;title=&amp;width=670.4" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663856000215-507d2209-27e3-4edb-9c5e-eaacbd9a315a.png#clientId=uc774d664-2de2-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=395&amp;id=u86ae906b&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=494&amp;originWidth=848&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=55558&amp;status=done&amp;style=none&amp;taskId=ubb35779c-8afe-4327-921f-034f9be6e15&amp;title=&amp;width=678.4" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663856064871-ec830249-4c86-4f2b-937d-c8693227b98c.png#clientId=uc774d664-2de2-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=550&amp;id=u0da947bf&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=687&amp;originWidth=1027&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=104581&amp;status=done&amp;style=none&amp;taskId=u07ce091e-15e3-44a8-ba90-644b45abf4b&amp;title=&amp;width=821.6" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663856071855-31d315b4-8491-4ab1-b79f-38ceb0174b78.png#clientId=uc774d664-2de2-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=295&amp;id=u69a5d117&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=369&amp;originWidth=1077&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=122868&amp;status=done&amp;style=none&amp;taskId=u9e76ff38-6a71-4ccd-9f80-e24f405df05&amp;title=&amp;width=861.6" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663856089038-de08454d-d7e6-4129-9c76-ac816c6b0bc7.png#clientId=uc774d664-2de2-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=787&amp;id=u9aa9fb73&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=984&amp;originWidth=996&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=223888&amp;status=done&amp;style=none&amp;taskId=u9a82f80b-20fb-4a3a-9dd0-d26abad0ceb&amp;title=&amp;width=796.8" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663856121046-122fed33-1fdc-4289-8f3a-83eef3b2fe1d.png#clientId=uc774d664-2de2-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=211&amp;id=u14d83cae&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=264&amp;originWidth=1003&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=71437&amp;status=done&amp;style=none&amp;taskId=u38ad312b-1b54-4bba-b061-c3339b4d469&amp;title=&amp;width=802.4" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663856160015-a714c2cf-e910-4fde-aec5-f49753b0570e.png#clientId=uc774d664-2de2-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=612&amp;id=u6280acde&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=765&amp;originWidth=1040&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=206955&amp;status=done&amp;style=none&amp;taskId=uca653261-4912-42ee-a467-3bc36119010&amp;title=&amp;width=832" alt="image.png"><br><a name="VbUGj"></a></p><h1 id="Eureka应⽤及⾼可⽤集群"><a href="#Eureka应⽤及⾼可⽤集群" class="headerlink" title="Eureka应⽤及⾼可⽤集群"></a>Eureka应⽤及⾼可⽤集群</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663856649052-d72335e1-3a8f-4bb9-8ea4-b59cca2aee08.png#clientId=uc774d664-2de2-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=261&amp;id=u90ddaa67&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=326&amp;originWidth=1041&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=57436&amp;status=done&amp;style=none&amp;taskId=u38490472-bcc9-4b90-91b0-05b50d65f58&amp;title=&amp;width=832.8" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663857075567-8f35cf47-088e-49c4-93e6-c4ffa7c13808.png#clientId=uc774d664-2de2-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=338&amp;id=u33822f0f&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=422&amp;originWidth=781&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=103535&amp;status=done&amp;style=none&amp;taskId=ud5a39210-a10a-4fe3-99e9-8adbe4cec62&amp;title=&amp;width=624.8" alt="image.png"><br><a name="CWyxV"></a></p><h2 id="父工程pom引入spring-cloud依赖"><a href="#父工程pom引入spring-cloud依赖" class="headerlink" title="父工程pom引入spring cloud依赖"></a>父工程pom引入spring cloud依赖</h2><pre class=" language-xml"><code class="language-xml">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- spring cloud依赖管理,引入了spring cloud的大版本--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>Greenwich.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">></span></span></code></pre><p><a name="y3fKS"></a></p><h2 id="当前模块pom"><a href="#当前模块pom" class="headerlink" title="当前模块pom"></a>当前模块pom</h2><pre class=" language-xml"><code class="language-xml">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-netflix-eureka-server<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663857313640-c59f9679-19af-4506-8873-678eb8a723d3.png#clientId=uc774d664-2de2-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=65&amp;id=uf9f9bdab&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=81&amp;originWidth=944&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=41940&amp;status=done&amp;style=none&amp;taskId=u48376c4f-6384-47aa-a1da-1c8eaa63f44&amp;title=&amp;width=755.2" alt="image.png"><br><a name="Hk7mY"></a></p><h2 id="父工程引入jaxb"><a href="#父工程引入jaxb" class="headerlink" title="父工程引入jaxb"></a>父工程引入jaxb</h2><pre class=" language-xml"><code class="language-xml">          <span class="token comment" spellcheck="true">&lt;!--引⼊Jaxb，开始--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.sun.xml.bind<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jaxb-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.2.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>javax.xml.bind<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jaxb-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.sun.xml.bind<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jaxb-impl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.2.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.glassfish.jaxb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jaxb-runtime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.2.10-b140310.1920<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>javax.activation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>activation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.1.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--引⼊Jaxb，结束--></span></code></pre><p><a name="uXNS3"></a></p><h2 id="yaml"><a href="#yaml" class="headerlink" title="yaml"></a>yaml</h2><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true">#eureka server服务端口</span><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8761</span><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> lagou<span class="token punctuation">-</span>cloud<span class="token punctuation">-</span>eureka<span class="token punctuation">-</span>server <span class="token comment" spellcheck="true">#应用名称,会在eureka中作为服务名称</span><span class="token comment" spellcheck="true">#eureka客户端配置(和server交互) eureka server也是一个client</span><span class="token key atrule">eureka</span><span class="token punctuation">:</span>  <span class="token key atrule">instance</span><span class="token punctuation">:</span>    <span class="token key atrule">hostname</span><span class="token punctuation">:</span> localhost <span class="token comment" spellcheck="true">#当前eureka实例的主机名</span>  <span class="token key atrule">client</span><span class="token punctuation">:</span>    <span class="token key atrule">service-url</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#配置客户端所交互的eureka server的地址</span>      <span class="token key atrule">defaultZone</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//$<span class="token punctuation">{</span>eureka.instance.hostname<span class="token punctuation">}</span><span class="token punctuation">:</span>$<span class="token punctuation">{</span>server.port<span class="token punctuation">}</span>/eureka    <span class="token key atrule">register-with-eureka</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true">#不需要注册自己</span>    <span class="token key atrule">fetch-registry</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true">#查询获取注册中心中的服务信息,自己就是server,不需要从server获取信息,默认true</span></code></pre><p><a name="cnK2A"></a></p><h2 id="启动类"><a href="#启动类" class="headerlink" title="启动类"></a>启动类</h2><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@EnableEurekaServer</span> <span class="token comment" spellcheck="true">//声明当前项目为eureka服务端</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EurekaServerApp</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>EurekaServerApp<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663858321993-51d5bf08-87ff-4d47-8d1c-a555bd88ee40.png#clientId=uc774d664-2de2-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=864&amp;id=u8da8e39a&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=1080&amp;originWidth=1920&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=true&amp;size=114714&amp;status=done&amp;style=none&amp;taskId=uc9874681-98cb-4701-b956-0602573bf53&amp;title=%E8%AE%BF%E9%97%AE8761%E7%AB%AF%E5%8F%A3%2C%E6%8E%A7%E5%88%B6%E5%8F%B0&amp;width=1536" alt="image.png" title="访问8761端口,控制台"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663858395116-19d9f046-8cbb-432f-9898-7581098fbcf0.png#clientId=uc774d664-2de2-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=413&amp;id=u0aa74190&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=516&amp;originWidth=1820&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=252788&amp;status=done&amp;style=none&amp;taskId=u00d59eb1-a9c1-4555-bb6b-6a6ca38fc8f&amp;title=&amp;width=1456" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663858420211-66f889a7-28f4-4b46-8eb2-3ba0a70359dd.png#clientId=uc774d664-2de2-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=478&amp;id=uf74ad0be&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=597&amp;originWidth=1379&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=160923&amp;status=done&amp;style=none&amp;taskId=ua58ed0cd-0947-4a58-88af-26b510fe5e0&amp;title=&amp;width=1103.2" alt="image.png"><br><a name="hrkVO"></a></p><h1 id="Eureka-HA高可用集群"><a href="#Eureka-HA高可用集群" class="headerlink" title="Eureka HA高可用集群"></a>Eureka HA高可用集群</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663922159118-3dd16b8d-2762-4e28-97b4-ad0bc0602258.png#clientId=u90e19050-f700-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=337&amp;id=u8931e350&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=421&amp;originWidth=1063&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=109984&amp;status=done&amp;style=none&amp;taskId=u40d54b44-02e7-465e-9047-b542275dd3e&amp;title=&amp;width=850.4" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663922157592-a4d8cce9-95cf-4c47-8a6c-b0ba42a2c541.png#clientId=u90e19050-f700-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=439&amp;id=u13cd35ae&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=549&amp;originWidth=917&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=60449&amp;status=done&amp;style=none&amp;taskId=u2b3a5cd6-af89-46f2-bb50-7cb9819d762&amp;title=&amp;width=733.6" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663922157318-02ffb527-2a45-4edb-b5c2-909938aa9a23.png#clientId=u90e19050-f700-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=142&amp;id=u2ae01f6e&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=178&amp;originWidth=1032&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=38357&amp;status=done&amp;style=none&amp;taskId=u6b3d08f3-c0f8-4ea5-830f-d8728fb022b&amp;title=&amp;width=825.6" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663922155504-7c2ec5db-b759-46be-9113-73e93841765f.png#clientId=u90e19050-f700-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=101&amp;id=ua00893de&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=126&amp;originWidth=721&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=13806&amp;status=done&amp;style=none&amp;taskId=u52bbd470-e47c-4808-b340-27cb8fa6e92&amp;title=&amp;width=576.8" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663922931420-1b25433b-209a-4663-a96f-cd4bc94ee512.png#clientId=u90e19050-f700-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=93&amp;id=PKr0E&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=116&amp;originWidth=397&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=12296&amp;status=done&amp;style=none&amp;taskId=ub463458f-42c1-4f42-8cb7-481148d90cd&amp;title=&amp;width=317.6" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663922966846-8627f554-3926-47c2-b62d-164b585e5fb6.png#clientId=u90e19050-f700-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=126&amp;id=ua39d1c35&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=158&amp;originWidth=727&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=11618&amp;status=done&amp;style=none&amp;taskId=u52b3dd92-19e3-467e-a74d-d7f97555a23&amp;title=&amp;width=581.6" alt="image.png"><br><a name="CqSwK"></a></p><h2 id="进入文件管理器-复制工程文件-修改名称"><a href="#进入文件管理器-复制工程文件-修改名称" class="headerlink" title="进入文件管理器,复制工程文件,修改名称"></a>进入文件管理器,复制工程文件,修改名称</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663922253142-9e36ad36-a3a1-48e1-82fb-31d536bd4693.png#clientId=u90e19050-f700-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=95&amp;id=ubf2c5e0f&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=101&amp;originWidth=341&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=28263&amp;status=done&amp;style=none&amp;taskId=u35026f82-77ac-4067-b632-f2782213785&amp;title=&amp;width=320.8000183105469" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663922230338-66b345df-c556-4103-991e-f74157d831e3.png#clientId=u90e19050-f700-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=94&amp;id=u7b981f09&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=103&amp;originWidth=325&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=18489&amp;status=done&amp;style=none&amp;taskId=u25e62c76-b289-476e-9e28-0ce243ad82e&amp;title=&amp;width=296" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663922223556-c2817478-957c-49e2-9722-9b967523670e.png#clientId=u90e19050-f700-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=62&amp;id=u5903c86a&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=78&amp;originWidth=762&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=37953&amp;status=done&amp;style=none&amp;taskId=u1defcbf7-3dc9-4298-9f8c-c0eab122ab9&amp;title=&amp;width=609.6" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663922268724-efe520fb-96ac-4c18-8063-e40c2ef84d60.png#clientId=u90e19050-f700-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=153&amp;id=u600431eb&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=191&amp;originWidth=460&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=38676&amp;status=done&amp;style=none&amp;taskId=u12eb88bd-1e62-4c0a-9a4d-7f5e1d03da4&amp;title=&amp;width=368" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663922275082-c703241f-ddb5-4bce-b02c-12bf5ff293c8.png#clientId=u90e19050-f700-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=240&amp;id=u4d7b0a2c&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=300&amp;originWidth=573&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=106721&amp;status=done&amp;style=none&amp;taskId=u26e1cd05-e46a-4611-9949-1d2b7a68388&amp;title=&amp;width=458.4" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663922388596-eee0741a-996c-4aa1-b754-ebd3e283a1d8.png#clientId=u90e19050-f700-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=276&amp;id=u7ef684e1&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=345&amp;originWidth=786&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=true&amp;size=440109&amp;status=done&amp;style=none&amp;taskId=uebc99ed5-103e-4929-8d17-ad09e54133a&amp;title=%E7%88%B6%E5%B7%A5%E7%A8%8B%E7%9A%84pom%E9%87%8C%E5%BC%95%E5%85%A5%E7%88%B6%E5%AD%90%E5%85%B3%E7%B3%BB&amp;width=628.8" alt="image.png" title="父工程的pom里引入父子关系"><br><a name="p71ZR"></a></p><h2 id="修改yaml"><a href="#修改yaml" class="headerlink" title="修改yaml"></a>修改yaml</h2><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true">#eureka server服务端口</span><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8761</span><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> lagou<span class="token punctuation">-</span>cloud<span class="token punctuation">-</span>eureka<span class="token punctuation">-</span>server <span class="token comment" spellcheck="true">#应用名称,会在eureka中作为服务名称</span><span class="token comment" spellcheck="true">#eureka客户端配置(和server交互) eureka server也是一个client</span><span class="token key atrule">eureka</span><span class="token punctuation">:</span>  <span class="token key atrule">instance</span><span class="token punctuation">:</span>    <span class="token key atrule">hostname</span><span class="token punctuation">:</span> LagouCloudEurekaServerA <span class="token comment" spellcheck="true">#当前eureka实例的主机名</span>  <span class="token key atrule">client</span><span class="token punctuation">:</span>    <span class="token key atrule">service-url</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#配置客户端所交互的eureka server的地址</span>      <span class="token key atrule">defaultZone</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//LagouCloudEurekaServerB<span class="token punctuation">:</span>8762/eureka<span class="token comment" spellcheck="true">#      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka</span>    <span class="token key atrule">register-with-eureka</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token comment" spellcheck="true">#    register-with-eureka: false #不需要注册自己</span>    <span class="token key atrule">fetch-registry</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token comment" spellcheck="true">#    fetch-registry: false #查询获取注册中心中的服务信息,自己就是server,不需要从server获取信息,默认true</span></code></pre><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true">#eureka server服务端口</span><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8762</span><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> lagou<span class="token punctuation">-</span>cloud<span class="token punctuation">-</span>eureka<span class="token punctuation">-</span>server <span class="token comment" spellcheck="true">#应用名称,会在eureka中作为服务名称</span><span class="token comment" spellcheck="true">#eureka客户端配置(和server交互) eureka server也是一个client(对于其他server来说也是)</span><span class="token key atrule">eureka</span><span class="token punctuation">:</span>  <span class="token key atrule">instance</span><span class="token punctuation">:</span>    <span class="token key atrule">hostname</span><span class="token punctuation">:</span> LagouCloudEurekaServerB <span class="token comment" spellcheck="true">#当前eureka实例的主机名</span>  <span class="token key atrule">client</span><span class="token punctuation">:</span>    <span class="token key atrule">service-url</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#配置客户端所交互的eureka server的地址</span>      <span class="token comment" spellcheck="true">#集群模式下,defaultZone应指向其他Eureka Server(如果有多个,则用逗号拼接即可)</span>      <span class="token key atrule">defaultZone</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//LagouCloudEurekaServerA<span class="token punctuation">:</span>8761/eureka<span class="token comment" spellcheck="true">#      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka</span><span class="token comment" spellcheck="true">#    register-with-eureka: false #不需要注册自己</span>    <span class="token key atrule">register-with-eureka</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true">#集群模式注册自己</span><span class="token comment" spellcheck="true">#    fetch-registry: false #查询获取注册中心中的服务信息,自己就是server,不需要从server获取信息,默认true</span>    <span class="token key atrule">fetch-registry</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true">#集群模式查询服务信息</span></code></pre><p><a name="AhvNw"></a></p><h2 id="启动集群"><a href="#启动集群" class="headerlink" title="启动集群"></a>启动集群</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663923054481-d75b366d-38a2-4ad4-9705-76e36509c34b.png#clientId=u90e19050-f700-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=255&amp;id=u86624451&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=319&amp;originWidth=1783&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=46175&amp;status=done&amp;style=none&amp;taskId=ue7a557c1-e684-4d71-b330-c110ca9119b&amp;title=&amp;width=1426.4" alt="image.png"><br><a name="QDwZQ"></a></p><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二:"></a>方法二:</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663923309381-80bdb1de-340d-479e-9b63-5c913bc98ac8.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=69&amp;id=ua7120a4e&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=86&amp;originWidth=828&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=13462&amp;status=done&amp;style=none&amp;taskId=uca62ccd5-dff2-4ece-8f00-a49bc3ae37d&amp;title=&amp;width=662.4" alt="image.png"></p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true">#指定应⽤名称</span><span class="token key atrule">spring</span><span class="token punctuation">:</span><span class="token key atrule">application</span><span class="token punctuation">:</span><span class="token key atrule">name</span><span class="token punctuation">:</span> lagou<span class="token punctuation">-</span>cloud<span class="token punctuation">-</span>eureka<span class="token punctuation">-</span>server<span class="token punctuation">---</span><span class="token comment" spellcheck="true">#第⼀个profile,后期启动spring-boot项⽬时，可通过命令参数指定</span><span class="token key atrule">spring</span><span class="token punctuation">:</span><span class="token key atrule">profiles</span><span class="token punctuation">:</span> LagouCloudEurekaServerA<span class="token key atrule">server</span><span class="token punctuation">:</span><span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8761</span><span class="token key atrule">eureka</span><span class="token punctuation">:</span><span class="token key atrule">instance</span><span class="token punctuation">:</span><span class="token key atrule">hostname</span><span class="token punctuation">:</span> LagouCloudEurekaServerA<span class="token key atrule">client</span><span class="token punctuation">:</span><span class="token key atrule">register-with-eureka</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">fetch-registry</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">serviceUrl</span><span class="token punctuation">:</span><span class="token key atrule">defaultZone</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//LagouCloudEurekaServerB<span class="token punctuation">:</span>8762/eureka<span class="token punctuation">---</span><span class="token comment" spellcheck="true">#第⼆个profile,后期启动spring-boot项⽬时，可通过命令参数指定</span><span class="token key atrule">spring</span><span class="token punctuation">:</span><span class="token key atrule">profiles</span><span class="token punctuation">:</span> LagouCloudEurekaServerB<span class="token key atrule">server</span><span class="token punctuation">:</span><span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8762</span><span class="token key atrule">eureka</span><span class="token punctuation">:</span><span class="token key atrule">instance</span><span class="token punctuation">:</span><span class="token key atrule">hostname</span><span class="token punctuation">:</span> LagouCloudEurekaServerB<span class="token key atrule">client</span><span class="token punctuation">:</span><span class="token key atrule">register-with-eureka</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">fetch-registry</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">serviceUrl</span><span class="token punctuation">:</span><span class="token key atrule">defaultZone</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//LagouCloudEurekaServerA<span class="token punctuation">:</span>8761/eureka</code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663923334029-186385c1-fceb-4d95-b1f1-b54638097c13.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=108&amp;id=ufc6e8d8a&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=135&amp;originWidth=956&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=18441&amp;status=done&amp;style=none&amp;taskId=uacc5240b-b947-4f78-ab73-7e69c7ed7d8&amp;title=&amp;width=764.8" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663923347055-222bb07f-76fb-4ed7-b087-5fb4ea97fe08.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=214&amp;id=u2380aa09&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=268&amp;originWidth=1069&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=66683&amp;status=done&amp;style=none&amp;taskId=u77d18f82-5a2e-4612-a3ec-1d62689c7e5&amp;title=&amp;width=855.2" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663923364308-c962c07d-64ae-45d4-92b6-2f70de58e351.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=666&amp;id=u73d059a2&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=833&amp;originWidth=1074&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=203522&amp;status=done&amp;style=none&amp;taskId=uccd6aabe-8c8e-4d99-a4df-68ab8414da4&amp;title=&amp;width=859.2" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663923369497-50be86e0-6d1f-44b3-baa1-5e43f27caa13.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=558&amp;id=u05e6ee7e&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=698&amp;originWidth=1849&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=117325&amp;status=done&amp;style=none&amp;taskId=u9c70ae90-5ae8-401b-ac35-09ebe4253c9&amp;title=&amp;width=1479.2" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663923376030-063002cf-e716-4d6b-b23b-c0c4397f96b7.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=171&amp;id=u9e5cdcc3&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=214&amp;originWidth=1010&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=47961&amp;status=done&amp;style=none&amp;taskId=u97fbe1d6-f51f-4fac-a6bd-6e4a4d9c48d&amp;title=&amp;width=808" alt="image.png"><br><a name="KNIQb"></a></p><h1 id="Eureka服务提供者集群"><a href="#Eureka服务提供者集群" class="headerlink" title="Eureka服务提供者集群"></a>Eureka服务提供者集群</h1><p><a name="CedmP"></a></p><h2 id="parent引入springcloud依赖"><a href="#parent引入springcloud依赖" class="headerlink" title="parent引入springcloud依赖"></a>parent引入springcloud依赖</h2><pre class=" language-xml"><code class="language-xml">        <span class="token comment" spellcheck="true">&lt;!--spring cloud commons 模块引入--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-commons<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><p><a name="N8hxH"></a></p><h2 id="服务提供者-service-resume-引入依赖"><a href="#服务提供者-service-resume-引入依赖" class="headerlink" title="服务提供者(service-resume)引入依赖"></a>服务提供者(service-resume)引入依赖</h2><pre class=" language-xml"><code class="language-xml">        <span class="token comment" spellcheck="true">&lt;!--eureka client 客户端依赖引入--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-netflix-eureka-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><p><a name="Ogbp4"></a></p><h2 id="yaml添加配置"><a href="#yaml添加配置" class="headerlink" title="yaml添加配置"></a>yaml添加配置</h2><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true">#注册到eureka服务中心</span><span class="token key atrule">eureka</span><span class="token punctuation">:</span>  <span class="token key atrule">client</span><span class="token punctuation">:</span>    <span class="token key atrule">service-url</span><span class="token punctuation">:</span>      <span class="token comment" spellcheck="true">#注册到集群,就把多个eurekaserver的地址用逗号连接,非集群模式就只写一个地址</span>      <span class="token key atrule">defaultZone</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//LagouCloudEurekaServerA<span class="token punctuation">:</span>8761/eureka<span class="token punctuation">,</span>http<span class="token punctuation">:</span>//LagouCloudEurekaServerB<span class="token punctuation">:</span>8762/eureka</code></pre><p><a name="GbVYF"></a></p><h2 id="启动类-1"><a href="#启动类-1" class="headerlink" title="启动类"></a>启动类</h2><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@EntityScan</span><span class="token punctuation">(</span><span class="token string">"com.malguy.edu.pojo"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//@EnableEurekaClient //开启EurekaClient(eureka独有)</span><span class="token annotation punctuation">@EnableDiscoveryClient</span> <span class="token comment" spellcheck="true">//开启注册中心客户端(通用注解)</span><span class="token comment" spellcheck="true">//spirngcloud的Edgware版本开始,不加注解也可以注册</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ResumeApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>ResumeApplication<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663928140786-97f883c0-e150-42c0-a91c-c239a0f18c96.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=350&amp;id=u2c1a6a53&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=437&amp;originWidth=1889&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=true&amp;size=89671&amp;status=done&amp;style=none&amp;taskId=u9e4e6d2f-aa6a-4ce2-87ff-bbe558b14ca&amp;title=%E7%BA%A2%E8%89%B2%E6%98%AF%E5%9B%A0%E4%B8%BAeureka%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%9D%E6%8A%A4%E6%9C%BA%E5%88%B6&amp;width=1511.2" alt="image.png" title="红色是因为eureka的自我保护机制"><br><a name="cUbuq"></a></p><h2 id="client配置进阶"><a href="#client配置进阶" class="headerlink" title="client配置进阶"></a>client配置进阶</h2><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080 </span><span class="token comment" spellcheck="true"># 后期该微服务多实例，端⼝从8080递增（10个以内）</span><span class="token key atrule">Spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> lagou<span class="token punctuation">-</span>service<span class="token punctuation">-</span>resume  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.jdbc.Driver    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>5408/test<span class="token punctuation">?</span>useUnicode=true<span class="token important">&amp;characterEncoding</span>=utf8<span class="token important">&amp;serverTimezone</span>=GMT    <span class="token key atrule">username</span><span class="token punctuation">:</span> root    <span class="token key atrule">password</span><span class="token punctuation">:</span> q2k0f0n3  <span class="token key atrule">jpa</span><span class="token punctuation">:</span>    <span class="token key atrule">database</span><span class="token punctuation">:</span> MySQL    <span class="token key atrule">show-sql</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">hibernate</span><span class="token punctuation">:</span>      <span class="token key atrule">naming</span><span class="token punctuation">:</span>        <span class="token key atrule">physical-strategy</span><span class="token punctuation">:</span>          <span class="token comment" spellcheck="true">#避免将驼峰命名转换为下划线命名(jpa会自动把实体类的驼峰字段转为 _ 连接的字段名)</span>          org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl<span class="token comment" spellcheck="true">#注册到eureka服务中心</span><span class="token key atrule">eureka</span><span class="token punctuation">:</span>  <span class="token key atrule">client</span><span class="token punctuation">:</span>    <span class="token key atrule">service-url</span><span class="token punctuation">:</span>      <span class="token comment" spellcheck="true">#注册到集群,就把多个eurekaserver的地址用逗号连接,非集群模式就只写一个地址</span>      <span class="token key atrule">defaultZone</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//LagouCloudEurekaServerA<span class="token punctuation">:</span>8761/eureka<span class="token punctuation">,</span>http<span class="token punctuation">:</span>//LagouCloudEurekaServerB<span class="token punctuation">:</span>8762/eureka  <span class="token comment" spellcheck="true">#eureka实例</span>  <span class="token key atrule">instance</span><span class="token punctuation">:</span>    <span class="token key atrule">prefer-ip-address</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token comment" spellcheck="true">#实例名称: localhost:lagou-service-resume:8080->可以自定义</span>    <span class="token key atrule">instance-id</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>spring.cloud.client.ip<span class="token punctuation">-</span>address<span class="token punctuation">}</span><span class="token punctuation">:</span>$<span class="token punctuation">{</span>Spring.application.name<span class="token punctuation">}</span><span class="token punctuation">:</span>$<span class="token punctuation">{</span>server.port<span class="token punctuation">}</span><span class="token punctuation">:</span>@project.version@</code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663929145138-351ef2ca-c55f-4182-80fa-45ca1aa003b2.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=518&amp;id=ub2b2cfa5&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=648&amp;originWidth=1041&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=180562&amp;status=done&amp;style=none&amp;taskId=ua0144156-476e-4e4a-bd11-8650d1a990c&amp;title=&amp;width=832.8" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663929188675-1b0fbf78-2481-430a-9df9-cd0d89b6df24.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=207&amp;id=u524d535c&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=259&amp;originWidth=1007&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=57115&amp;status=done&amp;style=none&amp;taskId=uf2692d79-b99c-46e3-a82b-da804bcccfe&amp;title=&amp;width=805.6" alt="image.png"><br><a name="TFFFM"></a></p><h1 id="Eureka服务消费者集群"><a href="#Eureka服务消费者集群" class="headerlink" title="Eureka服务消费者集群"></a>Eureka服务消费者集群</h1><p><a name="yggGN"></a></p><h2 id="pom"><a href="#pom" class="headerlink" title="pom"></a>pom</h2><pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--eureka client 客户端依赖引入--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-netflix-eureka-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><p><a name="t1cOa"></a></p><h2 id="yaml-1"><a href="#yaml-1" class="headerlink" title="yaml"></a>yaml</h2><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8090</span><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> lagou<span class="token punctuation">-</span>service<span class="token punctuation">-</span>autodeliver<span class="token comment" spellcheck="true">#注册到eureka服务中心</span><span class="token key atrule">eureka</span><span class="token punctuation">:</span>  <span class="token key atrule">client</span><span class="token punctuation">:</span>    <span class="token key atrule">service-url</span><span class="token punctuation">:</span>      <span class="token comment" spellcheck="true">#注册到集群,就把多个eurekaserver的地址用逗号连接,非集群模式就只写一个地址</span>      <span class="token key atrule">defaultZone</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//LagouCloudEurekaServerA<span class="token punctuation">:</span>8761/eureka<span class="token punctuation">,</span>http<span class="token punctuation">:</span>//LagouCloudEurekaServerB<span class="token punctuation">:</span>8762/eureka  <span class="token comment" spellcheck="true">#eureka实例</span>  <span class="token key atrule">instance</span><span class="token punctuation">:</span>    <span class="token key atrule">prefer-ip-address</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token comment" spellcheck="true">#实例名称: localhost:lagou-service-resume:8080->可以自定义</span>    <span class="token key atrule">instance-id</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>spring.cloud.client.ip<span class="token punctuation">-</span>address<span class="token punctuation">}</span><span class="token punctuation">:</span>$<span class="token punctuation">{</span>Spring.application.name<span class="token punctuation">}</span><span class="token punctuation">:</span>$<span class="token punctuation">{</span>server.port<span class="token punctuation">}</span><span class="token punctuation">:</span>@project.version@</code></pre><p><a name="ejpjC"></a></p><h2 id="启动类-2"><a href="#启动类-2" class="headerlink" title="启动类"></a>启动类</h2><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@EnableDiscoveryClient</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AutodeliverApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>AutodeliverApplication<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//使用RestTemplate模板对象进行远程调用</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> RestTemplate <span class="token function">getRestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663930078878-6c52870c-3f89-4145-a72a-b1da624127a7.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=222&amp;id=u9e18fc6d&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=277&amp;originWidth=1662&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=67481&amp;status=done&amp;style=none&amp;taskId=u203fc334-9930-4b71-9839-14e158a3680&amp;title=&amp;width=1329.6" alt="image.png"><br><a name="RCaAR"></a></p><h2 id="消费者从注册中心获取服务实例"><a href="#消费者从注册中心获取服务实例" class="headerlink" title="消费者从注册中心获取服务实例"></a>消费者从注册中心获取服务实例</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>client<span class="token punctuation">.</span>ServiceInstance<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>client<span class="token punctuation">.</span>discovery<span class="token punctuation">.</span>DiscoveryClient<span class="token punctuation">;</span> <span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/autodeliver"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AutodeliverController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> RestTemplate restTemplate<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> DiscoveryClient discoveryClient<span class="token punctuation">;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/checkState/{userId}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Integer <span class="token function">findResumeOpenState</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> Long userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//1,从eureka server中获取lagou-service-resume服务的实例信息</span>        List<span class="token operator">&lt;</span>ServiceInstance<span class="token operator">></span> instances <span class="token operator">=</span> discoveryClient<span class="token punctuation">.</span><span class="token function">getInstances</span><span class="token punctuation">(</span><span class="token string">"LAGOU-SERVICE-RESUME"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2,如果有多个就选一个使用(负载均衡的过程)</span>        ServiceInstance serviceInstance <span class="token operator">=</span> instances<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//3,从元数据信息中获取host port</span>        String host <span class="token operator">=</span> serviceInstance<span class="token punctuation">.</span><span class="token function">getHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> port <span class="token operator">=</span> serviceInstance<span class="token punctuation">.</span><span class="token function">getPort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String url <span class="token operator">=</span> <span class="token string">"http://"</span> <span class="token operator">+</span> host <span class="token operator">+</span> <span class="token string">":"</span> <span class="token operator">+</span> port <span class="token operator">+</span> <span class="token string">"/resume/openstate/"</span> <span class="token operator">+</span> userId<span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"从eureka集群中获取的url:\n"</span><span class="token operator">+</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>        Integer forObject <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span>                <span class="token function">getForObject</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> Integer<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> forObject<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663932796174-450b8d3e-670c-4c8d-8104-d1a4ab55acbf.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=74&amp;id=u4493e408&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=92&amp;originWidth=734&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=87200&amp;status=done&amp;style=none&amp;taskId=u15bfb5ac-df9f-4068-90d9-81c3fa418ce&amp;title=&amp;width=587.2" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663932802268-c0441636-d033-4f45-8335-e006ade9b4b3.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=141&amp;id=u3dbdc8df&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=176&amp;originWidth=731&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=12871&amp;status=done&amp;style=none&amp;taskId=ua0f8b8f2-6648-4dd2-9d52-badca5e60a2&amp;title=&amp;width=584.8" alt="image.png"><br><a name="TEDdR"></a></p><h1 id="元数据"><a href="#元数据" class="headerlink" title="元数据"></a>元数据</h1><p><a name="Qhtge"></a></p><h2 id="在提供者中自定义元数据"><a href="#在提供者中自定义元数据" class="headerlink" title="在提供者中自定义元数据"></a>在提供者中自定义元数据</h2><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true">#注册到eureka服务中心</span><span class="token key atrule">eureka</span><span class="token punctuation">:</span>  <span class="token key atrule">client</span><span class="token punctuation">:</span>    <span class="token key atrule">service-url</span><span class="token punctuation">:</span>      <span class="token comment" spellcheck="true">#注册到集群,就把多个eurekaserver的地址用逗号连接,非集群模式就只写一个地址</span>      <span class="token key atrule">defaultZone</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//LagouCloudEurekaServerA<span class="token punctuation">:</span>8761/eureka<span class="token punctuation">,</span>http<span class="token punctuation">:</span>//LagouCloudEurekaServerB<span class="token punctuation">:</span>8762/eureka  <span class="token comment" spellcheck="true">#eureka实例</span>  <span class="token key atrule">instance</span><span class="token punctuation">:</span>    <span class="token key atrule">prefer-ip-address</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token comment" spellcheck="true">#实例名称: localhost:lagou-service-resume:8080->可以自定义</span>    <span class="token key atrule">instance-id</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>spring.cloud.client.ip<span class="token punctuation">-</span>address<span class="token punctuation">}</span><span class="token punctuation">:</span>$<span class="token punctuation">{</span>Spring.application.name<span class="token punctuation">}</span><span class="token punctuation">:</span>$<span class="token punctuation">{</span>server.port<span class="token punctuation">}</span><span class="token punctuation">:</span>@project.version@    <span class="token comment" spellcheck="true">#自定义元数据</span>    <span class="token key atrule">metadata-map</span><span class="token punctuation">:</span>      <span class="token comment" spellcheck="true">#数据是键值对形式</span>      <span class="token key atrule">cluster</span><span class="token punctuation">:</span> cl1      <span class="token key atrule">region</span><span class="token punctuation">:</span> rn1</code></pre><p><a name="MMdpn"></a></p><h2 id="测试类"><a href="#测试类" class="headerlink" title="测试类"></a>测试类</h2><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@SpringBootTest</span><span class="token punctuation">(</span>classes <span class="token operator">=</span> <span class="token punctuation">{</span>AutodeliverApplication<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AutodeliverApplicationTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> DiscoveryClient discoveryClient<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testInstanceMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>ServiceInstance<span class="token operator">></span> instances <span class="token operator">=</span> discoveryClient<span class="token punctuation">.</span><span class="token function">getInstances</span><span class="token punctuation">(</span><span class="token string">"lagou-service-resume"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>ServiceInstance instance <span class="token operator">:</span> instances<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>instance<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663933364181-e3a1583f-7f62-40cb-84d1-1a31a9accb10.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=0.7756&amp;from=paste&amp;height=543&amp;id=u750b116f&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=679&amp;originWidth=1172&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=1181268&amp;status=done&amp;style=none&amp;taskId=ud03e9d75-a0da-45e8-893a-39541b138a3&amp;title=&amp;width=938" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663933455502-f14f59ae-72ec-46cf-b45c-8940b2146a8b.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=122&amp;id=ud160ad48&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=152&amp;originWidth=629&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=97839&amp;status=done&amp;style=none&amp;taskId=ufc71f987-ea4b-4de0-9d15-4ce406b1b18&amp;title=&amp;width=503.2" alt="image.png"><br><a name="nwCm7"></a></p><h1 id="Eureka客户端-服务端详解及源码-gt-自己看笔记"><a href="#Eureka客户端-服务端详解及源码-gt-自己看笔记" class="headerlink" title="Eureka客户端/服务端详解及源码->自己看笔记"></a>Eureka客户端/服务端详解及源码-&gt;自己看笔记</h1><p><a href="https://www.yuque.com/attachments/yuque/0/2022/pdf/26091703/1663933675791-d836f326-330a-4138-9a59-bc2d5aa26c7c.pdf?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2022/pdf/26091703/1663933675791-d836f326-330a-4138-9a59-bc2d5aa26c7c.pdf%22,%22name%22:%22Spring_Cloud_%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0.pdf%22,%22size%22:23408741,%22type%22:%22application/pdf%22,%22ext%22:%22pdf%22,%22source%22:%22%22,%22status%22:%22done%22,%22mode%22:%22title%22,%22download%22:true,%22taskId%22:%22u3570d06e-2283-467c-a73f-75d9b6b4a06%22,%22taskType%22:%22upload%22,%22__spacing%22:%22both%22,%22id%22:%22u4417092f%22,%22margin%22:%7B%22top%22:true,%22bottom%22:true%7D,%22card%22:%22file%22%7D">Spring_Cloud_微服务课程笔记.pdf</a><br><a name="BTx6S"></a></p><h1 id="Ribbon负载均衡介绍"><a href="#Ribbon负载均衡介绍" class="headerlink" title="Ribbon负载均衡介绍"></a>Ribbon负载均衡介绍</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663933697924-5e279832-87d9-4e1b-ba29-32ca9bce9999.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=381&amp;id=u2bea4ccf&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=476&amp;originWidth=1101&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=148604&amp;status=done&amp;style=none&amp;taskId=ud2a74f91-7f8f-4b08-ab8f-4286975335d&amp;title=&amp;width=880.8" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663933703526-bcaef69e-b4e1-4d8d-8d08-e0ae0597b387.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=446&amp;id=ubc9b85b8&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=557&amp;originWidth=733&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=91165&amp;status=done&amp;style=none&amp;taskId=udce1a980-8ff8-4afb-b374-40d844903ba&amp;title=&amp;width=586.4" alt="image.png"><br><a name="rc4Zf"></a></p><h1 id="使用ribbon"><a href="#使用ribbon" class="headerlink" title="使用ribbon"></a>使用ribbon</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663934018136-c61d1063-52c2-40e3-8730-4f35fcbacc7d.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=150&amp;id=u6e65199b&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=188&amp;originWidth=1005&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=31620&amp;status=done&amp;style=none&amp;taskId=u4d631c50-c143-4ad0-a702-3cb57bc4e2a&amp;title=&amp;width=804" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663934049132-eccdcfe8-3f3a-415b-9dd0-1a31af9f1e0b.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=251&amp;id=u77b4b23f&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=314&amp;originWidth=794&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=75113&amp;status=done&amp;style=none&amp;taskId=u4539b7ec-b650-4599-97c1-2aedd8f2aa0&amp;title=&amp;width=635.2" alt="image.png"><br><a name="IUxv4"></a></p><h2 id="消费者"><a href="#消费者" class="headerlink" title="消费者"></a>消费者</h2><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@EnableDiscoveryClient</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AutodeliverApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>AutodeliverApplication<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//使用RestTemplate模板对象进行远程调用</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@LoadBalanced</span> <span class="token comment" spellcheck="true">//ribbon负载均衡</span>    <span class="token keyword">public</span> RestTemplate <span class="token function">getRestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><a name="fE8Zr"></a></p><h2 id="复制一份提供者"><a href="#复制一份提供者" class="headerlink" title="复制一份提供者"></a>复制一份提供者</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663934165124-cb5f7d0f-0c75-488e-9626-ca971f6a6b3b.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=54&amp;id=ube4555dc&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=57&amp;originWidth=333&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=3450&amp;status=done&amp;style=none&amp;taskId=ub56cbade-b0f0-41e4-879e-ab4e05659a3&amp;title=&amp;width=314.3999938964844" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663934180179-17127e20-3c7b-41cf-83b1-7a756511c5c5.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=199&amp;id=u39ea5d21&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=249&amp;originWidth=807&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=22495&amp;status=done&amp;style=none&amp;taskId=u83b04478-ed0b-49d6-8844-8e7dbf4e9c1&amp;title=&amp;width=645.6" alt="image.png"> <img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663934237326-3cbeced2-abdb-4300-b472-14e24d00d383.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=130&amp;id=ub89633e2&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=163&amp;originWidth=833&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=209181&amp;status=done&amp;style=none&amp;taskId=u34d23ddf-9ef1-4510-b60d-b5f10d3c2fb&amp;title=&amp;width=666.4" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663934220527-bcfbe4ff-6b91-403e-9deb-13e9169317df.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=134&amp;id=ud09eab72&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=168&amp;originWidth=512&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=139066&amp;status=done&amp;style=none&amp;taskId=u238c4ca4-49f8-4e7f-abb8-ceb49d9c0cd&amp;title=&amp;width=409.6" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663934266728-a0ad84ce-4e0a-49c1-8bcc-703dda6c4b14.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=390&amp;id=u4362a39f&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=487&amp;originWidth=889&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=711469&amp;status=done&amp;style=none&amp;taskId=u88c584b3-b2a6-4014-a0e4-ba021c3602c&amp;title=&amp;width=711.2" alt="image.png"><br><a name="tgJYn"></a></p><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663934401890-cc61cac5-2b5d-4fea-8846-03b8998f694d.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=393&amp;id=u9d2f3495&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=491&amp;originWidth=1852&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=119754&amp;status=done&amp;style=none&amp;taskId=u64fd8c7f-3a62-4b3a-8bc8-aa8cfdde196&amp;title=&amp;width=1481.6" alt="image.png"><br><a name="bnV1O"></a></p><h2 id="消费者远程调用使用ribbon作负载均衡"><a href="#消费者远程调用使用ribbon作负载均衡" class="headerlink" title="消费者远程调用使用ribbon作负载均衡"></a>消费者远程调用使用ribbon作负载均衡</h2><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/autodeliver"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AutodeliverController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> RestTemplate restTemplate<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> DiscoveryClient discoveryClient<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 通过eureka server集群获取调用实例     * @param userId     * @return     */</span><span class="token comment" spellcheck="true">//    @GetMapping("/checkState/{userId}")</span><span class="token comment" spellcheck="true">//    public Integer findResumeOpenState(@PathVariable Long userId) {</span><span class="token comment" spellcheck="true">//        //1,从eureka server中获取lagou-service-resume服务的实例信息</span><span class="token comment" spellcheck="true">//        List&lt;ServiceInstance> instances = discoveryClient.getInstances("LAGOU-SERVICE-RESUME");</span><span class="token comment" spellcheck="true">//        //2,如果有多个就选一个使用(负载均衡的过程)</span><span class="token comment" spellcheck="true">//        ServiceInstance serviceInstance = instances.get(0);</span><span class="token comment" spellcheck="true">//        //3,从元数据信息中获取host port</span><span class="token comment" spellcheck="true">//        String host = serviceInstance.getHost();</span><span class="token comment" spellcheck="true">//        int port = serviceInstance.getPort();</span><span class="token comment" spellcheck="true">//        String url = "http://" + host + ":" + port + "/resume/openstate/" + userId;</span><span class="token comment" spellcheck="true">//        System.out.println("从eureka集群中获取的url:\n"+url);</span><span class="token comment" spellcheck="true">//        Integer forObject = restTemplate.</span><span class="token comment" spellcheck="true">//                getForObject(url, Integer.class);</span><span class="token comment" spellcheck="true">//        return forObject;</span><span class="token comment" spellcheck="true">//    }</span>    <span class="token comment" spellcheck="true">/**     * 使用ribbon负载均衡     * @param userId     * @return     */</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/checkState/{userId}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Integer <span class="token function">findResumeOpenState</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> Long userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//使用ribbin不需要自己获取服务实例,然后选择一个访问(自己实现负载均衡)</span>        String serverName<span class="token operator">=</span><span class="token string">"lagou-service-resume"</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//注册中心里的服务名称</span>        String url <span class="token operator">=</span> <span class="token string">"http://"</span><span class="token operator">+</span>serverName<span class="token operator">+</span><span class="token string">"/resume/openstate/"</span> <span class="token operator">+</span> userId<span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"从eureka集群中获取的url:\n"</span><span class="token operator">+</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>        Integer forObject <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span>                <span class="token function">getForObject</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> Integer<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> forObject<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><a name="YDK9j"></a></p><h2 id="为了测试-改造提供者-让每次调用返回其对应端口"><a href="#为了测试-改造提供者-让每次调用返回其对应端口" class="headerlink" title="为了测试,改造提供者,让每次调用返回其对应端口"></a>为了测试,改造提供者,让每次调用返回其对应端口</h2><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//两个提供者都要进行方法改造</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/resume"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ResumeController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> ResumeService resumeService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${server.port}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer port<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//导入yaml文件中的端口号</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/openstate/{userId}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">findDefaultResumeState</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> Long userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"路由参数: "</span><span class="token operator">+</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        return resumeService.findDefaultResumeByUserId(userId).getIsOpenResume();</span>        <span class="token keyword">return</span> port<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><a name="XcsqQ"></a></p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663935179259-9dd3cbf6-5b89-4dfc-9244-826282973196.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=182&amp;id=u844a639b&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=228&amp;originWidth=746&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=13461&amp;status=done&amp;style=none&amp;taskId=u3557e03e-0793-4d58-8009-7f911d9e64a&amp;title=&amp;width=596.8" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663935182983-86d3da27-a8f9-409a-9a84-e4ad4c405512.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=126&amp;id=ub10c6d9d&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=158&amp;originWidth=702&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=12701&amp;status=done&amp;style=none&amp;taskId=u01011e8f-ab22-4e4c-8367-f6cf4fded76&amp;title=&amp;width=561.6" alt="image.png"><br><a name="lfZPN"></a></p><h1 id="Ribbon负载均衡策略"><a href="#Ribbon负载均衡策略" class="headerlink" title="Ribbon负载均衡策略"></a>Ribbon负载均衡策略</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663935311945-a6b3e703-48ca-4be3-a38a-7d11f72b8239.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=378&amp;id=u9034ef31&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=473&amp;originWidth=717&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=133022&amp;status=done&amp;style=none&amp;taskId=u151e3f21-d132-4bb6-a36c-603268041b8&amp;title=&amp;width=573.6" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663935341049-d84fe188-0fd6-4578-87b6-384cc4c660bc.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=284&amp;id=uea16db30&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=355&amp;originWidth=705&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=240414&amp;status=done&amp;style=none&amp;taskId=ucec63927-fb8d-45e7-9d02-afe298e4896&amp;title=&amp;width=564" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663935381069-0c5bacad-5d1f-47ce-a708-05249873da44.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=787&amp;id=u6c1fe0b1&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=790&amp;originWidth=621&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=182265&amp;status=done&amp;style=none&amp;taskId=ud6ef639e-0109-4750-a23a-5687a63865d&amp;title=&amp;width=618.8000183105469" alt="image.png"><br><a name="r6Xqi"></a></p><h1 id="调整负载均衡策略"><a href="#调整负载均衡策略" class="headerlink" title="调整负载均衡策略"></a>调整负载均衡策略</h1><p><a name="MEgAe"></a></p><h2 id="消费者的yaml添加配置"><a href="#消费者的yaml添加配置" class="headerlink" title="消费者的yaml添加配置"></a>消费者的yaml添加配置</h2><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">lagou-service-resume</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#针对被调用方的微服务,不加就这个就是全局生效</span>  <span class="token key atrule">ribbon</span><span class="token punctuation">:</span>    <span class="token key atrule">NFLoadBalancerRuleClassName</span><span class="token punctuation">:</span> com.netflix.loadbalancer.RoundRobinRule <span class="token comment" spellcheck="true">#跳转负载均衡策略</span></code></pre><p><a name="MWLo4"></a></p><h1 id="ribbon源码剖析-看课堂笔记"><a href="#ribbon源码剖析-看课堂笔记" class="headerlink" title="ribbon源码剖析(看课堂笔记)"></a>ribbon源码剖析(看课堂笔记)</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663937253267-3f55b4fd-18bb-41b5-a849-1578ba9d458b.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=583&amp;id=ud1743ca3&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=729&amp;originWidth=1019&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=57198&amp;status=done&amp;style=none&amp;taskId=u9de4a6c1-27c3-432d-8881-320f7b4c1c8&amp;title=&amp;width=815.2" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663937275527-df2868b8-c473-4e4c-a176-b0c21abc1b13.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=423&amp;id=u77391294&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=529&amp;originWidth=895&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=84988&amp;status=done&amp;style=none&amp;taskId=ua35460a7-ce47-4e17-bec4-7b4368e0f0b&amp;title=&amp;width=716" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663937289012-7903d778-9191-4bce-bb25-0c6394cf1e3a.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=217&amp;id=udcb8aa81&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=271&amp;originWidth=1064&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=75832&amp;status=done&amp;style=none&amp;taskId=u3cb2593e-109f-410d-8170-88e35683161&amp;title=&amp;width=851.2" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663937295066-86e3b139-bf1f-4e79-88c5-b9788cf48b3b.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=597&amp;id=u470df9e1&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=746&amp;originWidth=984&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=105242&amp;status=done&amp;style=none&amp;taskId=u3e4c7703-b199-4df8-9337-7a8b4a94452&amp;title=&amp;width=787.2" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663937303157-ee7ef2a9-43ef-4b93-a662-92a9ba0aa43b.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=241&amp;id=u0717e4cc&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=301&amp;originWidth=996&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=96564&amp;status=done&amp;style=none&amp;taskId=uf226ed43-52d4-45f1-855a-7154f2642de&amp;title=&amp;width=796.8" alt="image.png"><br><a name="vT4oQ"></a></p><h1 id="Hystrix熔断器–理论基础"><a href="#Hystrix熔断器–理论基础" class="headerlink" title="Hystrix熔断器–理论基础"></a>Hystrix熔断器–理论基础</h1><p><a name="ivMu5"></a></p><h2 id="微服务中的雪崩"><a href="#微服务中的雪崩" class="headerlink" title="微服务中的雪崩"></a>微服务中的雪崩</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663941064687-66281ce2-dcdf-4f61-9faf-04f65c0cc9d5.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=218&amp;id=u214be7f5&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=272&amp;originWidth=1025&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=46758&amp;status=done&amp;style=none&amp;taskId=u63304b8d-6109-4b07-bdea-8a0d8139995&amp;title=&amp;width=820" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663941067826-91eff4fc-99f0-409d-a1fd-7aa0853f3a06.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=569&amp;id=uee4554dd&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=711&amp;originWidth=887&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=56506&amp;status=done&amp;style=none&amp;taskId=u1bb2e8b0-6bf1-4a81-9b54-ed9294fea38&amp;title=&amp;width=709.6" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663941073302-8fd74b9d-2762-4ac7-bef9-1d3bc8e51a1e.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=522&amp;id=u137768e7&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=652&amp;originWidth=901&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=51037&amp;status=done&amp;style=none&amp;taskId=uce9c811d-1a2a-44b6-9f4e-2acb5fb7188&amp;title=&amp;width=720.8" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663941080266-8b66919b-e389-4af8-8cbd-de493ec71b24.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=291&amp;id=u9855cd2a&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=364&amp;originWidth=875&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=71289&amp;status=done&amp;style=none&amp;taskId=u8bba5000-b8e5-4e73-943f-fbbf3d0f26b&amp;title=&amp;width=700" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663941312423-c9d4d00d-75d5-43d4-b78b-f78ad2a982f6.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=170&amp;id=ude8e2d00&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=212&amp;originWidth=987&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=45841&amp;status=done&amp;style=none&amp;taskId=ufa706163-3a4f-46d3-a21b-73bd021d8da&amp;title=&amp;width=789.6" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663941410746-cb13abf9-4054-407c-8fe9-3951c0651abf.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=278&amp;id=uaaa061a0&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=347&amp;originWidth=1070&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=128041&amp;status=done&amp;style=none&amp;taskId=u2bd7a207-fc1b-4788-9969-067ddf6c212&amp;title=&amp;width=856" alt="image.png"><br><a name="AjxpC"></a></p><h2 id="雪崩效应解决方案"><a href="#雪崩效应解决方案" class="headerlink" title="雪崩效应解决方案"></a>雪崩效应解决方案</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663941583400-8fff3124-2aa7-4176-812c-a33897da256d.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=200&amp;id=u6d5c5b1a&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=250&amp;originWidth=1043&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=65439&amp;status=done&amp;style=none&amp;taskId=u17523c93-e4ce-481a-bb84-ac5e11a34d7&amp;title=&amp;width=834.4" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663941630854-b2ccb4cb-e840-4535-836d-222fd8b076dc.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=426&amp;id=u5f815281&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=533&amp;originWidth=1022&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=157740&amp;status=done&amp;style=none&amp;taskId=u841cbce2-2bd9-449a-99b1-6f32659c246&amp;title=&amp;width=817.6" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663941815913-f19e629e-1666-4272-94fb-83a8b431eee2.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=295&amp;id=u0aa9328b&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=369&amp;originWidth=1010&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=98447&amp;status=done&amp;style=none&amp;taskId=ud1f3e5c3-bd14-4a1b-b49a-68c9387bcf8&amp;title=&amp;width=808" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663941959609-707a2216-48e3-4d7e-bd0b-7ca98825b3df.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=54&amp;id=uc68afdad&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=68&amp;originWidth=1025&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=4370&amp;status=done&amp;style=none&amp;taskId=ubc6bda59-df72-4fb1-b0bf-4f9f260d0c8&amp;title=&amp;width=820" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663941969612-d1dc5c88-1895-4fce-bcdb-e3f469de7a2f.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=370&amp;id=u4cba8764&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=463&amp;originWidth=1042&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=133910&amp;status=done&amp;style=none&amp;taskId=u06b63a4b-5e71-4142-8eb5-b0feae326b8&amp;title=&amp;width=833.6" alt="image.png"><br><a name="aqFdt"></a></p><h2 id="hystrix简介"><a href="#hystrix简介" class="headerlink" title="hystrix简介"></a>hystrix简介</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663941996927-d78cd4c8-b880-4a71-ba28-ffa13eaf6787.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=591&amp;id=ewCjN&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=739&amp;originWidth=1034&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=243714&amp;status=done&amp;style=none&amp;taskId=u0fb21753-2eeb-4d77-af49-a33453ecf46&amp;title=&amp;width=827.2" alt="image.png"><br><a name="PHHDB"></a></p><h1 id="hystrix熔断应用"><a href="#hystrix熔断应用" class="headerlink" title="hystrix熔断应用"></a>hystrix熔断应用</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663942650924-85786413-ca32-41ab-9905-6cfac0f5c673.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=320&amp;id=u6236b4f6&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=400&amp;originWidth=674&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=42614&amp;status=done&amp;style=none&amp;taskId=u60911a47-09a8-47a4-bd49-78138065f44&amp;title=&amp;width=539.2" alt="image.png"><br><a name="PV0oq"></a></p><h2 id="提供者-resume-接口模拟超时"><a href="#提供者-resume-接口模拟超时" class="headerlink" title="提供者(resume)接口模拟超时"></a>提供者(resume)接口模拟超时</h2><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/resume"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ResumeController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> ResumeService resumeService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${server.port}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer port<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//导入yaml文件中的端口号</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/openstate/{userId}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">findDefaultResumeState</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> Long userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            Thread<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//线程休眠10s,模拟故障(处理超时)</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"路由参数: "</span><span class="token operator">+</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        return resumeService.findDefaultResumeByUserId(userId).getIsOpenResume();</span>        <span class="token keyword">return</span> port<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><a name="iXfP7"></a></p><h2 id="消费者-autodeliver-引入依赖"><a href="#消费者-autodeliver-引入依赖" class="headerlink" title="消费者(autodeliver)引入依赖"></a>消费者(autodeliver)引入依赖</h2><pre class=" language-xml"><code class="language-xml">  <span class="token comment" spellcheck="true">&lt;!--熔断器hystrix--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-netflix-hystrix<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><p><a name="b93i5"></a></p><h2 id="消费者启动类开启熔断器"><a href="#消费者启动类开启熔断器" class="headerlink" title="消费者启动类开启熔断器"></a>消费者启动类开启熔断器</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663942929487-c56bf271-51ba-4cb8-b67e-12785e00cfb3.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0.1619&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=257&amp;id=u0ea72afc&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=332&amp;originWidth=651&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=true&amp;size=116706&amp;status=done&amp;style=none&amp;taskId=ud161ea27-0d31-4d57-8239-95a6737ccaf&amp;title=%E5%8F%AF%E4%BB%A5%E7%94%A8%E8%BF%99%E4%B8%AA%E4%BB%A3%E6%9B%BF%E4%B8%89%E4%B8%AA%E6%B3%A8%E8%A7%A3&amp;width=504" alt="image.png" title="可以用这个代替三个注解"></p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@EnableDiscoveryClient</span><span class="token comment" spellcheck="true">//@EnableHystrix //开启Hystrix功能</span><span class="token annotation punctuation">@EnableCircuitBreaker</span> <span class="token comment" spellcheck="true">//开启熔断器功能</span><span class="token comment" spellcheck="true">//@SpringCloudApplication == @SpringBootApplication+@EnableDiscoveryClient+@EnableCircuitBreaker</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AutodeliverApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>AutodeliverApplication<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//使用RestTemplate模板对象进行远程调用</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@LoadBalanced</span> <span class="token comment" spellcheck="true">//ribbon负载均衡</span>    <span class="token keyword">public</span> RestTemplate <span class="token function">getRestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><a name="keR3x"></a></p><h2 id="消费者添加hystrix控制–熔断"><a href="#消费者添加hystrix控制–熔断" class="headerlink" title="消费者添加hystrix控制–熔断"></a>消费者添加hystrix控制–熔断</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663943805955-99801a8b-1f5e-49ba-b88f-3a488f80bccb.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=434&amp;id=ub6fb237a&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=542&amp;originWidth=1590&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=969479&amp;status=done&amp;style=none&amp;taskId=udb546c50-3a7f-4dd8-92c8-7f5c7728197&amp;title=&amp;width=1272" alt="image.png"></p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/autodeliver"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AutodeliverController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> RestTemplate restTemplate<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> DiscoveryClient discoveryClient<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 使用ribbon负载均衡     *     * @param userId     * @return     */</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/checkState/{userId}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Integer <span class="token function">findResumeOpenState</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> Long userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//使用ribbin不需要自己获取服务实例,然后选择一个访问(自己实现负载均衡)</span>        String serverName <span class="token operator">=</span> <span class="token string">"lagou-service-resume"</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//注册中心里的服务名称</span>        String url <span class="token operator">=</span> <span class="token string">"http://"</span> <span class="token operator">+</span> serverName <span class="token operator">+</span> <span class="token string">"/resume/openstate/"</span> <span class="token operator">+</span> userId<span class="token punctuation">;</span>        Integer forObject <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> Integer<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> forObject<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 模拟超时,添加hystrix控制     *     * @param userId     * @return     */</span>    <span class="token annotation punctuation">@HystrixCommand</span><span class="token punctuation">(</span>commandProperties <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//细节配置</span>            <span class="token comment" spellcheck="true">//每个属性都是一个HystrixProperty</span>            <span class="token annotation punctuation">@HystrixProperty</span><span class="token punctuation">(</span>                    name <span class="token operator">=</span> <span class="token string">"execution.isolation.thread.timeoutInMilliseconds"</span><span class="token punctuation">,</span>                    value <span class="token operator">=</span> <span class="token string">"2000"</span>            <span class="token punctuation">)</span><span class="token punctuation">}</span>    <span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//熔断控制</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/checkStateTimeout/{userId}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Integer <span class="token function">findResumeOpenStateTimeout</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> Long userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//使用ribbin不需要自己获取服务实例,然后选择一个访问(自己实现负载均衡)</span>        String serverName <span class="token operator">=</span> <span class="token string">"lagou-service-resume"</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//注册中心里的服务名称</span>        String url <span class="token operator">=</span> <span class="token string">"http://"</span> <span class="token operator">+</span> serverName <span class="token operator">+</span> <span class="token string">"/resume/openstate/"</span> <span class="token operator">+</span> userId<span class="token punctuation">;</span>        Integer forObject <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> Integer<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> forObject<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663944020436-c052217a-dd0b-4b96-bdb1-056fbd80d643.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=466&amp;id=u7bb082c6&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=583&amp;originWidth=1139&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=81241&amp;status=done&amp;style=none&amp;taskId=u39d65eec-6609-49b5-83f4-71923c5be2b&amp;title=&amp;width=911.2" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663944030403-f08db9c9-07ca-4332-b44f-cfadc2cc5571.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=414&amp;id=u8b7fa464&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=517&amp;originWidth=937&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=121973&amp;status=done&amp;style=none&amp;taskId=ub53544cd-e8fc-45d6-a867-79b6171fd5e&amp;title=&amp;width=749.6" alt="image.png"><br><a name="EIfvH"></a></p><h2 id="消费者使用服务降级"><a href="#消费者使用服务降级" class="headerlink" title="消费者使用服务降级"></a>消费者使用服务降级</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663944837529-699a0e87-6301-4860-93fc-b14d0a36e818.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=267&amp;id=u2d546a1d&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=334&amp;originWidth=1515&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=149942&amp;status=done&amp;style=none&amp;taskId=u4acc9cd2-5994-46c4-9b66-da6dcba528a&amp;title=&amp;width=1212" alt="image.png"></p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/autodeliver"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AutodeliverController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> RestTemplate restTemplate<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> DiscoveryClient discoveryClient<span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">/**     * 服务降级     * @param userId     * @return     */</span>    <span class="token annotation punctuation">@HystrixCommand</span><span class="token punctuation">(</span>commandProperties <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//细节配置</span>            <span class="token comment" spellcheck="true">//每个属性都是一个HystrixProperty</span>            <span class="token annotation punctuation">@HystrixProperty</span><span class="token punctuation">(</span>                    name <span class="token operator">=</span> <span class="token string">"execution.isolation.thread.timeoutInMilliseconds"</span><span class="token punctuation">,</span>                    value <span class="token operator">=</span> <span class="token string">"2000"</span>            <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>fallbackMethod <span class="token operator">=</span> <span class="token string">"myFallback"</span> <span class="token comment" spellcheck="true">//回退方法</span>    <span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//熔断控制</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/checkStateTimeoutFallback/{userId}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Integer <span class="token function">findResumeOpenStateTimeoutFallback</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> Long userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//使用ribbin不需要自己获取服务实例,然后选择一个访问(自己实现负载均衡)</span>        String serverName <span class="token operator">=</span> <span class="token string">"lagou-service-resume"</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//注册中心里的服务名称</span>        String url <span class="token operator">=</span> <span class="token string">"http://"</span> <span class="token operator">+</span> serverName <span class="token operator">+</span> <span class="token string">"/resume/openstate/"</span> <span class="token operator">+</span> userId<span class="token punctuation">;</span>        Integer forObject <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> Integer<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> forObject<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 回退方法,返回预设默认值     * @param userId     * @return     */</span>    <span class="token keyword">public</span> Integer <span class="token function">myFallback</span><span class="token punctuation">(</span>Long userId<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//兜底数据</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663945097438-e312878f-83e7-4416-9c6d-6072f7a79e15.png#clientId=u0ceb02ad-d0ba-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=126&amp;id=u5eefa789&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=157&amp;originWidth=730&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=11817&amp;status=done&amp;style=none&amp;taskId=u235c57d4-77bb-46f0-9ffb-eeaad82f7e7&amp;title=&amp;width=584" alt="image.png"><br><a name="nKdFs"></a></p><h1 id="hystrix舱壁模式-线程池隔离策略"><a href="#hystrix舱壁模式-线程池隔离策略" class="headerlink" title="hystrix舱壁模式(线程池隔离策略)"></a>hystrix舱壁模式(线程池隔离策略)</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663976603013-892ae2f9-cb69-4b53-a870-8c0c0c251f69.png#clientId=u7eb6b15c-32e0-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=542&amp;id=ud7bae98e&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=678&amp;originWidth=1032&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=123930&amp;status=done&amp;style=none&amp;taskId=u859ef887-d0c3-4db5-ad23-dac74c24dfd&amp;title=&amp;width=825.6" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663976622219-407eed2c-007a-42d5-bc7c-4cd6bb0f917f.png#clientId=u7eb6b15c-32e0-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=152&amp;id=ua18c9594&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=190&amp;originWidth=1003&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=69873&amp;status=done&amp;style=none&amp;taskId=ud395f901-fbda-4947-8c28-56cfd8efbec&amp;title=&amp;width=802.4" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663976626504-ca165e68-2e8d-4d1d-b8b5-bafe66fa248f.png#clientId=u7eb6b15c-32e0-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=466&amp;id=uf8cf1b72&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=582&amp;originWidth=770&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=37460&amp;status=done&amp;style=none&amp;taskId=ua858f407-afff-4fc6-a00b-2eefbed2479&amp;title=&amp;width=616" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663976633629-562b6006-84b6-4264-b548-c939adf3591a.png#clientId=u7eb6b15c-32e0-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=382&amp;id=u65efd7e3&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=477&amp;originWidth=778&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=21207&amp;status=done&amp;style=none&amp;taskId=u6a65af6c-ea58-4a8a-9e0a-545a7c18300&amp;title=&amp;width=622.4" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663976647969-7e9df757-d2bd-40f3-914b-1e231302a277.png#clientId=u7eb6b15c-32e0-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=139&amp;id=u54effddc&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=174&amp;originWidth=1047&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=48491&amp;status=done&amp;style=none&amp;taskId=u5390b2f7-7d1b-4d14-84c7-7f3fbdc981a&amp;title=&amp;width=837.6" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663976665161-42ec8ee4-f709-4e00-9585-4af5c6742d82.png#clientId=u7eb6b15c-32e0-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=726&amp;id=uf8f0ce1e&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=908&amp;originWidth=1051&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=462559&amp;status=done&amp;style=none&amp;taskId=u266f3fbe-8cde-4198-b5b4-26970efa053&amp;title=&amp;width=840.8" alt="image.png"><br><a name="aHrzo"></a></p><h2 id="舱壁模式配置"><a href="#舱壁模式配置" class="headerlink" title="舱壁模式配置"></a>舱壁模式配置</h2><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/autodeliver"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AutodeliverController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> RestTemplate restTemplate<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> DiscoveryClient discoveryClient<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 模拟超时,添加hystrix控制     *     * @param userId     * @return     */</span>    <span class="token annotation punctuation">@HystrixCommand</span><span class="token punctuation">(</span>            <span class="token comment" spellcheck="true">//线程池标识,要保持唯一,不唯一就会共用</span>            threadPoolKey <span class="token operator">=</span> <span class="token string">"findResumeOpenStateTimeout"</span><span class="token punctuation">,</span>            <span class="token comment" spellcheck="true">//线程池细节配置</span>            threadPoolProperties <span class="token operator">=</span> <span class="token punctuation">{</span>                    <span class="token annotation punctuation">@HystrixProperty</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"coreSize"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//线程数</span>                    <span class="token annotation punctuation">@HystrixProperty</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"maxQueueSize"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"20"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//允许线程等待的队列长度</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            commandProperties <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//细节配置</span>                    <span class="token comment" spellcheck="true">//每个属性都是一个HystrixProperty</span>                    <span class="token annotation punctuation">@HystrixProperty</span><span class="token punctuation">(</span>                            name <span class="token operator">=</span> <span class="token string">"execution.isolation.thread.timeoutInMilliseconds"</span><span class="token punctuation">,</span>                            value <span class="token operator">=</span> <span class="token string">"2000"</span>                    <span class="token punctuation">)</span><span class="token punctuation">}</span>    <span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//熔断控制</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/checkStateTimeout/{userId}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Integer <span class="token function">findResumeOpenStateTimeout</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> Long userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//使用ribbin不需要自己获取服务实例,然后选择一个访问(自己实现负载均衡)</span>        String serverName <span class="token operator">=</span> <span class="token string">"lagou-service-resume"</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//注册中心里的服务名称</span>        String url <span class="token operator">=</span> <span class="token string">"http://"</span> <span class="token operator">+</span> serverName <span class="token operator">+</span> <span class="token string">"/resume/openstate/"</span> <span class="token operator">+</span> userId<span class="token punctuation">;</span>        Integer forObject <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> Integer<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> forObject<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 服务降级     *     * @param userId     * @return     */</span>    <span class="token annotation punctuation">@HystrixCommand</span><span class="token punctuation">(</span>            <span class="token comment" spellcheck="true">//线程池标识,要保持唯一,不唯一就会共用</span>            threadPoolKey <span class="token operator">=</span> <span class="token string">"findResumeOpenStateTimeoutFallback"</span><span class="token punctuation">,</span>            <span class="token comment" spellcheck="true">//线程池细节配置</span>            threadPoolProperties <span class="token operator">=</span> <span class="token punctuation">{</span>                    <span class="token annotation punctuation">@HystrixProperty</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"coreSize"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"2"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//线程数</span>                    <span class="token annotation punctuation">@HystrixProperty</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"maxQueueSize"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"20"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//允许线程等待的队列长度</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            commandProperties <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//细节配置</span>                    <span class="token comment" spellcheck="true">//每个属性都是一个HystrixProperty</span>                    <span class="token annotation punctuation">@HystrixProperty</span><span class="token punctuation">(</span>                            name <span class="token operator">=</span> <span class="token string">"execution.isolation.thread.timeoutInMilliseconds"</span><span class="token punctuation">,</span>                            value <span class="token operator">=</span> <span class="token string">"2000"</span>                    <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> fallbackMethod <span class="token operator">=</span> <span class="token string">"myFallback"</span> <span class="token comment" spellcheck="true">//回退方法</span>    <span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//熔断控制</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/checkStateTimeoutFallback/{userId}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Integer <span class="token function">findResumeOpenStateTimeoutFallback</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> Long userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//使用ribbin不需要自己获取服务实例,然后选择一个访问(自己实现负载均衡)</span>        String serverName <span class="token operator">=</span> <span class="token string">"lagou-service-resume"</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//注册中心里的服务名称</span>        String url <span class="token operator">=</span> <span class="token string">"http://"</span> <span class="token operator">+</span> serverName <span class="token operator">+</span> <span class="token string">"/resume/openstate/"</span> <span class="token operator">+</span> userId<span class="token punctuation">;</span>        Integer forObject <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> Integer<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> forObject<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 回退方法,返回预设默认值     *     * @param userId     * @return     */</span>    <span class="token keyword">public</span> Integer <span class="token function">myFallback</span><span class="token punctuation">(</span>Long userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//兜底数据</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663977492365-0f33274d-91d9-409c-979d-7c1b18301ba3.png#clientId=u7eb6b15c-32e0-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=322&amp;id=ua7d90fd4&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=402&amp;originWidth=1044&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=173182&amp;status=done&amp;style=none&amp;taskId=u58c6ed6d-9ac8-4144-8881-26f28625d05&amp;title=&amp;width=835.2" alt="image.png"><br><a name="UEPcn"></a></p><h1 id="hystrix工作流程与高级应用"><a href="#hystrix工作流程与高级应用" class="headerlink" title="hystrix工作流程与高级应用"></a>hystrix工作流程与高级应用</h1><p><a name="zbcgl"></a></p><h2 id="定制工作流程细节"><a href="#定制工作流程细节" class="headerlink" title="定制工作流程细节"></a>定制工作流程细节</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663980751527-33d5aa8f-77d7-4593-b8f6-26f4b0e8e2ed.png#clientId=u76d5d968-913c-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=652&amp;id=u91aba994&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=815&amp;originWidth=1414&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=113558&amp;status=done&amp;style=none&amp;taskId=u978b24ec-7b6e-4208-a531-08d77604b7f&amp;title=&amp;width=1131.2" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663981225882-22ad551a-2860-4452-9af0-6815d8244b20.png#clientId=u76d5d968-913c-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=432&amp;id=u7fa3f906&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=540&amp;originWidth=1061&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=120405&amp;status=done&amp;style=none&amp;taskId=u5698a13e-4493-42ed-a1aa-5b14e0db755&amp;title=&amp;width=848.8" alt="image.png"></p><pre class=" language-java"><code class="language-java">    <span class="token comment" spellcheck="true">/**     * 服务降级     * 8秒钟内，请求次数达到2个，并且失败率在50%以上，就跳闸     * 跳闸后活动窗⼝设置为3s     * @param userId     * @return     */</span>    <span class="token annotation punctuation">@HystrixCommand</span><span class="token punctuation">(</span>            <span class="token comment" spellcheck="true">//线程池标识,要保持唯一,不唯一就会共用</span>            threadPoolKey <span class="token operator">=</span> <span class="token string">"findResumeOpenStateTimeoutFallback"</span><span class="token punctuation">,</span>            <span class="token comment" spellcheck="true">//线程池细节配置</span>            threadPoolProperties <span class="token operator">=</span> <span class="token punctuation">{</span>                    <span class="token annotation punctuation">@HystrixProperty</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"coreSize"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"2"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//线程数</span>                    <span class="token annotation punctuation">@HystrixProperty</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"maxQueueSize"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"20"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//允许线程等待的队列长度</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            commandProperties <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//细节配置</span>                    <span class="token comment" spellcheck="true">//每个属性都是一个HystrixProperty</span>                    <span class="token annotation punctuation">@HystrixProperty</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"execution.isolation.thread.timeoutInMilliseconds"</span><span class="token punctuation">,</span>                            value <span class="token operator">=</span> <span class="token string">"2000"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token comment" spellcheck="true">//hystrix高级配置,定制工作过程细节</span>                    <span class="token comment" spellcheck="true">//统计时间窗口定义</span>                    <span class="token annotation punctuation">@HystrixProperty</span><span class="token punctuation">(</span>name <span class="token operator">=</span>                            <span class="token string">"metrics.rollingStats.timeInMilliseconds"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"8000"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token comment" spellcheck="true">//统计时间窗口内的最小请求数</span>                    <span class="token annotation punctuation">@HystrixProperty</span><span class="token punctuation">(</span>name <span class="token operator">=</span>                            <span class="token string">"circuitBreaker.requestVolumeThreshold"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"2"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token comment" spellcheck="true">//统计时间窗口内的错误数量百分比阈值</span>                    <span class="token annotation punctuation">@HystrixProperty</span><span class="token punctuation">(</span>name <span class="token operator">=</span>                            <span class="token string">"circuitBreaker.errorThresholdPercentage"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"50"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token comment" spellcheck="true">//自我修复时的活动窗口长度</span>                    <span class="token annotation punctuation">@HystrixProperty</span><span class="token punctuation">(</span>name <span class="token operator">=</span>                            <span class="token string">"circuitBreaker.sleepWindowInMilliseconds"</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">"3000"</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            fallbackMethod <span class="token operator">=</span> <span class="token string">"myFallback"</span> <span class="token comment" spellcheck="true">//回退方法</span>    <span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//熔断控制</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/checkStateTimeoutFallback/{userId}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Integer <span class="token function">findResumeOpenStateTimeoutFallback</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> Long userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//使用ribbin不需要自己获取服务实例,然后选择一个访问(自己实现负载均衡)</span>        String serverName <span class="token operator">=</span> <span class="token string">"lagou-service-resume"</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//注册中心里的服务名称</span>        String url <span class="token operator">=</span> <span class="token string">"http://"</span> <span class="token operator">+</span> serverName <span class="token operator">+</span> <span class="token string">"/resume/openstate/"</span> <span class="token operator">+</span> userId<span class="token punctuation">;</span>        Integer forObject <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> Integer<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> forObject<span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p><a name="WOWaI"></a></p><h2 id="配置状态观察-在消费者的yaml添加以下配置"><a href="#配置状态观察-在消费者的yaml添加以下配置" class="headerlink" title="配置状态观察(在消费者的yaml添加以下配置)"></a>配置状态观察(在消费者的yaml添加以下配置)</h2><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true">#springboot中暴露健康检查等断点接口</span><span class="token key atrule">management</span><span class="token punctuation">:</span>  <span class="token key atrule">endpoints</span><span class="token punctuation">:</span>    <span class="token key atrule">web</span><span class="token punctuation">:</span>      <span class="token key atrule">exposure</span><span class="token punctuation">:</span>        <span class="token key atrule">include</span><span class="token punctuation">:</span> <span class="token string">"*"</span>  <span class="token comment" spellcheck="true">#暴露健康接口的细节</span>  <span class="token key atrule">endpoint</span><span class="token punctuation">:</span>    <span class="token key atrule">health</span><span class="token punctuation">:</span>      <span class="token key atrule">show-details</span><span class="token punctuation">:</span> always</code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663981856578-ec490e0d-c7a7-4c24-afa3-8b27c76e89f7.png#clientId=u76d5d968-913c-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=723&amp;id=u250b1b24&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=904&amp;originWidth=1371&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=65580&amp;status=done&amp;style=none&amp;taskId=u0b52021a-2bd3-44d8-b8e1-3ffccd39825&amp;title=&amp;width=1096.8" alt="image.png"><br><a name="IWlzm"></a></p><h2 id="postman批量请求测试"><a href="#postman批量请求测试" class="headerlink" title="postman批量请求测试"></a>postman批量请求测试</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663982286941-c139db9f-cc0c-4ac6-ae64-bf8649e4bfff.png#clientId=u76d5d968-913c-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=507&amp;id=uaca90333&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=846&amp;originWidth=628&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=27107&amp;status=done&amp;style=none&amp;taskId=ud3c5badd-1e64-45dc-83af-4fe7b0f61da&amp;title=&amp;width=376.3999938964844" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663982300639-9b8feee6-6c20-487b-a791-cd696790bc20.png#clientId=u76d5d968-913c-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=130&amp;id=u9ab24cd0&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=163&amp;originWidth=371&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=7191&amp;status=done&amp;style=none&amp;taskId=ud69dd48d-2669-4149-aef3-76cf472d5eb&amp;title=&amp;width=296.8" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663982379773-0507bb54-c747-46bc-8d7f-5b02eb3f7cef.png#clientId=u76d5d968-913c-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=330&amp;id=uc288ce6e&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=412&amp;originWidth=755&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=37457&amp;status=done&amp;style=none&amp;taskId=uebf1b0de-ffd0-4080-9d93-e27f5908687&amp;title=&amp;width=604" alt="image.png">    <img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663982450629-3465fdba-ee80-43aa-b1e3-f44b95c86949.png#clientId=u76d5d968-913c-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=742&amp;id=u802795bf&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=927&amp;originWidth=1293&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=35948&amp;status=done&amp;style=none&amp;taskId=u9844eb2e-96c2-489f-a7f8-7102c86b8ae&amp;title=&amp;width=1034.4" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663982535392-c8d3e756-2fe7-4de7-8774-9f80d48a2a1d.png#clientId=u76d5d968-913c-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=514&amp;id=uaa876e36&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=642&amp;originWidth=516&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=32484&amp;status=done&amp;style=none&amp;taskId=u2aed6c7a-adae-43b6-a50b-89da70ae908&amp;title=&amp;width=412.8" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663982495264-ded40d71-7da0-4789-8ce9-bbcb8c902f9d.png#clientId=u76d5d968-913c-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=683&amp;id=uef925a6a&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=942&amp;originWidth=717&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=true&amp;size=59286&amp;status=done&amp;style=none&amp;taskId=u2a5e9afb-bd2d-446c-a3ca-3d7f48dda42&amp;title=hystrix%E8%B7%B3%E9%97%B8&amp;width=519.6000366210938" alt="image.png" title="hystrix跳闸"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663982629037-bf6681ff-196a-4e2f-9f12-ff6d6316abb4.png#clientId=u76d5d968-913c-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=740&amp;id=ube79b16d&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=925&amp;originWidth=772&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=true&amp;size=60460&amp;status=done&amp;style=none&amp;taskId=uc330c035-5bc3-4b43-bbd1-f88561c4ffe&amp;title=%E8%BF%87%E4%B8%80%E6%AE%B5%E6%97%B6%E9%97%B4%E5%86%8D%E9%87%8D%E6%96%B0%E8%AF%B7%E6%B1%82%2Chystrix%E8%87%AA%E6%88%91%E4%BF%AE%E5%A4%8D&amp;width=617.6" alt="image.png" title="过一段时间再重新请求,hystrix自我修复"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663982889924-74f55972-a5c7-460d-b308-e3b8960a98b3.png#clientId=u76d5d968-913c-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=53&amp;id=ue0f33318&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=51&amp;originWidth=766&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=21526&amp;status=done&amp;style=none&amp;taskId=u918e102c-33b7-471a-af89-e4f107c37b7&amp;title=&amp;width=791.7999877929688" alt="image.png"><br><a name="DFdzR"></a></p><h1 id="hystrix-Dashboard监控仪表盘–项目"><a href="#hystrix-Dashboard监控仪表盘–项目" class="headerlink" title="hystrix Dashboard监控仪表盘–项目"></a>hystrix Dashboard监控仪表盘–项目</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663982970345-f068d1b1-13f8-4529-915d-af8a6db2ea2b.png#clientId=u76d5d968-913c-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=787&amp;id=u5efc2f20&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=984&amp;originWidth=1014&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=225543&amp;status=done&amp;style=none&amp;taskId=u6b548be2-2fe1-4030-a064-31e45b92685&amp;title=&amp;width=811.2" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663983016706-282ade46-edf9-4a11-97e0-ed8141d2edc9.png#clientId=u76d5d968-913c-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=251&amp;id=ucbf3f50c&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=314&amp;originWidth=1036&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=226973&amp;status=done&amp;style=none&amp;taskId=uee0208db-39b5-430d-b772-704778e2571&amp;title=&amp;width=828.8" alt="image.png"><br><a name="Acdn8"></a></p><h2 id="pom-1"><a href="#pom-1" class="headerlink" title="pom"></a>pom</h2><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lagou-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.malguy<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lagou-cloud-hystrix-dashboard-9000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">></span></span>11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">></span></span>11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--hystrix--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-netflix-hystrix<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--hystrix 仪表盘--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-netflix-hystrix-dashboard            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-netflix-eureka-client            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span></code></pre><p><a name="N8nZt"></a></p><h2 id="启动类添加-EnableHystrixDashboard激活仪表盘"><a href="#启动类添加-EnableHystrixDashboard激活仪表盘" class="headerlink" title="启动类添加@EnableHystrixDashboard激活仪表盘"></a>启动类添加@EnableHystrixDashboard激活仪表盘</h2><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@EnableDiscoveryClient</span><span class="token annotation punctuation">@EnableHystrixDashboard</span> <span class="token comment" spellcheck="true">//开启hystrix dashboard</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HystrixDashboard9000</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>HystrixDashboard9000<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><a name="hxPfI"></a></p><h2 id="yaml-2"><a href="#yaml-2" class="headerlink" title="yaml"></a>yaml</h2><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9000</span><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> lagou<span class="token punctuation">-</span>cloud<span class="token punctuation">-</span>hystrix<span class="token punctuation">-</span>dashboard<span class="token key atrule">eureka</span><span class="token punctuation">:</span>  <span class="token key atrule">client</span><span class="token punctuation">:</span>    <span class="token key atrule">service-url</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#eureka server的路径</span>     <span class="token key atrule">defaultZone</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#可以只写一个地址,eureka server会自动同步</span>      http<span class="token punctuation">:</span>//LagouCloudEurekaServerA<span class="token punctuation">:</span>8761/eureka<span class="token punctuation">,</span>http<span class="token punctuation">:</span>//LagouCloudEurekaServerB<span class="token punctuation">:</span>8762/eureka  <span class="token key atrule">instance</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">#使用ip注册,否则会用主机名注册</span>    <span class="token key atrule">prefer-ip-address</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token comment" spellcheck="true">#自定义实例显示格式,加上版本号,便于多版本管理</span>    <span class="token key atrule">instance-id</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>spring.cloud.client.ip<span class="token punctuation">-</span>address<span class="token punctuation">}</span><span class="token punctuation">:</span>$<span class="token punctuation">{</span>Spring.application.name<span class="token punctuation">}</span><span class="token punctuation">:</span>$<span class="token punctuation">{</span>server.port<span class="token punctuation">}</span><span class="token punctuation">:</span>@project.version@</code></pre><p><a name="Uyk2u"></a></p><h2 id="在被监测的微服务中注册监控servlet（⾃动投递微服务，监控数据就是来⾃于这个微服务）"><a href="#在被监测的微服务中注册监控servlet（⾃动投递微服务，监控数据就是来⾃于这个微服务）" class="headerlink" title="在被监测的微服务中注册监控servlet（⾃动投递微服务，监控数据就是来⾃于这个微服务）"></a>在被监测的微服务中注册监控servlet（⾃动投递微服务，监控数据就是来⾃于这个微服务）</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663983843121-175ee77f-a1b9-4f1b-998d-77bc23c85e0d.png#clientId=u76d5d968-913c-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=150&amp;id=ueade2eba&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=187&amp;originWidth=1030&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=72175&amp;status=done&amp;style=none&amp;taskId=u31585e0f-0266-436d-ab6a-23aa5b43168&amp;title=&amp;width=824" alt="image.png"></p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@EnableDiscoveryClient</span> <span class="token comment" spellcheck="true">//开启注册中心客户端(通用注解)</span><span class="token comment" spellcheck="true">//@EnableHystrix //开启Hystrix功能</span><span class="token annotation punctuation">@EnableCircuitBreaker</span> <span class="token comment" spellcheck="true">//开启熔断器功能</span><span class="token comment" spellcheck="true">//@SpringCloudApplication == @SpringBootApplication+@EnableDiscoveryClient+@EnableCircuitBreaker</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AutodeliverApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>AutodeliverApplication<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//使用RestTemplate模板对象进行远程调用</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@LoadBalanced</span> <span class="token comment" spellcheck="true">//ribbon负载均衡</span>    <span class="token keyword">public</span> RestTemplate <span class="token function">getRestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> ServletRegistrationBean <span class="token function">getServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        HystrixMetricsStreamServlet streamServlet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HystrixMetricsStreamServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ServletRegistrationBean registrationBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletRegistrationBean</span><span class="token punctuation">(</span>streamServlet<span class="token punctuation">)</span><span class="token punctuation">;</span>        registrationBean<span class="token punctuation">.</span><span class="token function">setLoadOnStartup</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        registrationBean<span class="token punctuation">.</span><span class="token function">addUrlMappings</span><span class="token punctuation">(</span><span class="token string">"/actuator/hystrix.stream"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        registrationBean<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"HystrixMetricsStreamServlet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> registrationBean<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><a name="IsRhj"></a></p><h2 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663983916820-63b6e7b8-8177-4f98-8c5f-cd60101cb52c.png#clientId=u76d5d968-913c-4&amp;crop=0&amp;crop=0&amp;crop=0.7273&amp;crop=0.4679&amp;from=paste&amp;height=269&amp;id=ue2843c45&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=463&amp;originWidth=729&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=18104&amp;status=done&amp;style=none&amp;taskId=u9597fb28-804b-4789-87ce-dddca8793a2&amp;title=&amp;width=424" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663983946420-0ef9ab63-2d87-42a9-a964-2b08289e98b2.png#clientId=u76d5d968-913c-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=0.562&amp;from=paste&amp;height=521&amp;id=u911f9651&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=729&amp;originWidth=1042&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=79706&amp;status=done&amp;style=none&amp;taskId=u24627c93-676f-48f0-8e90-8f582c55cca&amp;title=&amp;width=744" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663983986962-221de90a-7b5e-456a-a60e-e7139f32bffd.png#clientId=u76d5d968-913c-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=394&amp;id=ucd6d80bd&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=492&amp;originWidth=1013&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=313252&amp;status=done&amp;style=none&amp;taskId=u8fce0b41-7c46-422a-889b-18bdcc2c1c0&amp;title=&amp;width=810.4" alt="image.png"><br><a name="YHVwe"></a></p><h2 id="访问仪表盘"><a href="#访问仪表盘" class="headerlink" title="访问仪表盘"></a>访问仪表盘</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663986189926-f139c46b-09ee-4641-80d4-9c77d4e4501e.png#clientId=u76d5d968-913c-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=537&amp;id=u9b8e1e6b&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=671&amp;originWidth=1408&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=127088&amp;status=done&amp;style=none&amp;taskId=u5a15f75f-d3a8-4ae9-b737-b1b1aefaab9&amp;title=&amp;width=1126.4" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663986352239-356072dc-13cd-40b3-9ffa-5d6c551ebce8.png#clientId=u76d5d968-913c-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=435&amp;id=ub64656d2&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=544&amp;originWidth=750&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=50145&amp;status=done&amp;style=none&amp;taskId=u85dd0ca6-3bb6-4269-8904-897b7601566&amp;title=&amp;width=600" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663986380443-115fc425-60e4-4d9b-8271-25b6e8eae8fa.png#clientId=u76d5d968-913c-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=282&amp;id=uf9dbf7b6&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=353&amp;originWidth=1038&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=101493&amp;status=done&amp;style=none&amp;taskId=u7133e6f6-d8d4-4c35-bd7b-123a486f35a&amp;title=&amp;width=830.4" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663986389401-1ce79490-2e17-446f-825b-52b5eebcdb00.png#clientId=u76d5d968-913c-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=324&amp;id=u83d44dcc&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=405&amp;originWidth=1025&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=71858&amp;status=done&amp;style=none&amp;taskId=u51b31e91-6581-498c-841e-7d9f3745cb1&amp;title=&amp;width=820" alt="image.png"><br><a name="hEpFH"></a></p><h1 id="hystrix-turbine聚合监控"><a href="#hystrix-turbine聚合监控" class="headerlink" title="hystrix turbine聚合监控"></a>hystrix turbine聚合监控</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663986811705-e8c90527-aeba-4d2d-b192-d1383c6cfb2f.png#clientId=u76d5d968-913c-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=744&amp;id=u1350ceaa&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=930&amp;originWidth=1031&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=187645&amp;status=done&amp;style=none&amp;taskId=u9501f481-fba6-4a43-a404-c4566fd970d&amp;title=&amp;width=824.8" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663987064439-aed3bc4a-3cec-48e5-b4af-4873e1bcfa21.png#clientId=u76d5d968-913c-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=414&amp;id=ufe7a507b&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=518&amp;originWidth=1123&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=35794&amp;status=done&amp;style=none&amp;taskId=u727ff261-8470-467c-a517-c31d3395d4a&amp;title=&amp;width=898.4" alt="image.png"><br><a name="foltz"></a></p><h2 id="新建项⽬lagou-cloud-hystrix-turbine-9001，引⼊依赖坐标"><a href="#新建项⽬lagou-cloud-hystrix-turbine-9001，引⼊依赖坐标" class="headerlink" title="新建项⽬lagou-cloud-hystrix-turbine-9001，引⼊依赖坐标"></a>新建项⽬lagou-cloud-hystrix-turbine-9001，引⼊依赖坐标</h2><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lagou-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.malguy<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lagou-cloud-hystrix-turbine-9001<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">></span></span>11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">></span></span>11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--hystrix turbine聚合监控--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-netflix-turbine<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--        引⼊eureka客户端的两个原因        1、⽼师说过，微服务架构下的服务都尽量注册到服务中⼼去，便于统⼀管 理        2、后续在当前turbine项⽬中我们需要配置turbine聚合的服务，           ⽐如，我们希望聚合lagou-service-autodeliver这个服务的各个实例的hystrix数据流，那随后           我们就需要在application.yml⽂件中配置这个服务名，那么turbine获取服务下具体实例的数据流的           时候需要ip和端⼝等实例信息，那么怎么根据服务名称获取到这些信息呢？           当然可以从eureka服务注册中⼼获取        --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-netflix-eureka-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span></code></pre><p><a name="JVGJ1"></a></p><h2 id="将需要进⾏Hystrix监控的多个微服务配置起来，在⼯程application-yml中开启Turbine及进⾏相关配置"><a href="#将需要进⾏Hystrix监控的多个微服务配置起来，在⼯程application-yml中开启Turbine及进⾏相关配置" class="headerlink" title="将需要进⾏Hystrix监控的多个微服务配置起来，在⼯程application.yml中开启Turbine及进⾏相关配置"></a>将需要进⾏Hystrix监控的多个微服务配置起来，在⼯程application.yml中开启Turbine及进⾏相关配置</h2><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9001</span><span class="token key atrule">Spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> lagou<span class="token punctuation">-</span>cloud<span class="token punctuation">-</span>hystrix<span class="token punctuation">-</span>turbine<span class="token key atrule">eureka</span><span class="token punctuation">:</span>  <span class="token key atrule">client</span><span class="token punctuation">:</span>   <span class="token key atrule">serviceUrl</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># eureka server的路径</span>    <span class="token key atrule">defaultZone</span><span class="token punctuation">:</span>     http<span class="token punctuation">:</span>//lagoucloudeurekaservera<span class="token punctuation">:</span>8761/eureka/<span class="token punctuation">,</span>http<span class="token punctuation">:</span>//lagoucloudeurekaserverb<span class="token punctuation">:</span>8762/eureka/ <span class="token comment" spellcheck="true">#把 eureka 集群中的所有 url 都填写了进来，也可以只写⼀台，因为各个 eureka server 可以同步注册表</span>  <span class="token key atrule">instance</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">#使⽤ip注册，否则会使⽤主机名注册了（此处考虑到对⽼版本的兼容，新版本经过实验都是ip）</span>    <span class="token key atrule">prefer-ip-address</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token comment" spellcheck="true">#⾃定义实例显示格式，加上版本号，便于多版本管理，注意是ip-address，早期版本是ipAddress</span>    <span class="token key atrule">instance-id</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>spring.cloud.client.ip<span class="token punctuation">-</span>address<span class="token punctuation">}</span><span class="token punctuation">:</span>$<span class="token punctuation">{</span>spring.application.name<span class="token punctuation">}</span><span class="token punctuation">:</span>$<span class="token punctuation">{</span>server.port<span class="token punctuation">}</span><span class="token punctuation">:</span>@project.version@<span class="token comment" spellcheck="true">#turbine配置</span><span class="token key atrule">turbine</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true"># appCofing配置需要聚合的服务名称，⽐如这⾥聚合⾃动投递微服务的hystrix监控数据</span>  <span class="token comment" spellcheck="true"># 如果要聚合多个微服务的监控数据，那么可以使⽤英⽂逗号拼接，⽐如 a,b,c</span>  <span class="token key atrule">appConfig</span><span class="token punctuation">:</span> lagou<span class="token punctuation">-</span>service<span class="token punctuation">-</span>autodeliver  <span class="token key atrule">clusterNameExpression</span><span class="token punctuation">:</span> <span class="token string">"'default'"</span> <span class="token comment" spellcheck="true"># 集群默认名称</span></code></pre><p><a name="LGqCM"></a></p><h2 id="在当前项⽬启动类上添加注解-EnableTurbine，开启仪表盘以及Turbine聚合"><a href="#在当前项⽬启动类上添加注解-EnableTurbine，开启仪表盘以及Turbine聚合" class="headerlink" title="在当前项⽬启动类上添加注解@EnableTurbine，开启仪表盘以及Turbine聚合"></a>在当前项⽬启动类上添加注解@EnableTurbine，开启仪表盘以及Turbine聚合</h2><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@EnableDiscoveryClient</span><span class="token annotation punctuation">@EnableTurbine</span> <span class="token comment" spellcheck="true">// 开启聚合功能</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HystrixTurbineApplication9001</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>HystrixTurbineApplication9001<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><a name="OTPAu"></a></p><h2 id="测试-2"><a href="#测试-2" class="headerlink" title="测试"></a>测试</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663987574500-df3cf34c-824e-4c4c-9865-0497059a398a.png#clientId=u76d5d968-913c-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=460&amp;id=u57cb3419&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=575&amp;originWidth=1896&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=101024&amp;status=done&amp;style=none&amp;taskId=u15b99bec-9133-4999-b169-a69e9fe9c42&amp;title=&amp;width=1516.8" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663987620229-ec6d24fa-4091-431d-967d-8d4dce47bbf6.png#clientId=u76d5d968-913c-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=520&amp;id=u3467a9fc&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=650&amp;originWidth=1325&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=124634&amp;status=done&amp;style=none&amp;taskId=u6e666248-96f9-4282-b727-211e132baaf&amp;title=&amp;width=1060" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663987628573-101dfda3-758c-4c06-b348-54606e77afa8.png#clientId=u76d5d968-913c-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=327&amp;id=u356a6f99&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=409&amp;originWidth=720&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=32343&amp;status=done&amp;style=none&amp;taskId=ud9ded454-3503-4ff3-a2fc-8e012b6a3a4&amp;title=&amp;width=576" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663987651153-210e7e97-9dd9-4723-bc6c-1157a953b161.png#clientId=u76d5d968-913c-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=408&amp;id=ua2e15945&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=510&amp;originWidth=1029&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=282597&amp;status=done&amp;style=none&amp;taskId=udbf4c4a8-3f4c-4632-8e15-da504cf868f&amp;title=&amp;width=823.2" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663987656826-d7b41d9c-8eca-4737-be71-97ed252d636a.png#clientId=u76d5d968-913c-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=369&amp;id=ua72ea831&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=461&amp;originWidth=1024&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=107637&amp;status=done&amp;style=none&amp;taskId=ub1409c54-1ba3-403b-b61f-cab50df7eeb&amp;title=&amp;width=819.2" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1663987664523-be40f414-ed0c-4269-bce0-b4dd95719eab.png#clientId=u76d5d968-913c-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=568&amp;id=u259eed22&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=710&amp;originWidth=1028&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=206399&amp;status=done&amp;style=none&amp;taskId=ue1165877-a00f-48a3-a18a-52af4166b22&amp;title=&amp;width=822.4" alt="image.png"><br><a name="WOIUG"></a></p><h1 id="hystrix源码剖析-自己看课后笔记"><a href="#hystrix源码剖析-自己看课后笔记" class="headerlink" title="hystrix源码剖析(自己看课后笔记)"></a>hystrix源码剖析(自己看课后笔记)</h1><p><a name="ZFSxJ"></a></p><h1 id="Feign远程调用引入"><a href="#Feign远程调用引入" class="headerlink" title="Feign远程调用引入"></a>Feign远程调用引入</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664003281957-b5d1ee18-c17b-4f07-9390-1bd96326fa33.png#clientId=ufdcdc3bc-ab80-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=402&amp;id=u820e82df&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=503&amp;originWidth=1025&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=157637&amp;status=done&amp;style=none&amp;taskId=ub939ef81-28dc-481f-ac9b-91b4879717f&amp;title=&amp;width=820" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664003863133-02fece81-a327-482a-b312-a196b94d88a6.png#clientId=ufdcdc3bc-ab80-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=270&amp;id=u933bb29b&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=338&amp;originWidth=1027&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=90928&amp;status=done&amp;style=none&amp;taskId=u84227daa-43de-4163-b42c-fc3f6ebf0ca&amp;title=&amp;width=821.6" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664003868328-c7760780-e672-4939-b984-551e6d299128.png#clientId=ufdcdc3bc-ab80-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=368&amp;id=u9d5153ee&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=460&amp;originWidth=1074&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=108594&amp;status=done&amp;style=none&amp;taskId=uf881b1c8-2c00-4509-aad5-88c7d3d527b&amp;title=&amp;width=859.2" alt="image.png"><br><a name="ZUQ62"></a></p><h1 id="Feign配置应用"><a href="#Feign配置应用" class="headerlink" title="Feign配置应用"></a>Feign配置应用</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664003879941-2f2349c3-7131-4352-b5a1-8849353b1ff9.png#clientId=ufdcdc3bc-ab80-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=170&amp;id=udc569a31&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=212&amp;originWidth=737&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=29220&amp;status=done&amp;style=none&amp;taskId=u86e96bf4-b469-48d4-acb5-abeaa4a9311&amp;title=&amp;width=589.6" alt="image.png"><br><a name="C9epx"></a></p><h2 id="服务消费者⼯程（⾃动投递微服务）中引⼊Feign依赖（或者⽗类⼯程）-此时不需要hystrix的依赖了-可以删掉"><a href="#服务消费者⼯程（⾃动投递微服务）中引⼊Feign依赖（或者⽗类⼯程）-此时不需要hystrix的依赖了-可以删掉" class="headerlink" title="服务消费者⼯程（⾃动投递微服务）中引⼊Feign依赖（或者⽗类⼯程）(此时不需要hystrix的依赖了,可以删掉)"></a>服务消费者⼯程（⾃动投递微服务）中引⼊Feign依赖（或者⽗类⼯程）(此时不需要hystrix的依赖了,可以删掉)</h2><pre class=" language-xml"><code class="language-xml">        <span class="token comment" spellcheck="true">&lt;!--引入feign--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-openfeign<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span> </code></pre><p><a name="bN7ia"></a></p><h2 id="服务消费者⼯程（⾃动投递微服务）启动类使⽤注解-EnableFeignClients添加Feign⽀持"><a href="#服务消费者⼯程（⾃动投递微服务）启动类使⽤注解-EnableFeignClients添加Feign⽀持" class="headerlink" title="服务消费者⼯程（⾃动投递微服务）启动类使⽤注解@EnableFeignClients添加Feign⽀持"></a>服务消费者⼯程（⾃动投递微服务）启动类使⽤注解@EnableFeignClients添加Feign⽀持</h2><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@EnableFeignClients</span> <span class="token comment" spellcheck="true">//开启Feign客户端功能</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@EnableDiscoveryClient</span> <span class="token comment" spellcheck="true">//开启注册中心客户端(通用注解)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AutodeliverApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>AutodeliverApplication<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664005057123-9e19c683-d3ea-43a4-ad4f-3670a83834c1.png#clientId=ufdcdc3bc-ab80-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=75&amp;id=u57b182df&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=94&amp;originWidth=986&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=26315&amp;status=done&amp;style=none&amp;taskId=uee5a9c59-b041-47a0-a63c-6cf256ebbcc&amp;title=&amp;width=788.8" alt="image.png"><br><a name="Zm7A1"></a></p><h2 id="创建Feign接⼝"><a href="#创建Feign接⼝" class="headerlink" title="创建Feign接⼝"></a>创建Feign接⼝</h2><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//表明当前类是一个Feign客户端</span><span class="token comment" spellcheck="true">//value指定该客户端要请求的服务名称(注册中心上的服务提供者的服务名称)</span><span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"lagou-service-resume"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/resume"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//feign支持springmvc接口</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ResumeServiceFeignClient</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//feign->拼装url,发起请求</span>    <span class="token comment" spellcheck="true">//调用该本地方法,实际是远程请求调用</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/openstate/{userId}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">findDefaultResumeState</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"userId"</span><span class="token punctuation">)</span> Long userId<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664005038314-2321099e-1443-46a7-87bf-93d3b06e8611.png#clientId=ufdcdc3bc-ab80-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=230&amp;id=u8173152c&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=287&amp;originWidth=1030&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=95383&amp;status=done&amp;style=none&amp;taskId=uc67ed15e-b5a7-4a2c-ae93-cf888f794f7&amp;title=&amp;width=824" alt="image.png"><br><a name="XunHF"></a></p><h2 id="使⽤接⼝中⽅法完成远程调⽤（注⼊接⼝即可，实际注⼊的是接⼝的实现）"><a href="#使⽤接⼝中⽅法完成远程调⽤（注⼊接⼝即可，实际注⼊的是接⼝的实现）" class="headerlink" title="使⽤接⼝中⽅法完成远程调⽤（注⼊接⼝即可，实际注⼊的是接⼝的实现）"></a>使⽤接⼝中⽅法完成远程调⽤（注⼊接⼝即可，实际注⼊的是接⼝的实现）</h2><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/autodeliver"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AutodeliverController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> ResumeServiceFeignClient resumeServiceFeignClient<span class="token punctuation">;</span>     <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/checkState/{userId}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">findResumeOpenState</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> Long userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> resumeServiceFeignClient<span class="token punctuation">.</span><span class="token function">findDefaultResumeState</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><a name="Ks7RZ"></a></p><h2 id="测试-3"><a href="#测试-3" class="headerlink" title="测试"></a>测试</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664005332223-3c0bc88d-0deb-4864-beb8-97fed252505c.png#clientId=ufdcdc3bc-ab80-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=403&amp;id=u63d8dc52&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=504&amp;originWidth=1130&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=49225&amp;status=done&amp;style=none&amp;taskId=u36c23133-976f-42dd-b52c-59dc5d0dc3d&amp;title=&amp;width=904" alt="image.png"><br><a name="II6XJ"></a></p><h1 id="Feign对ribbon的支持"><a href="#Feign对ribbon的支持" class="headerlink" title="Feign对ribbon的支持"></a>Feign对ribbon的支持</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664005611282-0d11044e-7cf6-4d83-9b9f-d564079ae4d8.png#clientId=ufdcdc3bc-ab80-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=241&amp;id=u9c9d40bd&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=301&amp;originWidth=1016&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=94151&amp;status=done&amp;style=none&amp;taskId=ud8277b70-1ee3-4a95-a090-c90b4cad1a7&amp;title=&amp;width=812.8" alt="image.png"><br><a name="yj1k9"></a></p><h2 id="Ribbon设置"><a href="#Ribbon设置" class="headerlink" title="Ribbon设置"></a>Ribbon设置</h2><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true">#针对的被调⽤⽅微服务名称,不加就是全局⽣效</span><span class="token key atrule">lagou-service-resume</span><span class="token punctuation">:</span>  <span class="token key atrule">ribbon</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">#请求连接超时时间</span>    <span class="token key atrule">ConnectTimeout</span><span class="token punctuation">:</span> <span class="token number">2000</span>    <span class="token comment" spellcheck="true">#请求处理超时时间</span>    <span class="token key atrule">ReadTimeout</span><span class="token punctuation">:</span> <span class="token number">15000</span>    <span class="token comment" spellcheck="true">#对所有操作都进⾏重试</span>    <span class="token key atrule">OkToRetryOnAllOperations</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token comment" spellcheck="true">####根据如上配置，当访问到故障请求的时候，它会再尝试访问⼀次当前实例（次数由MaxAutoRetries配置），</span>    <span class="token comment" spellcheck="true">####如果不⾏，就换⼀个实例进⾏访问，如果还不⾏，再换⼀次实例访问（更换次数由MaxAutoRetriesNextServer配置），</span>    <span class="token comment" spellcheck="true">####如果依然不⾏，返回失败信息。</span>    <span class="token key atrule">MaxAutoRetries</span><span class="token punctuation">:</span> <span class="token number">0 </span><span class="token comment" spellcheck="true">#对当前选中实例重试次数，不包括第⼀次调⽤</span>    <span class="token key atrule">MaxAutoRetriesNextServer</span><span class="token punctuation">:</span> <span class="token number">0 </span><span class="token comment" spellcheck="true">#切换实例的重试次数</span>    <span class="token key atrule">NFLoadBalancerRuleClassName</span><span class="token punctuation">:</span> com.netflix.loadbalancer.RoundRobinRule <span class="token comment" spellcheck="true">#负载策略调整</span></code></pre><p><a name="W9zgu"></a></p><h1 id="Feign日志输出"><a href="#Feign日志输出" class="headerlink" title="Feign日志输出"></a>Feign日志输出</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664006088397-d8765f26-fabb-44f4-a1cd-22c383898b6d.png#clientId=ufdcdc3bc-ab80-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=230&amp;id=ue75accda&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=287&amp;originWidth=1026&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=63429&amp;status=done&amp;style=none&amp;taskId=u360d4560-0b23-47c0-98d9-94f462e638a&amp;title=&amp;width=820.8" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664006321201-dd589ac2-1bc1-4d5d-8f6e-8ab7ed1d635a.png#clientId=ufdcdc3bc-ab80-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=342&amp;id=ucffc1c14&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=557&amp;originWidth=394&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=322761&amp;status=done&amp;style=none&amp;taskId=u139e6312-a44f-4de5-a751-fc30e6b59a3&amp;title=&amp;width=242.20001220703125" alt="image.png"><br><a name="zV7Av"></a></p><h2 id="开启Feign⽇志功能及级别"><a href="#开启Feign⽇志功能及级别" class="headerlink" title="开启Feign⽇志功能及级别"></a>开启Feign⽇志功能及级别</h2><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FeignLog</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// Feign的⽇志级别（Feign请求过程信息）</span>    <span class="token comment" spellcheck="true">// NONE：默认的，不显示任何⽇志----性能最好</span>    <span class="token comment" spellcheck="true">// BASIC：仅记录请求⽅法、URL、响应状态码以及执⾏时间----⽣产问题追踪</span>    <span class="token comment" spellcheck="true">// HEADERS：在BASIC级别的基础上，记录请求和响应的header</span>    <span class="token comment" spellcheck="true">// FULL：记录请求和响应的header、body和元数据----适⽤于开发及测试环境定位问题</span>    <span class="token annotation punctuation">@Bean</span>    Logger<span class="token punctuation">.</span>Level <span class="token function">feignLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> Logger<span class="token punctuation">.</span>Level<span class="token punctuation">.</span>FULL<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><a name="M8LDV"></a></p><h2 id="配置log⽇志级别为debug-开启日志输出"><a href="#配置log⽇志级别为debug-开启日志输出" class="headerlink" title="配置log⽇志级别为debug(开启日志输出)"></a>配置log⽇志级别为debug(开启日志输出)</h2><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">logging</span><span class="token punctuation">:</span>  <span class="token key atrule">level</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># Feign⽇志只会对⽇志级别为debug的做出响应</span>    <span class="token key atrule">com.lagou.edu.controller.service.ResumeServiceFeignClient</span><span class="token punctuation">:</span> debug</code></pre><p><a name="MLxVn"></a></p><h1 id="Feign对熔断器的支持"><a href="#Feign对熔断器的支持" class="headerlink" title="Feign对熔断器的支持"></a>Feign对熔断器的支持</h1><p><a name="MPHnB"></a></p><h2 id="在Feign客户端⼯程配置⽂件（application-yml）中开启Feign对熔断器的⽀持"><a href="#在Feign客户端⼯程配置⽂件（application-yml）中开启Feign对熔断器的⽀持" class="headerlink" title="在Feign客户端⼯程配置⽂件（application.yml）中开启Feign对熔断器的⽀持"></a>在Feign客户端⼯程配置⽂件（application.yml）中开启Feign对熔断器的⽀持</h2><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 开启Feign的熔断功能</span><span class="token key atrule">feign</span><span class="token punctuation">:</span>  <span class="token key atrule">hystrix</span><span class="token punctuation">:</span>    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664008282270-e651fa92-7d43-46b3-8a47-631ae6edfeaf.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=365&amp;id=u1b9f535f&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=456&amp;originWidth=1027&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=97653&amp;status=done&amp;style=none&amp;taskId=u2d6690a5-2f80-4eba-9ab5-b27309975c7&amp;title=&amp;width=821.6" alt="image.png"></p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">hystrix</span><span class="token punctuation">:</span>  <span class="token key atrule">command</span><span class="token punctuation">:</span>    <span class="token key atrule">default</span><span class="token punctuation">:</span>      <span class="token key atrule">execution</span><span class="token punctuation">:</span>        <span class="token key atrule">isolation</span><span class="token punctuation">:</span>          <span class="token key atrule">thread</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true">##########################################Hystrix的超时时⻓设置</span>            <span class="token key atrule">timeoutInMilliseconds</span><span class="token punctuation">:</span> <span class="token number">5000</span></code></pre><p><a name="vDV0e"></a></p><h2 id="⾃定义FallBack处理类（需要实现FeignClient接⼝）"><a href="#⾃定义FallBack处理类（需要实现FeignClient接⼝）" class="headerlink" title="⾃定义FallBack处理类（需要实现FeignClient接⼝）"></a>⾃定义FallBack处理类（需要实现FeignClient接⼝）</h2><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * 降级回退逻辑需要定义⼀个类，实现FeignClient接⼝，实现接⼝中的⽅法 */</span><span class="token annotation punctuation">@Component</span>  <span class="token comment" spellcheck="true">//别忘了这个注解，还应该被扫描到</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ResumeFallback</span> <span class="token keyword">implements</span> <span class="token class-name">ResumeServiceFeignClient</span><span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">findDefaultResumeState</span><span class="token punctuation">(</span>Long userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><a name="OzsvP"></a></p><h2 id="在-FeignClient注解中关联⾃定义的处理类"><a href="#在-FeignClient注解中关联⾃定义的处理类" class="headerlink" title="在@FeignClient注解中关联⾃定义的处理类"></a>在@FeignClient注解中关联⾃定义的处理类</h2><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//如果有这个给类限定的url映射,在回退的时候会报错</span><span class="token comment" spellcheck="true">//使⽤fallback的时候，类上的@RequestMapping的url前缀限定，改成配置在@FeignClient的path属性中</span><span class="token comment" spellcheck="true">//@RequestMapping("/resume") //feign支持springmvc接口</span><span class="token comment" spellcheck="true">//表明当前类是一个Feign客户端</span><span class="token comment" spellcheck="true">//value指定该客户端要请求的服务名称(注册中心上的服务提供者的服务名称)</span><span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"lagou-service-resume"</span><span class="token punctuation">,</span>        fallback <span class="token operator">=</span> ResumeFallback<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>        path <span class="token operator">=</span> <span class="token string">"/resume"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ResumeServiceFeignClient</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//feign->拼装url,发起请求</span>    <span class="token comment" spellcheck="true">//调用该本地方法,实际是远程请求调用</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/openstate/{userId}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">findDefaultResumeState</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"userId"</span><span class="token punctuation">)</span> Long userId<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664009300309-a539a4b3-6baa-4e49-aeee-9eb6889b61ba.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=402&amp;id=u902e38e9&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=502&amp;originWidth=1396&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=29402&amp;status=done&amp;style=none&amp;taskId=u143db752-359b-4a1e-a3ae-d848ee34587&amp;title=&amp;width=1116.8" alt="image.png"><br><a name="syBen"></a></p><h1 id="Feign对请求压缩和响应压缩的⽀持"><a href="#Feign对请求压缩和响应压缩的⽀持" class="headerlink" title="Feign对请求压缩和响应压缩的⽀持"></a>Feign对请求压缩和响应压缩的⽀持</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664009371991-fc169762-b0c8-4bd4-932c-7b6f8c3424f5.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=151&amp;id=uadac55c2&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=189&amp;originWidth=1032&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=44381&amp;status=done&amp;style=none&amp;taskId=u1f387df6-42ee-4e47-9af7-9044e85504f&amp;title=&amp;width=825.6" alt="image.png"></p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">feign</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true"># 开启Feign的熔断功能</span>  <span class="token key atrule">hystrix</span><span class="token punctuation">:</span>    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment" spellcheck="true"># 对请求和响应进⾏GZIP压缩 </span>  <span class="token key atrule">compression</span><span class="token punctuation">:</span>    <span class="token key atrule">request</span><span class="token punctuation">:</span>      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># 开启请求压缩</span>      <span class="token key atrule">mime-types</span><span class="token punctuation">:</span> text/html<span class="token punctuation">,</span>application/xml<span class="token punctuation">,</span>application/json <span class="token comment" spellcheck="true"># 设置压缩的数据类型，此处也是默认值</span>      <span class="token key atrule">min-request-size</span><span class="token punctuation">:</span> <span class="token number">2048 </span><span class="token comment" spellcheck="true"># 设置触发压缩的⼤⼩下限，此处也是默认值</span>    <span class="token key atrule">response</span><span class="token punctuation">:</span>      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># 开启响应压缩</span></code></pre><p><a name="tvgwQ"></a></p><h1 id="Feign源码剖析-自己看课堂笔记"><a href="#Feign源码剖析-自己看课堂笔记" class="headerlink" title="Feign源码剖析(自己看课堂笔记)"></a>Feign源码剖析(自己看课堂笔记)</h1><p><a name="r9rwf"></a></p><h1 id="GateWay网关组件引入"><a href="#GateWay网关组件引入" class="headerlink" title="GateWay网关组件引入"></a>GateWay网关组件引入</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664009850471-7accfcf5-289c-474b-9dad-3489c94ee893.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=658&amp;id=u81e480ae&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=822&amp;originWidth=1053&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=229190&amp;status=done&amp;style=none&amp;taskId=ud14e9b4f-a3c8-4d18-b448-be8c0902834&amp;title=&amp;width=842.4" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664009858225-92114b48-7a60-42b2-9f32-659484fb71ac.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=535&amp;id=u53e526c8&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=669&amp;originWidth=810&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=69672&amp;status=done&amp;style=none&amp;taskId=u315360b7-7126-4da3-8b9f-6c401e44455&amp;title=&amp;width=648" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664009864248-a0ea8463-708a-4b07-af86-380f758040bd.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=559&amp;id=u660014de&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=699&amp;originWidth=970&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=174636&amp;status=done&amp;style=none&amp;taskId=u2662ea46-b8a7-4e69-b243-4a5f530d47f&amp;title=&amp;width=776" alt="image.png"><br><a name="mOoSO"></a></p><h1 id="GateWay核⼼概念"><a href="#GateWay核⼼概念" class="headerlink" title="GateWay核⼼概念"></a>GateWay核⼼概念</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664010344993-b0864e3f-ad13-401c-8a2d-0096b58187b4.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=622&amp;id=ub059c5d3&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=778&amp;originWidth=1030&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=199189&amp;status=done&amp;style=none&amp;taskId=uc77df23a-d6c8-4648-b136-fb2d560a035&amp;title=&amp;width=824" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664010379454-8ce41a7f-f8b3-4aaf-b2a9-ad600bd36c62.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=543&amp;id=u95722d6a&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=679&amp;originWidth=1204&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=138569&amp;status=done&amp;style=none&amp;taskId=u87cf24e2-1042-435e-b074-42e5b0f268a&amp;title=&amp;width=963.2" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664010382805-1fee800e-3641-4649-b95b-f859bd3fc86a.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=311&amp;id=u05503ef7&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=389&amp;originWidth=821&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=82676&amp;status=done&amp;style=none&amp;taskId=u5aec444a-d6a4-4b80-ba45-6b5519b45a8&amp;title=&amp;width=656.8" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664010390589-64706d0b-f1ef-42ed-a335-3cfe9ace710c.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=118&amp;id=uaa788c93&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=148&amp;originWidth=991&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=36004&amp;status=done&amp;style=none&amp;taskId=u905bcdae-fe1a-4e6b-870a-eeb075769cb&amp;title=&amp;width=792.8" alt="image.png"><br><a name="ryyLn"></a></p><h1 id="GateWay⼯作过程（How-It-Works）"><a href="#GateWay⼯作过程（How-It-Works）" class="headerlink" title="GateWay⼯作过程（How It Works）"></a>GateWay⼯作过程（How It Works）</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664010463710-3cd9f5ce-3adb-42db-acad-cc0093abedbd.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=486&amp;id=ue8c5e672&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=608&amp;originWidth=466&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=27520&amp;status=done&amp;style=none&amp;taskId=ud136b48f-e16d-403e-bf5a-80024832095&amp;title=&amp;width=372.8" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664010471696-b4abcd61-e50f-4a30-8e09-8fbd30b8bd30.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=410&amp;id=u41e66a8c&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=512&amp;originWidth=1014&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=151031&amp;status=done&amp;style=none&amp;taskId=u7c34b507-7219-4fd8-87e0-4c40e825fc5&amp;title=&amp;width=811.2" alt="image.png"><br><a name="g603j"></a></p><h1 id="GateWay应⽤"><a href="#GateWay应⽤" class="headerlink" title="GateWay应⽤"></a>GateWay应⽤</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664010559318-90e5229b-587b-4087-83a1-fa40e0346645.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=86&amp;id=u9919436c&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=107&amp;originWidth=995&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=30534&amp;status=done&amp;style=none&amp;taskId=u1d25ee96-8a1b-4fb9-8514-990a76fcc04&amp;title=&amp;width=796" alt="image.png"><br><a name="ALm3R"></a></p><h2 id="创建⼯程lagou-cloud-gateway-server-9002导⼊依赖"><a href="#创建⼯程lagou-cloud-gateway-server-9002导⼊依赖" class="headerlink" title="创建⼯程lagou-cloud-gateway-server-9002导⼊依赖"></a>创建⼯程lagou-cloud-gateway-server-9002导⼊依赖</h2><pre class=" language-xml"><code class="language-xml">    <span class="token comment" spellcheck="true">&lt;!--spring boot ⽗启动器依赖--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.1.6.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-commons<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-netflix-eureka-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--GateWay ⽹关--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-gateway<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--引⼊webflux--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-webflux<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--⽇志依赖--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-logging<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--测试依赖--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--lombok⼯具--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.18.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--引⼊Jaxb，开始--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.sun.xml.bind<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jaxb-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.2.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>javax.xml.bind<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jaxb-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.sun.xml.bind<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jaxb-impl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.2.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.glassfish.jaxb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jaxb-runtime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.2.10-b140310.1920<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>javax.activation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>activation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.1.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--引⼊Jaxb，结束--></span>        <span class="token comment" spellcheck="true">&lt;!-- Actuator可以帮助你监控和管理Spring Boot应⽤--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--热部署--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-devtools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--spring cloud依赖版本管理--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>Greenwich.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!--编译插件--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">></span></span>11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">></span></span>11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoding</span><span class="token punctuation">></span></span>utf-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoding</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!--打包插件--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664015596642-7cc2b38c-1aae-4cb7-bc26-37a809b6e09e.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=58&amp;id=u46f44a8e&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=72&amp;originWidth=775&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=12001&amp;status=done&amp;style=none&amp;taskId=u10a0ec0f-87f6-4e26-a2e3-43dfa0c51fb&amp;title=&amp;width=620" alt="image.png"><br><a name="Q8ATA"></a></p><h2 id="application-yml-配置⽂件部分内容"><a href="#application-yml-配置⽂件部分内容" class="headerlink" title="application.yml 配置⽂件部分内容"></a>application.yml 配置⽂件部分内容</h2><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9002</span><span class="token key atrule">eureka</span><span class="token punctuation">:</span>  <span class="token key atrule">client</span><span class="token punctuation">:</span>    <span class="token key atrule">serviceUrl</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># eureka server的路径</span>      <span class="token key atrule">defaultZone</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//lagoucloudeurekaservera<span class="token punctuation">:</span>8761/eureka/<span class="token punctuation">,</span>http<span class="token punctuation">:</span>//lagoucloudeurekaserverb<span class="token punctuation">:</span>8762/eureka/      <span class="token comment" spellcheck="true">#把 eureka 集群中的所有 url 都填写了进来，也可以只写⼀台，因为各个 eureka server 可以同步注册表</span><span class="token key atrule">instance</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true">#使⽤ip注册，否则会使⽤主机名注册了（此处考虑到对⽼版本的兼容，新版本经过实验都是ip）</span>  <span class="token key atrule">prefer-ip-address</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment" spellcheck="true">#⾃定义实例显示格式，加上版本号，便于多版本管理，注意是ip-address，早期版本是ipAddress</span>  <span class="token key atrule">instance-id</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>spring.cloud.client.ip<span class="token punctuation">-</span>address<span class="token punctuation">}</span><span class="token punctuation">:</span>$<span class="token punctuation">{</span>spring.application.name<span class="token punctuation">}</span><span class="token punctuation">:</span>$<span class="token punctuation">{</span>server.port<span class="token punctuation">}</span><span class="token punctuation">:</span>@project.version@<span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> lagou<span class="token punctuation">-</span>cloud<span class="token punctuation">-</span>gateway  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>      <span class="token key atrule">routes</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># 路由可以有多个</span>        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> service<span class="token punctuation">-</span>autodeliver<span class="token punctuation">-</span>router <span class="token comment" spellcheck="true"># 我们⾃定义的路由 ID，保持唯⼀</span>          <span class="token key atrule">uri</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//127.0.0.1<span class="token punctuation">:</span><span class="token number">8092 </span><span class="token comment" spellcheck="true"># ⽬标服务地址 ⾃动投递微服务（部署多实例） 动态路由：uri配置的应该是⼀个服务名称，⽽不应该是⼀个具体的服务实例的地址</span>          <span class="token comment" spellcheck="true"># gateway⽹关从服务注册中⼼获取实例信息然后负载后路由</span>          <span class="token key atrule">predicates</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#断⾔：路由条件，Predicate 接受⼀个输⼊参数，返回⼀个布尔值结果。该接⼝包含多种默 认⽅法来将 Predicate 组合成其他复杂的逻辑（⽐如：与，或，⾮）。</span>            <span class="token punctuation">-</span> Path=/autodeliver/**        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> service<span class="token punctuation">-</span>resume<span class="token punctuation">-</span>router <span class="token comment" spellcheck="true"># 我们⾃定义的路由 ID，保持唯⼀</span>          <span class="token key atrule">uri</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//127.0.0.1<span class="token punctuation">:</span><span class="token number">8081 </span><span class="token comment" spellcheck="true"># ⽬标服务地址</span>          <span class="token comment" spellcheck="true">#http://localhost:9002/resume/openstate/1545132</span>          <span class="token comment" spellcheck="true">#http://127.0.0.1:8081/openstate/1545132</span>          <span class="token key atrule">predicates</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#断⾔：路由条件，Predicate 接受⼀个输⼊参数，返回⼀个布尔值结果。该接⼝包含多种默 认⽅法来将 Predicate 组合成其他复杂的逻辑（⽐如：与，或，⾮）。</span>            <span class="token punctuation">-</span> Path=/resume/**          <span class="token comment" spellcheck="true">#filters:</span>          <span class="token comment" spellcheck="true">#  - StripPrefix=1</span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664016240345-41b8eda4-7968-4c25-ab7b-32591ba3813a.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=230&amp;id=ud1a67c6f&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=287&amp;originWidth=979&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=71915&amp;status=done&amp;style=none&amp;taskId=uffefd06b-831a-48b7-9505-75c2e7f0ccb&amp;title=&amp;width=783.2" alt="image.png"><br><a name="CuxTq"></a></p><h2 id="启动类-3"><a href="#启动类-3" class="headerlink" title="启动类"></a>启动类</h2><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@EnableDiscoveryClient</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GateWayApplication9002</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>GateWayApplication9002<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><a name="WLbBK"></a></p><h1 id="GateWay路由规则详解"><a href="#GateWay路由规则详解" class="headerlink" title="GateWay路由规则详解"></a>GateWay路由规则详解</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664016676375-b7a37c33-e77b-41f3-9cd7-9c572ca4eedc.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=102&amp;id=u3fe35bf7&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=128&amp;originWidth=1048&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=37329&amp;status=done&amp;style=none&amp;taskId=u405deeee-c4bb-424f-98e1-6404efe86c1&amp;title=&amp;width=838.4" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664016669766-870db95e-1122-4267-90d1-c26772707b61.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=668&amp;id=u005fc618&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=835&amp;originWidth=1788&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=159659&amp;status=done&amp;style=none&amp;taskId=u451ae6a4-8ad1-469b-950a-a5726a91a09&amp;title=&amp;width=1430.4" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664017922437-7fe7c3e9-92f0-4346-9707-09f9a704a027.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=665&amp;id=u57a708eb&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=831&amp;originWidth=1039&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=71613&amp;status=done&amp;style=none&amp;taskId=u6ea17faf-dbdb-4ae7-8665-38370bda867&amp;title=&amp;width=831.2" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664017936815-d48f932f-7ec8-42ab-abf6-417e57d399a2.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=74&amp;id=udec807a8&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=92&amp;originWidth=1054&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=3970&amp;status=done&amp;style=none&amp;taskId=u694db8e3-849b-4c97-8b6e-3d83bffdfbd&amp;title=&amp;width=843.2" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664017942663-b079affc-7f50-4688-8470-eb49401bd965.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=288&amp;id=u8450018b&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=360&amp;originWidth=1013&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=40786&amp;status=done&amp;style=none&amp;taskId=u809db307-281d-4c7a-83bd-e1a052bb3e9&amp;title=&amp;width=810.4" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664017952723-163aac8c-9159-43b9-b582-c9fe82d87f56.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=710&amp;id=u156b9e58&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=888&amp;originWidth=1020&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=77527&amp;status=done&amp;style=none&amp;taskId=ub697a5d1-21a0-400c-8099-ab24845cfc1&amp;title=&amp;width=816" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664017961531-8988ef8a-a025-4a22-bfdf-fd3e503a6467.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=596&amp;id=u53cc5406&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=745&amp;originWidth=1020&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=67514&amp;status=done&amp;style=none&amp;taskId=u5fd02b42-db73-4570-8bd2-c18f6455d6e&amp;title=&amp;width=816" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664017973746-866af58e-26e7-4c80-8331-71cfcaba4d4e.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=657&amp;id=u71e5f3c9&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=821&amp;originWidth=1003&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=70159&amp;status=done&amp;style=none&amp;taskId=u033a49a0-a21d-4f94-bf87-88ac0889349&amp;title=&amp;width=802.4" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664017980788-6a892361-724f-40d1-8a0a-1d543fbf4ebe.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=658&amp;id=uaee11136&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=822&amp;originWidth=1010&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=73956&amp;status=done&amp;style=none&amp;taskId=u142ec668-faf9-4dbf-b960-f8b9b5452af&amp;title=&amp;width=808" alt="image.png"><br><a name="jSasI"></a></p><h1 id="GateWay动态路由详解"><a href="#GateWay动态路由详解" class="headerlink" title="GateWay动态路由详解"></a>GateWay动态路由详解</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664018476810-90bcc62f-b727-4698-8d38-a8f75cd751c9.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=246&amp;id=u9581a837&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=308&amp;originWidth=1030&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=55088&amp;status=done&amp;style=none&amp;taskId=u3c3dfd75-5b99-4b1e-905f-248a0640ae3&amp;title=&amp;width=824" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664018481670-ba647b21-65a6-44f1-a1d2-adba8092b11d.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=518&amp;id=u2fa458f3&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=648&amp;originWidth=1414&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=166554&amp;status=done&amp;style=none&amp;taskId=ua3b1ec05-2c12-4f0c-9cf9-a4397da21fe&amp;title=&amp;width=1131.2" alt="image.png"><br><a name="WqI2C"></a></p><h2 id="yaml-3"><a href="#yaml-3" class="headerlink" title="yaml"></a>yaml</h2><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9002</span><span class="token key atrule">eureka</span><span class="token punctuation">:</span>  <span class="token key atrule">client</span><span class="token punctuation">:</span>    <span class="token key atrule">serviceUrl</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># eureka server的路径</span>      <span class="token key atrule">defaultZone</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//lagoucloudeurekaservera<span class="token punctuation">:</span>8761/eureka/<span class="token punctuation">,</span>http<span class="token punctuation">:</span>//lagoucloudeurekaserverb<span class="token punctuation">:</span>8762/eureka/      <span class="token comment" spellcheck="true">#把 eureka 集群中的所有 url 都填写了进来，也可以只写⼀台，因为各个 eureka server 可以同步注册表</span><span class="token key atrule">instance</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true">#使⽤ip注册，否则会使⽤主机名注册了（此处考虑到对⽼版本的兼容，新版本经过实验都是ip）</span>  <span class="token key atrule">prefer-ip-address</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment" spellcheck="true">#⾃定义实例显示格式，加上版本号，便于多版本管理，注意是ip-address，早期版本是ipAddress</span>  <span class="token key atrule">instance-id</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>spring.cloud.client.ip<span class="token punctuation">-</span>address<span class="token punctuation">}</span><span class="token punctuation">:</span>$<span class="token punctuation">{</span>spring.application.name<span class="token punctuation">}</span><span class="token punctuation">:</span>$<span class="token punctuation">{</span>server.port<span class="token punctuation">}</span><span class="token punctuation">:</span>@project.version@<span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> lagou<span class="token punctuation">-</span>cloud<span class="token punctuation">-</span>gateway  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>      <span class="token key atrule">routes</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># 路由可以有多个</span>        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> service<span class="token punctuation">-</span>autodeliver<span class="token punctuation">-</span>router <span class="token comment" spellcheck="true"># 我们⾃定义的路由 ID，保持唯⼀</span>          <span class="token comment" spellcheck="true">#uri: http://127.0.0.1:8092 # ⽬标服务地址 ⾃动投递微服务（部署多实例） 动态路由：uri配置的应该是⼀个服务名称，⽽不应该是⼀个具体的服务实例的地址</span>          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//lagou<span class="token punctuation">-</span>service<span class="token punctuation">-</span>autodeliver          <span class="token comment" spellcheck="true"># gateway⽹关从服务注册中⼼获取实例信息然后负载后路由</span>          <span class="token key atrule">predicates</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#断⾔：路由条件，Predicate 接受⼀个输⼊参数，返回⼀个布尔值结果。该接⼝包含多种默 认⽅法来将 Predicate 组合成其他复杂的逻辑（⽐如：与，或，⾮）。</span>            <span class="token punctuation">-</span> Path=/autodeliver/**        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> service<span class="token punctuation">-</span>resume<span class="token punctuation">-</span>router <span class="token comment" spellcheck="true"># 我们⾃定义的路由 ID，保持唯⼀</span>          <span class="token comment" spellcheck="true">#uri: http://127.0.0.1:8081 # ⽬标服务地址</span>          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//lagou<span class="token punctuation">-</span>service<span class="token punctuation">-</span>resume <span class="token comment" spellcheck="true">#动态路由</span>          <span class="token comment" spellcheck="true">#http://localhost:9002/resume/openstate/1545132</span>          <span class="token comment" spellcheck="true">#http://127.0.0.1:8081/openstate/1545132</span>          <span class="token key atrule">predicates</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#断⾔：路由条件，Predicate 接受⼀个输⼊参数，返回⼀个布尔值结果。该接⼝包含多种默 认⽅法来将 Predicate 组合成其他复杂的逻辑（⽐如：与，或，⾮）。</span>            <span class="token punctuation">-</span> Path=/resume/** </code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664018489265-c559407a-5551-47b9-88da-508ccae4d80f.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=82&amp;id=zBboh&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=102&amp;originWidth=1046&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=27853&amp;status=done&amp;style=none&amp;taskId=u37dd3c91-a7e5-488b-b7f1-ba4e64de979&amp;title=&amp;width=836.8" alt="image.png"><br><a name="G51of"></a></p><h1 id="GateWay过滤器"><a href="#GateWay过滤器" class="headerlink" title="GateWay过滤器"></a>GateWay过滤器</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664018527274-a645047d-05a0-48ce-bc34-153f50045b93.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=750&amp;id=uf71a5d94&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=937&amp;originWidth=1041&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=158544&amp;status=done&amp;style=none&amp;taskId=u5783479b-513c-4f0b-b157-9913806e2f7&amp;title=&amp;width=832.8" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664019352429-84048bbb-2659-4cdd-a349-2aece792217a.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=306&amp;id=uda693283&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=383&amp;originWidth=1070&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=56463&amp;status=done&amp;style=none&amp;taskId=u5c473ebf-05c9-4895-bcdd-386442061f4&amp;title=&amp;width=856" alt="image.png"><br><a name="wY3R5"></a></p><h2 id="⾃定义全局过滤器实现IP访问限制（⿊⽩名单）"><a href="#⾃定义全局过滤器实现IP访问限制（⿊⽩名单）" class="headerlink" title="⾃定义全局过滤器实现IP访问限制（⿊⽩名单）"></a>⾃定义全局过滤器实现IP访问限制（⿊⽩名单）</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664019387910-2309cd2d-d259-4292-bba9-3493af0d186b.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=144&amp;id=udac980c3&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=180&amp;originWidth=1012&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=42491&amp;status=done&amp;style=none&amp;taskId=uc7b06651-91d3-45c9-a5fb-005832c3de5&amp;title=&amp;width=809.6" alt="image.png"></p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * 全局过滤器,对所有路由生效 */</span><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@Component</span> <span class="token comment" spellcheck="true">//让容器扫描到,相当于注册</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BlackListFilter</span> <span class="token keyword">implements</span> <span class="token class-name">GlobalFilter</span><span class="token punctuation">,</span> Ordered <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//模拟黑名单(实际可以去数据库或redis中查询)</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> List<span class="token operator">&lt;</span>String<span class="token operator">></span> blackList<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token punctuation">{</span>        blackList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"0:0:0:0:0:0:0:1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//模拟本机地址</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 过滤器核心方法     * @param exchange 封装了request和response对象的上下文     * @param chain 网关过滤器链(包含全局过滤器和单路由过滤器)     * @return     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Mono<span class="token operator">&lt;</span>Void<span class="token operator">></span> <span class="token function">filter</span><span class="token punctuation">(</span>ServerWebExchange exchange<span class="token punctuation">,</span> GatewayFilterChain chain<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//要求: 获取客户端ip,判断是否在黑名单中,在的话就拒绝,不在就放行</span>        <span class="token comment" spellcheck="true">//从上下文中取出request和response对象</span>        ServerHttpRequest request <span class="token operator">=</span> exchange<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ServerHttpResponse response <span class="token operator">=</span> exchange<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//从request对象中获取客户端ip</span>        String clientIp <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getRemoteAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHostString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//拿着ip去黑名单中查询</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>blackList<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>clientIp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//拒绝访问,返回</span>            response<span class="token punctuation">.</span><span class="token function">setStatusCode</span><span class="token punctuation">(</span>HttpStatus<span class="token punctuation">.</span>UNAUTHORIZED<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//状态码</span>            log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"========>ip: "</span><span class="token operator">+</span>clientIp<span class="token operator">+</span><span class="token string">" 在黑名单中,将被拒绝访问!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            String data<span class="token operator">=</span><span class="token string">"request be denied!"</span><span class="token punctuation">;</span>            DataBuffer wrap <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">bufferFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> response<span class="token punctuation">.</span><span class="token function">writeWith</span><span class="token punctuation">(</span>Mono<span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span>wrap<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//Mono.just开启数据流,回写数据</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//合法请求,放行</span>        <span class="token keyword">return</span> chain<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>exchange<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 返回值表示过滤器顺序(优先级),数值越小,优先级越高     * @return     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664021397402-d0940c10-d6f0-4a11-98d2-c42074a102cc.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=335&amp;id=u596a5192&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=419&amp;originWidth=856&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=19123&amp;status=done&amp;style=none&amp;taskId=ua1788c6b-971f-48fd-904a-b562e416d45&amp;title=&amp;width=684.8" alt="image.png"><br><a name="Cc7jJ"></a></p><h1 id="GateWay高可用"><a href="#GateWay高可用" class="headerlink" title="GateWay高可用"></a>GateWay高可用</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664021489786-6de67f28-01b1-431a-a0c1-2e14b8af4dbe.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=588&amp;id=u4bff5ad4&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=735&amp;originWidth=1038&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=134819&amp;status=done&amp;style=none&amp;taskId=ua12a4b01-867e-44af-b9c5-867c8e59cd4&amp;title=&amp;width=830.4" alt="image.png"><br><a name="L06oE"></a></p><h1 id="Spring-Cloud-Config-分布式配置中⼼"><a href="#Spring-Cloud-Config-分布式配置中⼼" class="headerlink" title="Spring Cloud Config 分布式配置中⼼"></a>Spring Cloud Config 分布式配置中⼼</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664021511322-3a3e4edc-6c95-4523-b570-132a2f4569f3.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=742&amp;id=u542ed657&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=927&amp;originWidth=1020&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=243813&amp;status=done&amp;style=none&amp;taskId=u02982a14-8635-4e35-a648-2ba0f425de8&amp;title=&amp;width=816" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664021816354-39fb1a49-6fcd-476f-8977-22792b31801b.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=784&amp;id=u5ea0abfb&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=980&amp;originWidth=1039&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=189619&amp;status=done&amp;style=none&amp;taskId=u9abda839-6bbf-4a40-86ca-21c3f4a65cd&amp;title=&amp;width=831.2" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664021823662-116d5ad9-1c6f-4843-92dc-00b7b7667a44.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=126&amp;id=ud54051a1&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=158&amp;originWidth=1034&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=50260&amp;status=done&amp;style=none&amp;taskId=u36741c7e-82c4-4dd7-88ea-c2c910ab14e&amp;title=&amp;width=827.2" alt="image.png"><br><a name="dDTSm"></a></p><h1 id="config分布式配置中心应用"><a href="#config分布式配置中心应用" class="headerlink" title="config分布式配置中心应用"></a>config分布式配置中心应用</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664021862499-6cf491af-4f8e-44d7-b9f5-214acef7bb24.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=327&amp;id=uee761581&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=409&amp;originWidth=1036&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=85405&amp;status=done&amp;style=none&amp;taskId=ud3e56347-3537-4d6a-a369-9b3a7a9e709&amp;title=&amp;width=828.8" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664021870701-5e80c456-e32b-430d-9fb8-45d37341d27a.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=214&amp;id=ufd3765d4&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=268&amp;originWidth=1001&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=45361&amp;status=done&amp;style=none&amp;taskId=u83f939b5-df9f-433a-8d7d-ca359f9a7b4&amp;title=&amp;width=800.8" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664025320914-1e812d66-3080-48a3-a62d-15e8f756b7f0.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=457&amp;id=u20c122fa&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=571&amp;originWidth=1171&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=38867&amp;status=done&amp;style=none&amp;taskId=u7ae79b4a-9992-4a93-823f-8a683a7f93f&amp;title=&amp;width=936.8" alt="image.png"><br><a name="KVTPQ"></a></p><h2 id="新建SpringBoot⼯程，引⼊依赖坐标（需要注册⾃⼰到Eureka）"><a href="#新建SpringBoot⼯程，引⼊依赖坐标（需要注册⾃⼰到Eureka）" class="headerlink" title="新建SpringBoot⼯程，引⼊依赖坐标（需要注册⾃⼰到Eureka）"></a>新建SpringBoot⼯程，引⼊依赖坐标（需要注册⾃⼰到Eureka）</h2><pre class=" language-xml"><code class="language-xml">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--eureka client 客户端依赖引⼊--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-netflix-eureka-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--config配置中⼼服务端--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-config-server<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span></code></pre><p><a name="U2SL9"></a></p><h2 id="配置启动类，使⽤注解-EnableConfigServer开启配置中⼼服务器功能"><a href="#配置启动类，使⽤注解-EnableConfigServer开启配置中⼼服务器功能" class="headerlink" title="配置启动类，使⽤注解@EnableConfigServer开启配置中⼼服务器功能"></a>配置启动类，使⽤注解@EnableConfigServer开启配置中⼼服务器功能</h2><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@EnableDiscoveryClient</span><span class="token annotation punctuation">@EnableConfigServer</span> <span class="token comment" spellcheck="true">//开启配置中心功能</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConfigServerApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>ConfigServerApplication<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><a name="toLZH"></a></p><h2 id="application-yml配置"><a href="#application-yml配置" class="headerlink" title="application.yml配置"></a>application.yml配置</h2><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9006</span>  <span class="token key atrule">ssl</span><span class="token punctuation">:</span>    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true">#防止报错not authorized</span><span class="token comment" spellcheck="true">#注册到Eureka服务中⼼</span><span class="token key atrule">eureka</span><span class="token punctuation">:</span>  <span class="token key atrule">client</span><span class="token punctuation">:</span>    <span class="token key atrule">service-url</span><span class="token punctuation">:</span>      <span class="token comment" spellcheck="true"># 注册到集群，就把多个Eurekaserver地址使⽤逗号连接起来即可；注册到单实例（⾮集群模式），那就写⼀个就ok</span>      <span class="token key atrule">defaultZone</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//LagouCloudEurekaServerA<span class="token punctuation">:</span>8761/eureka<span class="token punctuation">,</span>http<span class="token punctuation">:</span>//LagouCloudEurekaServerB<span class="token punctuation">:</span>8762/eureka  <span class="token key atrule">instance</span><span class="token punctuation">:</span>    <span class="token key atrule">prefer-ip-address</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true">#服务实例中显示ip，⽽不是显示主机名（兼容⽼的eureka版本）</span>    <span class="token comment" spellcheck="true"># 实例名称： 192.168.1.103:lagou-service-resume:8080，我们可以⾃定义它</span>    <span class="token key atrule">instance-id</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>spring.cloud.client.ip<span class="token punctuation">-</span>address<span class="token punctuation">}</span><span class="token punctuation">:</span>$<span class="token punctuation">{</span>spring.application.name<span class="token punctuation">}</span><span class="token punctuation">:</span>$<span class="token punctuation">{</span>server.port<span class="token punctuation">}</span><span class="token punctuation">:</span>@project.version@<span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> lagou<span class="token punctuation">-</span>service<span class="token punctuation">-</span>configserver  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">config</span><span class="token punctuation">:</span>      <span class="token key atrule">server</span><span class="token punctuation">:</span>        <span class="token key atrule">git</span><span class="token punctuation">:</span>          <span class="token key atrule">uri</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//gitee.com/malguy/config<span class="token punctuation">-</span>repo.git <span class="token comment" spellcheck="true">#配置git服务地址</span>          <span class="token key atrule">username</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#配置git⽤户名</span>          <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#配置git密码</span>          <span class="token key atrule">search-paths</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> config<span class="token punctuation">-</span>repo      <span class="token comment" spellcheck="true"># 读取分⽀</span>      <span class="token key atrule">label</span><span class="token punctuation">:</span> master<span class="token comment" spellcheck="true">#针对的被调⽤⽅微服务名称,不加就是全局⽣效</span><span class="token comment" spellcheck="true">#lagou-service-resume:</span><span class="token comment" spellcheck="true"># ribbon:</span><span class="token comment" spellcheck="true"># NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule #负载策略调整</span><span class="token comment" spellcheck="true"># springboot中暴露健康检查等断点接⼝</span><span class="token key atrule">management</span><span class="token punctuation">:</span>  <span class="token key atrule">endpoints</span><span class="token punctuation">:</span>    <span class="token key atrule">web</span><span class="token punctuation">:</span>      <span class="token key atrule">exposure</span><span class="token punctuation">:</span>        <span class="token key atrule">include</span><span class="token punctuation">:</span> <span class="token string">"*"</span><span class="token comment" spellcheck="true"># 暴露健康接⼝的细节</span><span class="token key atrule">endpoint</span><span class="token punctuation">:</span>  <span class="token key atrule">health</span><span class="token punctuation">:</span>    <span class="token key atrule">show-details</span><span class="token punctuation">:</span> always</code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664024526739-0b145d04-11b0-45bf-8d40-0c5ea9b73a24.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=111&amp;id=u601c71f1&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=139&amp;originWidth=740&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=15022&amp;status=done&amp;style=none&amp;taskId=u2d1cdf57-5258-47be-80c2-d884b869f24&amp;title=&amp;width=592" alt="image.png"><br><a name="MhfGN"></a></p><h1 id="构建Client客户端（在已有简历微服务基础上）"><a href="#构建Client客户端（在已有简历微服务基础上）" class="headerlink" title="构建Client客户端（在已有简历微服务基础上）"></a>构建Client客户端（在已有简历微服务基础上）</h1><p><a name="RgBwb"></a></p><h2 id="已有⼯程中添加依赖坐标"><a href="#已有⼯程中添加依赖坐标" class="headerlink" title="已有⼯程中添加依赖坐标"></a>已有⼯程中添加依赖坐标</h2><pre class=" language-xml"><code class="language-xml">        <span class="token comment" spellcheck="true">&lt;!--config 客户端依赖--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-config-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><p><a name="eFfHJ"></a></p><h2 id="application-yml修改为bootstrap-yml配置⽂件"><a href="#application-yml修改为bootstrap-yml配置⽂件" class="headerlink" title="application.yml修改为bootstrap.yml配置⽂件"></a>application.yml修改为bootstrap.yml配置⽂件</h2><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080 </span><span class="token comment" spellcheck="true"># 后期该微服务多实例，端⼝从8080递增（10个以内）</span><span class="token key atrule">Spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> lagou<span class="token punctuation">-</span>service<span class="token punctuation">-</span>resume  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.jdbc.Driver    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>5408/test<span class="token punctuation">?</span>useUnicode=true<span class="token important">&amp;characterEncoding</span>=utf8<span class="token important">&amp;serverTimezone</span>=GMT    <span class="token key atrule">username</span><span class="token punctuation">:</span> root    <span class="token key atrule">password</span><span class="token punctuation">:</span>   <span class="token key atrule">jpa</span><span class="token punctuation">:</span>    <span class="token key atrule">database</span><span class="token punctuation">:</span> MySQL    <span class="token key atrule">show-sql</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">hibernate</span><span class="token punctuation">:</span>      <span class="token key atrule">naming</span><span class="token punctuation">:</span>        <span class="token key atrule">physical-strategy</span><span class="token punctuation">:</span>          <span class="token comment" spellcheck="true">#避免将驼峰命名转换为下划线命名(jpa会自动把实体类的驼峰字段转为 _ 连接的字段名)</span>          org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true"># config客户端配置,和ConfigServer通信，并告知ConfigServer希望获取的配置信息在哪个⽂件中</span>    <span class="token key atrule">config</span><span class="token punctuation">:</span>      <span class="token comment" spellcheck="true">#拼接 -> name+profile</span>            <span class="token key atrule">name</span><span class="token punctuation">:</span> lagou<span class="token punctuation">-</span>service<span class="token punctuation">-</span>resume <span class="token comment" spellcheck="true">#配置⽂件名称</span>      <span class="token key atrule">profile</span><span class="token punctuation">:</span> dev <span class="token comment" spellcheck="true">#后缀名称</span>      <span class="token key atrule">label</span><span class="token punctuation">:</span> master <span class="token comment" spellcheck="true">#分⽀名称</span>      <span class="token key atrule">uri</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span><span class="token number">9006 </span><span class="token comment" spellcheck="true">#ConfigServer配置中⼼地址</span><span class="token comment" spellcheck="true">#注册到eureka服务中心</span><span class="token key atrule">eureka</span><span class="token punctuation">:</span>  <span class="token key atrule">client</span><span class="token punctuation">:</span>    <span class="token key atrule">service-url</span><span class="token punctuation">:</span>      <span class="token comment" spellcheck="true">#注册到集群,就把多个eurekaserver的地址用逗号连接,非集群模式就只写一个地址</span>      <span class="token key atrule">defaultZone</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//LagouCloudEurekaServerA<span class="token punctuation">:</span>8761/eureka<span class="token punctuation">,</span>http<span class="token punctuation">:</span>//LagouCloudEurekaServerB<span class="token punctuation">:</span>8762/eureka  <span class="token comment" spellcheck="true">#eureka实例</span>  <span class="token key atrule">instance</span><span class="token punctuation">:</span>    <span class="token key atrule">prefer-ip-address</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token comment" spellcheck="true">#实例名称: localhost:lagou-service-resume:8080->可以自定义</span>    <span class="token key atrule">instance-id</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>spring.cloud.client.ip<span class="token punctuation">-</span>address<span class="token punctuation">}</span><span class="token punctuation">:</span>$<span class="token punctuation">{</span>Spring.application.name<span class="token punctuation">}</span><span class="token punctuation">:</span>$<span class="token punctuation">{</span>server.port<span class="token punctuation">}</span><span class="token punctuation">:</span>@project.version@    <span class="token comment" spellcheck="true">#自定义元数据</span>    <span class="token key atrule">metadata-map</span><span class="token punctuation">:</span>      <span class="token comment" spellcheck="true">#数据是键值对形式</span>      <span class="token key atrule">cluster</span><span class="token punctuation">:</span> cl1      <span class="token key atrule">region</span><span class="token punctuation">:</span> rn1</code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664024734957-bb7a049e-49d9-4a32-a71b-8ff3a27bd16c.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=228&amp;id=u24a472f5&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=285&amp;originWidth=1023&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=68335&amp;status=done&amp;style=none&amp;taskId=u8a2fe21b-188f-4bf6-9d85-d804c7c4cd3&amp;title=&amp;width=818.4" alt="image.png"></p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * 模拟使用配置中心的共享配置信息 */</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/config"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConfigController</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//配置中心的文件里的配置信息</span>    <span class="token comment" spellcheck="true">//和使用本地配置信息一样</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${gitee.msg}"</span><span class="token punctuation">)</span>     <span class="token keyword">private</span> String msg<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${gitee.name}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/viewconfig"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">viewconfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"malMsg===>"</span><span class="token operator">+</span>msg<span class="token operator">+</span><span class="token string">" giteeName===>"</span><span class="token operator">+</span>name<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664026139202-ff1f29c3-b0d2-4c28-b4d8-550a82db927b.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=107&amp;id=u640e7518&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=134&amp;originWidth=525&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=13293&amp;status=done&amp;style=none&amp;taskId=u54292426-f043-4f60-9990-387762d16f0&amp;title=&amp;width=420" alt="image.png"><br><a name="ZGUk9"></a></p><h1 id="Config配置⼿动刷新"><a href="#Config配置⼿动刷新" class="headerlink" title="Config配置⼿动刷新"></a>Config配置⼿动刷新</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664026210202-c4ff4ea4-e1ce-4e51-8e28-f1045b026d65.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=370&amp;id=u0016b02a&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=463&amp;originWidth=1042&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=120574&amp;status=done&amp;style=none&amp;taskId=uaba3001f-4e77-421d-b7b6-16aebb9096e&amp;title=&amp;width=833.6" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664026247231-2ad925dc-5d7e-43b7-8a59-b0d9f74bf25a.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=377&amp;id=u2581c629&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=471&amp;originWidth=533&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=31870&amp;status=done&amp;style=none&amp;taskId=u8a663933-b7a6-416b-87d6-02455a79c8b&amp;title=&amp;width=426.4" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664026260275-9a468da0-71d7-4b76-9814-b4a5eb92fbfe.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=284&amp;id=u05e32b5d&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=355&amp;originWidth=1025&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=80440&amp;status=done&amp;style=none&amp;taskId=ue38ab92f-9b63-46aa-9cf3-7693fc6fd5f&amp;title=&amp;width=820" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664026296723-629fa06a-c886-4141-91d4-4347cfaceb3e.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=146&amp;id=ub69332b3&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=183&amp;originWidth=525&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=129989&amp;status=done&amp;style=none&amp;taskId=u3a3f035e-5953-476c-9156-8e79f6dbd58&amp;title=&amp;width=420" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664026761273-b92e39cd-b804-457b-bf4c-1c5f6e50ced6.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=343&amp;id=u38dd7c42&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=429&amp;originWidth=959&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=20512&amp;status=done&amp;style=none&amp;taskId=uee7861ea-f320-40e6-9db8-fc7527d967d&amp;title=&amp;width=767.2" alt="image.png"><br><a name="uFJyS"></a></p><h1 id="Config配置⾃动更新"><a href="#Config配置⾃动更新" class="headerlink" title="Config配置⾃动更新"></a>Config配置⾃动更新</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664026772129-b6fc5816-3021-45ab-8bd5-5d19824f2858.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=526&amp;id=ua85fe5d3&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=657&amp;originWidth=1054&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=178920&amp;status=done&amp;style=none&amp;taskId=u1ba5777d-0984-4755-a5ef-a0f9f95c814&amp;title=&amp;width=843.2" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664026781722-92b8b779-07ee-425d-960d-d937a15cff31.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=649&amp;id=u5afed43a&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=811&amp;originWidth=1019&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=151097&amp;status=done&amp;style=none&amp;taskId=u46299a96-ac77-4cdf-861c-97b3ba69406&amp;title=&amp;width=815.2" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664027240978-eb35b52c-bced-4413-9776-746ca24f8f7f.png#clientId=uca7daba8-023b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=138&amp;id=ua14d9f19&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=173&amp;originWidth=1018&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=46113&amp;status=done&amp;style=none&amp;taskId=u0e1a1efb-be89-4067-8a09-eaabaecbb8e&amp;title=&amp;width=814.4" alt="image.png"><br><a name="xpRlA"></a></p><h2 id="配置中心服务端-两个resume-客户端-添加消息总线⽀持"><a href="#配置中心服务端-两个resume-客户端-添加消息总线⽀持" class="headerlink" title="(配置中心服务端+两个resume(客户端))添加消息总线⽀持"></a>(配置中心服务端+两个resume(客户端))添加消息总线⽀持</h2><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-bus-amqp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><p><a name="HGfEs"></a></p><h2 id="配置中心服务端-两个resume-客户端-添加配置"><a href="#配置中心服务端-两个resume-客户端-添加配置" class="headerlink" title="(配置中心服务端+两个resume(客户端))添加配置"></a>(配置中心服务端+两个resume(客户端))添加配置</h2><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">Spring</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">#配置rabbitmq</span>  <span class="token key atrule">rabbitmq</span><span class="token punctuation">:</span>    <span class="token key atrule">host</span><span class="token punctuation">:</span> 127.0.0.1    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">5672</span>    <span class="token key atrule">username</span><span class="token punctuation">:</span> guest    <span class="token key atrule">password</span><span class="token punctuation">:</span> guest</code></pre><p><a name="TQ0ed"></a></p><h2 id="微服务暴露端⼝"><a href="#微服务暴露端⼝" class="headerlink" title="微服务暴露端⼝"></a>微服务暴露端⼝</h2><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">management</span><span class="token punctuation">:</span>    <span class="token key atrule">endpoints</span><span class="token punctuation">:</span>        <span class="token key atrule">web</span><span class="token punctuation">:</span>            <span class="token key atrule">exposure</span><span class="token punctuation">:</span>                <span class="token key atrule">include</span><span class="token punctuation">:</span> bus<span class="token punctuation">-</span>refresh建议暴露所有的端⼝<span class="token key atrule">management</span><span class="token punctuation">:</span>    <span class="token key atrule">endpoints</span><span class="token punctuation">:</span>        <span class="token key atrule">web</span><span class="token punctuation">:</span>            <span class="token key atrule">exposure</span><span class="token punctuation">:</span>                <span class="token key atrule">include</span><span class="token punctuation">:</span> <span class="token string">"*"</span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664028078299-c0f8f629-1358-453d-881c-7aba60fadfba.png#clientId=u6c15fa7f-1d54-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=286&amp;id=ub1e811d0&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=357&amp;originWidth=1021&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=82721&amp;status=done&amp;style=none&amp;taskId=u85956639-1916-4565-a493-af69473a772&amp;title=&amp;width=816.8" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664028851431-bea7630c-92a1-437a-9457-469b50451386.png#clientId=u6c15fa7f-1d54-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=230&amp;id=u3fb94774&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=287&amp;originWidth=796&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=11683&amp;status=done&amp;style=none&amp;taskId=uaa81197a-c81c-4678-807c-28e09213063&amp;title=&amp;width=636.8" alt="image.png"><br><a name="DwL8t"></a></p><h1 id="Spring-Cloud-Stream消息驱动组件引入"><a href="#Spring-Cloud-Stream消息驱动组件引入" class="headerlink" title="Spring Cloud Stream消息驱动组件引入"></a>Spring Cloud Stream消息驱动组件引入</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664028976451-3643ee28-45c9-49a8-b2e4-7d820fb5aef5.png#clientId=u6c15fa7f-1d54-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=290&amp;id=u1106412a&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=362&amp;originWidth=1038&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=81814&amp;status=done&amp;style=none&amp;taskId=ufc80e306-3d15-48a8-945a-859124989ea&amp;title=&amp;width=830.4" alt="image.png"><br><a name="tQyvS"></a></p><h2 id="Stream解决的痛点问题"><a href="#Stream解决的痛点问题" class="headerlink" title="Stream解决的痛点问题"></a>Stream解决的痛点问题</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664029097512-957d20b0-a840-49e3-b828-8714243c98c7.png#clientId=u6c15fa7f-1d54-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=68&amp;id=u86395eb6&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=85&amp;originWidth=965&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=17481&amp;status=done&amp;style=none&amp;taskId=u3290bfa3-1344-4c91-a0a7-e93f6850994&amp;title=&amp;width=772" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664029105170-cb1f3de5-0986-491c-b1eb-28918e3ce7e6.png#clientId=u6c15fa7f-1d54-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=427&amp;id=u364eddf9&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=534&amp;originWidth=1031&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=187108&amp;status=done&amp;style=none&amp;taskId=uee7d2d24-b7e1-43f1-b696-a465a8e8147&amp;title=&amp;width=824.8" alt="image.png"><br><a name="L6QjS"></a></p><h2 id="Stream重要概念"><a href="#Stream重要概念" class="headerlink" title="Stream重要概念"></a>Stream重要概念</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664029169558-50c7524b-c8f7-492a-a959-f5afb5ca3e4c.png#clientId=u6c15fa7f-1d54-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=737&amp;id=ubf143eb0&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=921&amp;originWidth=1049&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=150961&amp;status=done&amp;style=none&amp;taskId=ub162b980-ce30-4feb-abbb-bbbc7bed022&amp;title=&amp;width=839.2" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664029173917-49dd7af3-573a-41c7-91a6-597badaf0461.png#clientId=u6c15fa7f-1d54-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=369&amp;id=ub9d5320b&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=461&amp;originWidth=639&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=105820&amp;status=done&amp;style=none&amp;taskId=uc2696975-9110-44e9-b17e-d63e8b255f4&amp;title=&amp;width=511.2" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664029227491-3ce58806-1b84-444d-ae55-0a37de60ca01.png#clientId=u6c15fa7f-1d54-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=205&amp;id=udb878c2d&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=256&amp;originWidth=1027&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=80736&amp;status=done&amp;style=none&amp;taskId=u7dfb8a3d-e3cb-41b9-9d0d-c0cfeda1622&amp;title=&amp;width=821.6" alt="image.png"><br><a name="jebT9"></a></p><h2 id="传统MQ模型与Stream消息驱动模型"><a href="#传统MQ模型与Stream消息驱动模型" class="headerlink" title="传统MQ模型与Stream消息驱动模型"></a>传统MQ模型与Stream消息驱动模型</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664029238668-465151b7-23bd-4876-b6b9-75fe1495fa81.png#clientId=u6c15fa7f-1d54-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=562&amp;id=ue4c5453e&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=703&amp;originWidth=923&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=65915&amp;status=done&amp;style=none&amp;taskId=u4e80b940-1fa7-472e-b8cc-1e921872f1a&amp;title=&amp;width=738.4" alt="image.png"><br><a name="fHJ3f"></a></p><h2 id="Stream消息通信⽅式及编程模型"><a href="#Stream消息通信⽅式及编程模型" class="headerlink" title="Stream消息通信⽅式及编程模型"></a>Stream消息通信⽅式及编程模型</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664029297202-99bc2d20-4506-4b02-a951-4943bf40fa29.png#clientId=u6c15fa7f-1d54-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=322&amp;id=ue9092fe4&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=403&amp;originWidth=1015&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=123696&amp;status=done&amp;style=none&amp;taskId=uf2a6d9b0-40a9-4919-8945-23deee1d003&amp;title=&amp;width=812" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664029303476-04886bbe-af6a-46ec-846e-54fb7afc9e4e.png#clientId=u6c15fa7f-1d54-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=178&amp;id=u803af0ef&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=222&amp;originWidth=1034&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=47202&amp;status=done&amp;style=none&amp;taskId=u3dbc2451-b7cc-4a38-8d35-b16d8c3ff4f&amp;title=&amp;width=827.2" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664029320121-98c984e9-5468-407b-b451-f1d8ea07e684.png#clientId=u6c15fa7f-1d54-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=632&amp;id=ua0ab82bd&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=790&amp;originWidth=1036&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=169044&amp;status=done&amp;style=none&amp;taskId=ud8ac4e4b-069d-44e3-8c9f-02751ee2210&amp;title=&amp;width=828.8" alt="image.png"><br><a name="ctAN8"></a></p><h1 id="Stream消息驱动之开发⽣产者端"><a href="#Stream消息驱动之开发⽣产者端" class="headerlink" title="Stream消息驱动之开发⽣产者端"></a>Stream消息驱动之开发⽣产者端</h1><p><a name="ovORN"></a></p><h2 id="在lagou-parent下新建⼦module：lagou-cloud-stream-producer-9090"><a href="#在lagou-parent下新建⼦module：lagou-cloud-stream-producer-9090" class="headerlink" title="在lagou_parent下新建⼦module：lagou-cloud-stream-producer-9090"></a>在lagou_parent下新建⼦module：lagou-cloud-stream-producer-9090</h2><p><a name="PSv9j"></a></p><h2 id="pom-xml中添加依赖"><a href="#pom-xml中添加依赖" class="headerlink" title="pom.xml中添加依赖"></a>pom.xml中添加依赖</h2><pre class=" language-xml"><code class="language-xml">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--eureka client 客户端依赖引⼊--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-netflix-eureka-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--spring cloud stream 依赖（rabbit）--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-stream-rabbit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span></code></pre><p><a name="fLPmH"></a></p><h2 id="application-yml添加配置"><a href="#application-yml添加配置" class="headerlink" title="application.yml添加配置"></a>application.yml添加配置</h2><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9090</span><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> lagou<span class="token punctuation">-</span>cloud<span class="token punctuation">-</span>stream<span class="token punctuation">-</span>producer  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">stream</span><span class="token punctuation">:</span>      <span class="token key atrule">binders</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># 绑定MQ服务信息（此处我们是RabbitMQ）</span>        <span class="token key atrule">lagouRabbitBinder</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># 给Binder定义的名称，⽤于后⾯的关联</span>          <span class="token key atrule">type</span><span class="token punctuation">:</span> rabbit <span class="token comment" spellcheck="true"># MQ类型，如果是Kafka的话，此处配置kafka</span>          <span class="token key atrule">environment</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># MQ环境配置（⽤户名、密码等）</span>            <span class="token key atrule">spring</span><span class="token punctuation">:</span>              <span class="token key atrule">rabbitmq</span><span class="token punctuation">:</span>                <span class="token key atrule">host</span><span class="token punctuation">:</span> localhost                <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">5672</span>                <span class="token key atrule">username</span><span class="token punctuation">:</span> guest                <span class="token key atrule">password</span><span class="token punctuation">:</span> guest      <span class="token key atrule">bindings</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># 关联整合通道和binder对象</span>        <span class="token key atrule">output</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># output是我们定义的通道名称，此处不能乱改</span>          <span class="token key atrule">destination</span><span class="token punctuation">:</span> lagouExchange <span class="token comment" spellcheck="true"># 要使⽤的Exchange名称（消息队列主题名称）</span>          <span class="token key atrule">content-type</span><span class="token punctuation">:</span> text/plain <span class="token comment" spellcheck="true"># application/json # 消息类型设置，⽐如json</span>          <span class="token comment" spellcheck="true">#binder: lagouRabbitBinder # 关联MQ服务</span><span class="token key atrule">eureka</span><span class="token punctuation">:</span>  <span class="token key atrule">client</span><span class="token punctuation">:</span>    <span class="token key atrule">serviceUrl</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># eureka server的路径</span>      <span class="token key atrule">defaultZone</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//lagoucloudeurekaservera<span class="token punctuation">:</span>8761/eureka/<span class="token punctuation">,</span>http<span class="token punctuation">:</span>//lagoucloudeurekaserverb<span class="token punctuation">:</span>8762/eureka/ <span class="token comment" spellcheck="true">#把 eureka 集群中的所有 url 都填写了进来，也可以只写⼀台，因为各个 eureka server 可以同步注册表</span>    <span class="token key atrule">instance</span><span class="token punctuation">:</span>      <span class="token key atrule">prefer-ip-address</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true">#使⽤ip注册</span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664030885202-250a3aeb-1972-47fa-b1a2-b9e4f53a9de1.png#clientId=u6c15fa7f-1d54-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=311&amp;id=u40e8ba36&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=389&amp;originWidth=948&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=100691&amp;status=done&amp;style=none&amp;taskId=ucb9c3b65-1a47-44db-94ec-683ca4a2a57&amp;title=&amp;width=758.4" alt="image.png"><br><a name="QUgMq"></a></p><h2 id="启动类-4"><a href="#启动类-4" class="headerlink" title="启动类"></a>启动类</h2><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@EnableDiscoveryClient</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StreamProducerApplication9090</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>StreamProducerApplication9090<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><a name="ZqpPs"></a></p><h2 id="业务类开发（发送消息接⼝、接⼝实现类、Controller"><a href="#业务类开发（发送消息接⼝、接⼝实现类、Controller" class="headerlink" title="业务类开发（发送消息接⼝、接⼝实现类、Controller)"></a>业务类开发（发送消息接⼝、接⼝实现类、Controller)</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>stream<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>EnableBinding<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>stream<span class="token punctuation">.</span>messaging<span class="token punctuation">.</span>Source<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>messaging<span class="token punctuation">.</span>support<span class="token punctuation">.</span>MessageBuilder<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//Source.class里对输出通道的定义(是spring cloud stream内置的通道封装)</span><span class="token annotation punctuation">@EnableBinding</span><span class="token punctuation">(</span>Source<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MessageProducerImpl</span> <span class="token keyword">implements</span> <span class="token class-name">IMessageProducer</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//将messageChannel的封装对象source注入</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> Source source<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendMessage</span><span class="token punctuation">(</span>String content<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//向mq中发送信息(不是直接操作mq,而是操作spring cloud stream</span>        <span class="token comment" spellcheck="true">//使用通道向外发出信息(指的是source里的output通道)</span>        source<span class="token punctuation">.</span><span class="token function">output</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>MessageBuilder<span class="token punctuation">.</span><span class="token function">withPayload</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IMessageProducer</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendMessage</span><span class="token punctuation">(</span>String content<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@SpringBootTest</span><span class="token punctuation">(</span>classes <span class="token operator">=</span> <span class="token punctuation">{</span>StreamProducerApplication9090<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MessageProducerTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> IMessageProducer iMessageProducer<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSendMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        iMessageProducer<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token string">"hello,world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><a name="vIsV5"></a></p><h2 id="启动测试-发现多了我们的服务"><a href="#启动测试-发现多了我们的服务" class="headerlink" title="启动测试,发现多了我们的服务"></a>启动测试,发现多了我们的服务</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664031105119-3a2f8f3e-2024-43c5-8774-2fe963b7db19.png#clientId=u6c15fa7f-1d54-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=457&amp;id=u147c058c&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=571&amp;originWidth=611&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=42236&amp;status=done&amp;style=none&amp;taskId=uef22649b-cf6d-48a7-be87-22de42a8315&amp;title=&amp;width=488.8" alt="image.png"><br><a name="o0XSN"></a></p><h1 id="Stream消息驱动之开发消费者端"><a href="#Stream消息驱动之开发消费者端" class="headerlink" title="Stream消息驱动之开发消费者端"></a>Stream消息驱动之开发消费者端</h1><p><a name="PMXSC"></a></p><h2 id="pom-2"><a href="#pom-2" class="headerlink" title="pom"></a>pom</h2><pre class=" language-xml"><code class="language-xml">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--eureka client 客户端依赖引⼊--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-netflix-eureka-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--spring cloud stream 依赖（rabbit）--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-stream-rabbit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span></code></pre><p><a name="X3HMg"></a></p><h2 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml"></a>application.yml</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664031204119-75e27927-15e8-4248-bca1-c82fe273222e.png#clientId=u6c15fa7f-1d54-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=545&amp;id=u02a8cc5d&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=681&amp;originWidth=992&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=162485&amp;status=done&amp;style=none&amp;taskId=ua224ff34-2afd-4a87-aac4-a484f6f8e6f&amp;title=&amp;width=793.6" alt="image.png"></p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9091</span><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> lagou<span class="token punctuation">-</span>cloud<span class="token punctuation">-</span>stream<span class="token punctuation">-</span>producer  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">stream</span><span class="token punctuation">:</span>      <span class="token key atrule">binders</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># 绑定MQ服务信息（此处我们是RabbitMQ）</span>        <span class="token key atrule">lagouRabbitBinder</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># 给Binder定义的名称，⽤于后⾯的关联</span>          <span class="token key atrule">type</span><span class="token punctuation">:</span> rabbit <span class="token comment" spellcheck="true"># MQ类型，如果是Kafka的话，此处配置kafka</span>          <span class="token key atrule">environment</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># MQ环境配置（⽤户名、密码等）</span>            <span class="token key atrule">spring</span><span class="token punctuation">:</span>              <span class="token key atrule">rabbitmq</span><span class="token punctuation">:</span>                <span class="token key atrule">host</span><span class="token punctuation">:</span> localhost                <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">5672</span>                <span class="token key atrule">username</span><span class="token punctuation">:</span> guest                <span class="token key atrule">password</span><span class="token punctuation">:</span> guest      <span class="token key atrule">bindings</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># 关联整合通道和binder对象</span>        <span class="token key atrule">input</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># output是我们定义的通道名称，此处不能乱改</span>          <span class="token key atrule">destination</span><span class="token punctuation">:</span> lagouExchange <span class="token comment" spellcheck="true"># 要使⽤的Exchange名称（消息队列主题名称）</span>          <span class="token key atrule">content-type</span><span class="token punctuation">:</span> text/plain <span class="token comment" spellcheck="true"># application/json # 消息类型设置，⽐如json</span>          <span class="token key atrule">binder</span><span class="token punctuation">:</span> lagouRabbitBinder <span class="token comment" spellcheck="true"># 关联MQ服务</span><span class="token key atrule">eureka</span><span class="token punctuation">:</span>  <span class="token key atrule">client</span><span class="token punctuation">:</span>    <span class="token key atrule">serviceUrl</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># eureka server的路径</span>      <span class="token key atrule">defaultZone</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//lagoucloudeurekaservera<span class="token punctuation">:</span>8761/eureka/<span class="token punctuation">,</span>http<span class="token punctuation">:</span>//lagoucloudeurekaserverb<span class="token punctuation">:</span>8762/eureka/ <span class="token comment" spellcheck="true">#把 eureka 集群中的所有 url 都填写了进来，也可以只写⼀台，因为各个 eureka server 可以同步注册表</span>    <span class="token key atrule">instance</span><span class="token punctuation">:</span>      <span class="token key atrule">prefer-ip-address</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true">#使⽤ip注册</span></code></pre><p><a name="e4VTV"></a></p><h2 id="启动类-5"><a href="#启动类-5" class="headerlink" title="启动类"></a>启动类</h2><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@EnableDiscoveryClient</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StreamConsumerApplication9091</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>StreamConsumerApplication9091<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><a name="qfKCZ"></a></p><h2 id="消息消费者监听"><a href="#消息消费者监听" class="headerlink" title="消息消费者监听"></a>消息消费者监听</h2><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@EnableBinding</span><span class="token punctuation">(</span>Sink<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MessageConsumerService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@StreamListener</span><span class="token punctuation">(</span>Sink<span class="token punctuation">.</span>INPUT<span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">receiveMessage</span><span class="token punctuation">(</span>Message<span class="token operator">&lt;</span>String<span class="token operator">></span> message<span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"===========>接收到消息: "</span><span class="token operator">+</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><a name="iJlkB"></a></p><h2 id="测试-分别启动发送者和接收者-然后指向刚才的test方法发送消息"><a href="#测试-分别启动发送者和接收者-然后指向刚才的test方法发送消息" class="headerlink" title="测试: 分别启动发送者和接收者,然后指向刚才的test方法发送消息"></a>测试: 分别启动发送者和接收者,然后指向刚才的test方法发送消息</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664031801405-1bb4505a-6d53-4b6a-9a7b-dbb2697be11f.png#clientId=u6c15fa7f-1d54-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=107&amp;id=uaa4a40ea&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=134&amp;originWidth=1257&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=211846&amp;status=done&amp;style=none&amp;taskId=ue6f9d9ac-3f31-47d4-a811-95a3f14d225&amp;title=&amp;width=1005.6" alt="image.png"><br><a name="v7xMB"></a></p><h1 id="Stream⾼级之⾃定义消息通道"><a href="#Stream⾼级之⾃定义消息通道" class="headerlink" title="Stream⾼级之⾃定义消息通道"></a>Stream⾼级之⾃定义消息通道</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664032065189-29a57391-8886-4122-aa76-5524fa9556f3.png#clientId=u6c15fa7f-1d54-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=290&amp;id=u99ea36ad&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=362&amp;originWidth=1019&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=103111&amp;status=done&amp;style=none&amp;taskId=u00536e47-4f16-4d21-a820-dec24e3b7e4&amp;title=&amp;width=815.2" alt="image.png"></p><pre class=" language-java"><code class="language-java"><span class="token keyword">interface</span> <span class="token class-name">CustomChannel</span> <span class="token punctuation">{</span>    String INPUT_LOG <span class="token operator">=</span> <span class="token string">"inputLog"</span><span class="token punctuation">;</span>    String OUTPUT_LOG <span class="token operator">=</span> <span class="token string">"outputLog"</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Input</span><span class="token punctuation">(</span>INPUT_LOG<span class="token punctuation">)</span>    SubscribableChannel <span class="token function">inputLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Output</span><span class="token punctuation">(</span>OUTPUT_LOG<span class="token punctuation">)</span>    MessageChannel <span class="token function">outputLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664032104047-7e6587d2-bba3-4883-b26f-e9c59604d140.png#clientId=u6c15fa7f-1d54-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=165&amp;id=u297bafe3&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=206&amp;originWidth=1029&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=33378&amp;status=done&amp;style=none&amp;taskId=ue290c3ca-7d77-4c6b-89c9-fbf8799825a&amp;title=&amp;width=823.2" alt="image.png"></p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">bindings</span><span class="token punctuation">:</span>    <span class="token key atrule">inputLog</span><span class="token punctuation">:</span>        <span class="token key atrule">destination</span><span class="token punctuation">:</span> lagouExchange  <span class="token key atrule">outputLog</span><span class="token punctuation">:</span>      <span class="token key atrule">destination</span><span class="token punctuation">:</span> eduExchange</code></pre><p><a name="XRqSH"></a></p><h1 id="Stream⾼级之消息分组"><a href="#Stream⾼级之消息分组" class="headerlink" title="Stream⾼级之消息分组"></a>Stream⾼级之消息分组</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664032161323-503428af-4490-4e49-a527-eb57b8121482.png#clientId=u6c15fa7f-1d54-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=485&amp;id=u80087729&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=606&amp;originWidth=1054&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=199514&amp;status=done&amp;style=none&amp;taskId=u1c886b16-8322-42dc-81e4-21df8c98022&amp;title=&amp;width=843.2" alt="image.png"><br><a name="JUJlW"></a></p><h1 id="springcloud常⻅问题及解决⽅案"><a href="#springcloud常⻅问题及解决⽅案" class="headerlink" title="springcloud常⻅问题及解决⽅案"></a>springcloud常⻅问题及解决⽅案</h1><p><a name="qqHcX"></a></p><h2 id="Eureka-服务发现慢的原因"><a href="#Eureka-服务发现慢的原因" class="headerlink" title="Eureka 服务发现慢的原因"></a>Eureka 服务发现慢的原因</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664032194889-d0a91539-6fe2-4951-b042-5240b24c337c.png#clientId=u6c15fa7f-1d54-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=673&amp;id=u2e304a2f&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=841&amp;originWidth=1060&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=245762&amp;status=done&amp;style=none&amp;taskId=u9f1e7a8f-9e21-4591-9d7c-dfaa01a99c2&amp;title=&amp;width=848" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664032198490-ecc37d6b-c4ce-4517-ac42-259accd9ea68.png#clientId=u6c15fa7f-1d54-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=552&amp;id=ue8028eb8&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=690&amp;originWidth=1148&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=50312&amp;status=done&amp;style=none&amp;taskId=ufa495744-45fe-43af-b6f2-5c25865c048&amp;title=&amp;width=918.4" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664032233732-27f8feb5-ca23-4325-ad1f-f240fc91801f.png#clientId=u6c15fa7f-1d54-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=766&amp;id=u7ea494a3&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=957&amp;originWidth=1024&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=314345&amp;status=done&amp;style=none&amp;taskId=ubb28989d-7dbc-4a1c-99b9-49a0531db36&amp;title=&amp;width=819.2" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664032255669-361faa00-aebb-45d4-8228-c9953be23dda.png#clientId=u6c15fa7f-1d54-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=214&amp;id=u7dac25b0&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=267&amp;originWidth=1028&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=67372&amp;status=done&amp;style=none&amp;taskId=ub6eb08c5-cdb8-44f8-ac13-39198463537&amp;title=&amp;width=822.4" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664032278788-4aad45b8-da6f-45ba-97b2-0fe9b6e87c81.png#clientId=u6c15fa7f-1d54-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=705&amp;id=u3ad70aca&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=881&amp;originWidth=1016&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=269477&amp;status=done&amp;style=none&amp;taskId=u1b503f00-0fef-4a16-b253-ef4124bf726&amp;title=&amp;width=812.8" alt="image.png"><br><a name="EpVvm"></a></p><h2 id="Spring-Cloud-各组件超时"><a href="#Spring-Cloud-各组件超时" class="headerlink" title="Spring Cloud 各组件超时"></a>Spring Cloud 各组件超时</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664032291269-10d19b9d-df1c-4c4c-b416-c65f5312fafa.png#clientId=u6c15fa7f-1d54-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=282&amp;id=u83de0a35&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=352&amp;originWidth=1025&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=98215&amp;status=done&amp;style=none&amp;taskId=u38920fda-53f3-4f3b-90c5-0dcd4e9d8f9&amp;title=&amp;width=820" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664032310284-cd2e99e0-6f0d-4625-943a-05fc4dbbd74a.png#clientId=u6c15fa7f-1d54-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=785&amp;id=uccc15072&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=981&amp;originWidth=1025&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=261780&amp;status=done&amp;style=none&amp;taskId=u4ec6da9b-d797-4e25-adfd-1b3f9cbf8a2&amp;title=&amp;width=820" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664032316128-6c3bc010-8267-41d6-bffd-ef9e94097df0.png#clientId=u6c15fa7f-1d54-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=59&amp;id=u2847279d&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=74&amp;originWidth=809&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=12500&amp;status=done&amp;style=none&amp;taskId=ueba57709-f214-47db-9fc5-e5fa9a29882&amp;title=&amp;width=647.2" alt="image.png"><br><a name="s6dMR"></a></p><h1 id="springcloud高级进阶"><a href="#springcloud高级进阶" class="headerlink" title="springcloud高级进阶"></a>springcloud高级进阶</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664032716412-02fc3c16-41c1-4bce-b199-eba30af254fa.png#clientId=u6c15fa7f-1d54-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=617&amp;id=u89c11c1e&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=771&amp;originWidth=775&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=143209&amp;status=done&amp;style=none&amp;taskId=ubaaa3528-a001-40c4-8bd9-b4b309379d0&amp;title=&amp;width=620" alt="image.png"><br><a name="nqAAM"></a></p><h1 id="微服务监控之分布式链路追踪技术-Sleuth-Zipkin"><a href="#微服务监控之分布式链路追踪技术-Sleuth-Zipkin" class="headerlink" title="微服务监控之分布式链路追踪技术 Sleuth + Zipkin"></a>微服务监控之分布式链路追踪技术 Sleuth + Zipkin</h1><p><a name="PzD0o"></a></p><h2 id="分布式链路追踪技术适⽤场景（问题场景）"><a href="#分布式链路追踪技术适⽤场景（问题场景）" class="headerlink" title="分布式链路追踪技术适⽤场景（问题场景）"></a>分布式链路追踪技术适⽤场景（问题场景）</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664066273508-4c8ff121-ad77-4ffa-ac96-cb0795df6767.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=447&amp;id=ue4bd1f02&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=559&amp;originWidth=1016&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=147410&amp;status=done&amp;style=none&amp;taskId=u75a6b4b8-8080-4195-bb0b-9e50e998ce8&amp;title=&amp;width=812.8" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664066320156-53d7320f-f98d-4e46-aaf0-d1e71a8feb84.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=678&amp;id=u4dba47a2&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=847&amp;originWidth=1031&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=173221&amp;status=done&amp;style=none&amp;taskId=u1ad1b457-0e51-4638-9d36-5de0c96cb28&amp;title=&amp;width=824.8" alt="image.png"><br><a name="WFU0F"></a></p><h2 id="分布式链路追踪技术核⼼思想"><a href="#分布式链路追踪技术核⼼思想" class="headerlink" title="分布式链路追踪技术核⼼思想"></a>分布式链路追踪技术核⼼思想</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664066342549-87e35fc5-63f3-4fcf-88fc-4cc058dae7bf.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=120&amp;id=ufeb77889&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=150&amp;originWidth=993&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=38291&amp;status=done&amp;style=none&amp;taskId=u118d95d0-77a6-49b3-bd2a-b4cdce01d1d&amp;title=&amp;width=794.4" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664066346159-adc09b74-2f75-4584-ba6c-a75449ac0ce2.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=413&amp;id=u792a0cb1&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=516&amp;originWidth=924&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=32015&amp;status=done&amp;style=none&amp;taskId=u8801d473-ad5f-4e01-b920-76cbdf4a32e&amp;title=&amp;width=739.2" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664066369231-4ca55a31-436c-419a-b7ce-8d98c6aa236d.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=311&amp;id=uef99456c&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=389&amp;originWidth=1037&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=119399&amp;status=done&amp;style=none&amp;taskId=ubd5aaaa4-f808-44d9-afa8-82651b233c1&amp;title=&amp;width=829.6" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664066374930-2b994caf-797e-47bd-b4ea-d619e1e0fe56.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=630&amp;id=u58be46b7&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=788&amp;originWidth=1199&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=108288&amp;status=done&amp;style=none&amp;taskId=u8bdbc5da-4b15-4f28-9cdc-b9a35ebc4d4&amp;title=&amp;width=959.2" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664066603751-71ffdcba-3506-4fd7-a427-1b2d823d9d67.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=727&amp;id=u0cab3b6e&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=909&amp;originWidth=1024&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=262961&amp;status=done&amp;style=none&amp;taskId=u11afa00f-26d9-4b91-bd1c-696eae1e2f9&amp;title=&amp;width=819.2" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664066617990-0a120c75-f09e-4c3d-a01e-5aceee3af065.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=750&amp;id=u3f2c3b14&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=937&amp;originWidth=1033&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=252954&amp;status=done&amp;style=none&amp;taskId=ub3617cfe-fa91-44a8-bc10-242280989e9&amp;title=&amp;width=826.4" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664066679785-5babf108-0e0c-4391-b427-ab3d0f13112c.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=555&amp;id=u26a52635&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=694&amp;originWidth=1031&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=59464&amp;status=done&amp;style=none&amp;taskId=u2377bf61-fbdd-41e0-9372-af0cd26b723&amp;title=&amp;width=824.8" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664066682936-bc64eaf2-11ab-4e3d-ace4-eaa6a54587a3.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=463&amp;id=ub11d112b&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=579&amp;originWidth=892&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=102420&amp;status=done&amp;style=none&amp;taskId=u76f7d24f-5aa7-471c-a04f-300adc617f5&amp;title=&amp;width=713.6" alt="image.png"><br><a name="qEgWV"></a></p><h1 id="Sleuth使用"><a href="#Sleuth使用" class="headerlink" title="Sleuth使用"></a>Sleuth使用</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664066763972-ea999d14-a704-45ec-b159-46eb97198e75.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=176&amp;id=ud7c07586&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=220&amp;originWidth=327&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=75459&amp;status=done&amp;style=none&amp;taskId=u538e6641-0909-48da-b224-62d5194d5e9&amp;title=&amp;width=261.6" alt="image.png"><br><a name="EsUrS"></a></p><h2 id="每⼀个需要被追踪踪迹的微服务⼯程都引⼊依赖坐标"><a href="#每⼀个需要被追踪踪迹的微服务⼯程都引⼊依赖坐标" class="headerlink" title="每⼀个需要被追踪踪迹的微服务⼯程都引⼊依赖坐标"></a>每⼀个需要被追踪踪迹的微服务⼯程都引⼊依赖坐标</h2><pre class=" language-xml"><code class="language-xml">        <span class="token comment" spellcheck="true">&lt;!--链路追踪--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-sleuth<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><p><a name="YBdR8"></a></p><h2 id="每⼀个微服务都修改application-yml配置⽂件，添加⽇志级别"><a href="#每⼀个微服务都修改application-yml配置⽂件，添加⽇志级别" class="headerlink" title="每⼀个微服务都修改application.yml配置⽂件，添加⽇志级别"></a>每⼀个微服务都修改application.yml配置⽂件，添加⽇志级别</h2><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true">#分布式链路追踪</span><span class="token key atrule">logging</span><span class="token punctuation">:</span>  <span class="token key atrule">level</span><span class="token punctuation">:</span>    <span class="token key atrule">org.springframework.web.servlet.DispatcherServlet</span><span class="token punctuation">:</span> debug    <span class="token key atrule">org.springframework.cloud.sleuth</span><span class="token punctuation">:</span> debug</code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664067857522-8f012434-ebd4-4365-8028-fa77bfd9d168.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=107&amp;id=u8d921cdb&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=134&amp;originWidth=648&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=9183&amp;status=done&amp;style=none&amp;taskId=ud7f21176-fc6e-4b65-bd24-cc9bb41dce8&amp;title=&amp;width=518.4" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664067848270-020faaf1-da82-4dd1-a18c-a03463a4c8e7.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=112&amp;id=u35d4ebbd&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=140&amp;originWidth=558&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=8779&amp;status=done&amp;style=none&amp;taskId=u64669ea4-2a83-474e-85a4-1b0e0e6a375&amp;title=&amp;width=446.4" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664067838591-6afded96-8c3d-45db-b899-e7577620627e.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=159&amp;id=ued621b9a&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=199&amp;originWidth=670&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=213022&amp;status=done&amp;style=none&amp;taskId=u8a6f9ae8-9a08-4b42-a997-66aa7afedd5&amp;title=&amp;width=536" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664068125387-14d36a88-c315-418b-8bb8-b4de91b750c8.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=248&amp;id=u6a059c80&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=310&amp;originWidth=1033&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=104910&amp;status=done&amp;style=none&amp;taskId=ub65a4249-949e-4b2e-bca9-b576a9c882b&amp;title=&amp;width=826.4" alt="image.png"><br><a name="X7VGW"></a></p><h1 id="结合-Zipkin-展示追踪数据"><a href="#结合-Zipkin-展示追踪数据" class="headerlink" title="结合 Zipkin 展示追踪数据"></a>结合 Zipkin 展示追踪数据</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664068166756-24c7e166-4a28-4ed5-891f-843378a1a2ab.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=83&amp;id=u69705968&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=104&amp;originWidth=1014&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=23872&amp;status=done&amp;style=none&amp;taskId=uaf92a870-a0dc-434c-a08e-f9476cc5352&amp;title=&amp;width=811.2" alt="image.png"><br><a name="ANCHy"></a></p><h2 id="Zipkin-Server-构建-并引入依赖"><a href="#Zipkin-Server-构建-并引入依赖" class="headerlink" title="Zipkin Server 构建,并引入依赖"></a>Zipkin Server 构建,并引入依赖</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664100793385-79de9497-0c2c-4ec0-b72c-951628a377b6.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=239&amp;id=u002b4b8a&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=355&amp;originWidth=386&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=195834&amp;status=done&amp;style=none&amp;taskId=u76cf3335-7668-4759-9a6a-712a51c4d01&amp;title=&amp;width=259.8000183105469" alt="image.png"></p><pre class=" language-xml"><code class="language-xml">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--zipkin-server的依赖坐标--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>io.zipkin.java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>zipkin-server<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.12.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">></span></span>                <span class="token comment" spellcheck="true">&lt;!--排除掉log4j2的传递依赖，避免和springboot依赖的⽇志组件冲突--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-log4j2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--zipkin-server ui界⾯依赖坐标--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>io.zipkin.java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>zipkin-autoconfigure-ui<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.12.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span></code></pre><p><a name="GvQS8"></a></p><h2 id="⼊⼝启动类"><a href="#⼊⼝启动类" class="headerlink" title="⼊⼝启动类"></a>⼊⼝启动类</h2><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@EnableZipkinServer</span> <span class="token comment" spellcheck="true">//开启zipkin服务器功能</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ZipkinServerApplication9411</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>ZipkinServerApplication9411<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><a name="YA4Em"></a></p><h2 id="application-yaml"><a href="#application-yaml" class="headerlink" title="application.yaml"></a>application.yaml</h2><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9411</span><span class="token key atrule">management</span><span class="token punctuation">:</span>  <span class="token key atrule">metrics</span><span class="token punctuation">:</span>    <span class="token key atrule">web</span><span class="token punctuation">:</span>      <span class="token key atrule">server</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true">#会检测一些没有用的东西,然后没有就报错</span>        <span class="token key atrule">auto-time-requests</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 关闭⾃动检测请求</span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664068635945-35e80780-5485-4c55-91fb-3507ab27f4f2.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=476&amp;id=ue655d860&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=595&amp;originWidth=1920&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=61863&amp;status=done&amp;style=none&amp;taskId=u96d99863-b3d6-4053-873a-8f2947d0699&amp;title=&amp;width=1536" alt="image.png"><br><a name="Ph7cs"></a></p><h2 id="Zipkin-Client-构建（在具体微服务中修改）"><a href="#Zipkin-Client-构建（在具体微服务中修改）" class="headerlink" title="Zipkin Client 构建（在具体微服务中修改）"></a>Zipkin Client 构建（在具体微服务中修改）</h2><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-zipkin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><p><a name="aHCDH"></a></p><h2 id="application-yml-中添加对zipkin-server的引⽤"><a href="#application-yml-中添加对zipkin-server的引⽤" class="headerlink" title="application.yml 中添加对zipkin server的引⽤"></a>application.yml 中添加对zipkin server的引⽤</h2><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">zipkin</span><span class="token punctuation">:</span>    <span class="token key atrule">base-url</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//127.0.0.1<span class="token punctuation">:</span><span class="token number">9411 </span><span class="token comment" spellcheck="true"># zipkin server的请求地址</span>    <span class="token key atrule">sender</span><span class="token punctuation">:</span>      <span class="token comment" spellcheck="true"># web 客户端将踪迹⽇志数据通过⽹络请求的⽅式传送到服务端，另外还有配置</span>      <span class="token comment" spellcheck="true"># kafka/rabbit 客户端将踪迹⽇志数据传递到mq进⾏中转</span>      <span class="token key atrule">type</span><span class="token punctuation">:</span> web  <span class="token key atrule">sleuth</span><span class="token punctuation">:</span>    <span class="token key atrule">sampler</span><span class="token punctuation">:</span>      <span class="token comment" spellcheck="true"># 采样率 1 代表100%全部采集 ，默认0.1 代表10% 的请求踪迹数据会被采集</span>      <span class="token comment" spellcheck="true"># ⽣产环境下，请求量⾮常⼤，没有必要所有请求的踪迹数据都采集分析，</span>      <span class="token comment" spellcheck="true"># 对于⽹络包括server端压⼒都是⽐较⼤的，可以配置采样率采集⼀定⽐例的请求的踪迹数据进⾏分析即可</span>      <span class="token key atrule">probability</span><span class="token punctuation">:</span> <span class="token number">1</span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664101294860-0d74299d-0a7a-4b00-b97f-70509e7bb42d.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=0.6428&amp;from=paste&amp;height=146&amp;id=u223aa4f0&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=183&amp;originWidth=1016&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=42762&amp;status=done&amp;style=none&amp;taskId=u4b568030-e290-45ed-a42f-ee62dba7551&amp;title=&amp;width=813" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664101904604-cf2709b2-1ca9-4c8a-819b-f23fb6890e46.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=762&amp;id=LuFi5&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=952&amp;originWidth=1513&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=80726&amp;status=done&amp;style=none&amp;taskId=u7b2975b5-a955-4a7a-8cac-7441478b3a7&amp;title=&amp;width=1210.4" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664102036976-1301e153-66a1-4eed-9fc7-9faa4c5c9618.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=356&amp;id=u67fb2587&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=445&amp;originWidth=1918&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=109587&amp;status=done&amp;style=none&amp;taskId=u6f84c990-be9c-4748-9b85-b9c9d17105f&amp;title=&amp;width=1534.4" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664102043787-4bb1eede-1c77-4914-a2b0-5ecbf86b03bb.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=212&amp;id=u234df1bf&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=265&amp;originWidth=1178&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=17275&amp;status=done&amp;style=none&amp;taskId=u974d928f-ace9-4e11-87c3-4b9a4fea9db&amp;title=&amp;width=942.4" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664102276050-3cece677-157b-4f3a-ade4-65f350b3d554.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=342&amp;id=XC4mT&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=427&amp;originWidth=1890&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=32014&amp;status=done&amp;style=none&amp;taskId=uc4f6ba4a-7799-460e-8766-3236f2c6b7d&amp;title=&amp;width=1512" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664102289123-bdb64578-42b7-4577-b1e4-02bcfc9409ae.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=400&amp;id=u3b8806f0&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=500&amp;originWidth=811&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=30926&amp;status=done&amp;style=none&amp;taskId=u759d8f0e-be6d-42a6-9f48-7300c6f181b&amp;title=&amp;width=648.8" alt="image.png"><br><a name="keP2T"></a></p><h1 id="zipkin数据持久化"><a href="#zipkin数据持久化" class="headerlink" title="zipkin数据持久化"></a>zipkin数据持久化</h1><p><a name="tcwov"></a></p><h2 id="mysql中创建名称为zipkin的数据库，并执⾏如下sql语句（官⽅提供）"><a href="#mysql中创建名称为zipkin的数据库，并执⾏如下sql语句（官⽅提供）" class="headerlink" title="mysql中创建名称为zipkin的数据库，并执⾏如下sql语句（官⽅提供）"></a>mysql中创建名称为zipkin的数据库，并执⾏如下sql语句（官⽅提供）</h2><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- Copyright 2015-2019 The OpenZipkin Authors</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except</span><span class="token comment" spellcheck="true">-- in compliance with the License. You may obtain a copy of the License at</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- http://www.apache.org/licenses/LICENSE-2.0</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- Unless required by applicable law or agreed to in writing, software distributed under the License</span><span class="token comment" spellcheck="true">-- is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express</span><span class="token comment" spellcheck="true">-- or implied. See the License for the specific language governing permissions and limitations under</span><span class="token comment" spellcheck="true">-- the License.</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> zipkin_spans <span class="token punctuation">(</span><span class="token punctuation">`</span>trace_id_high<span class="token punctuation">`</span> <span class="token keyword">BIGINT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span> <span class="token keyword">COMMENT</span> <span class="token string">'If non zero, this means the trace uses 128 bit traceIds instead of 64 bit'</span><span class="token punctuation">,</span><span class="token punctuation">`</span>trace_id<span class="token punctuation">`</span> <span class="token keyword">BIGINT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">BIGINT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token punctuation">`</span>remote_service_name<span class="token punctuation">`</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">`</span>parent_id<span class="token punctuation">`</span> <span class="token keyword">BIGINT</span><span class="token punctuation">,</span><span class="token punctuation">`</span>debug<span class="token punctuation">`</span> <span class="token keyword">BIT</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">`</span>start_ts<span class="token punctuation">`</span> <span class="token keyword">BIGINT</span> <span class="token keyword">COMMENT</span> <span class="token string">'Span.timestamp(): epoch micros used for endTs query and to implement TTL'</span><span class="token punctuation">,</span><span class="token punctuation">`</span>duration<span class="token punctuation">`</span> <span class="token keyword">BIGINT</span> <span class="token keyword">COMMENT</span> <span class="token string">'Span.duration(): micros used for minDuration and maxDuration query'</span><span class="token punctuation">,</span><span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>trace_id_high<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>trace_id<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">INNODB</span> ROW_FORMAT<span class="token operator">=</span>COMPRESSED <span class="token keyword">CHARACTER SET</span><span class="token operator">=</span>utf8 <span class="token keyword">COLLATE</span> utf8_general_ci<span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> zipkin_spans <span class="token keyword">ADD</span> <span class="token keyword">INDEX</span><span class="token punctuation">(</span><span class="token punctuation">`</span>trace_id_high<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>trace_id<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">'for getTracesByIds'</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> zipkin_spans <span class="token keyword">ADD</span> <span class="token keyword">INDEX</span><span class="token punctuation">(</span><span class="token punctuation">`</span>name<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">'for getTraces and getSpanNames'</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> zipkin_spans <span class="token keyword">ADD</span> <span class="token keyword">INDEX</span><span class="token punctuation">(</span><span class="token punctuation">`</span>remote_service_name<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">'for getTraces and getRemoteServiceNames'</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> zipkin_spans <span class="token keyword">ADD</span> <span class="token keyword">INDEX</span><span class="token punctuation">(</span><span class="token punctuation">`</span>start_ts<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">'for getTraces ordering and range'</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> zipkin_annotations <span class="token punctuation">(</span><span class="token punctuation">`</span>trace_id_high<span class="token punctuation">`</span> <span class="token keyword">BIGINT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span> <span class="token keyword">COMMENT</span> <span class="token string">'If non zero, this means the trace uses 128 bit traceIds instead of 64 bit'</span><span class="token punctuation">,</span><span class="token punctuation">`</span>trace_id<span class="token punctuation">`</span> <span class="token keyword">BIGINT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'coincides with zipkin_spans.trace_id'</span><span class="token punctuation">,</span><span class="token punctuation">`</span>span_id<span class="token punctuation">`</span> <span class="token keyword">BIGINT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'coincides with zipkin_spans.id'</span><span class="token punctuation">,</span><span class="token punctuation">`</span>a_key<span class="token punctuation">`</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'BinaryAnnotation.key or Annotation.value if type == -1'</span><span class="token punctuation">,</span><span class="token punctuation">`</span>a_value<span class="token punctuation">`</span> <span class="token keyword">BLOB</span> <span class="token keyword">COMMENT</span> <span class="token string">'BinaryAnnotation.value(), which must be smaller than 64KB'</span><span class="token punctuation">,</span><span class="token punctuation">`</span>a_type<span class="token punctuation">`</span> <span class="token keyword">INT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'BinaryAnnotation.type() or -1 if Annotation'</span><span class="token punctuation">,</span><span class="token punctuation">`</span>a_timestamp<span class="token punctuation">`</span> <span class="token keyword">BIGINT</span> <span class="token keyword">COMMENT</span> <span class="token string">'Used to implement TTL;Annotation.timestamp or zipkin_spans.timestamp'</span><span class="token punctuation">,</span><span class="token punctuation">`</span>endpoint_ipv4<span class="token punctuation">`</span> <span class="token keyword">INT</span> <span class="token keyword">COMMENT</span> <span class="token string">'Null when Binary/Annotation.endpoint is null'</span><span class="token punctuation">,</span><span class="token punctuation">`</span>endpoint_ipv6<span class="token punctuation">`</span> <span class="token keyword">BINARY</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">'Null when Binary/Annotation.endpoint is null, or no IPv6 address'</span><span class="token punctuation">,</span><span class="token punctuation">`</span>endpoint_port<span class="token punctuation">`</span> <span class="token keyword">SMALLINT</span> <span class="token keyword">COMMENT</span> <span class="token string">'Null when Binary/Annotation.endpoint is null'</span><span class="token punctuation">,</span><span class="token punctuation">`</span>endpoint_service_name<span class="token punctuation">`</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">'Null when Binary/Annotation.endpoint is null'</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">INNODB</span> ROW_FORMAT<span class="token operator">=</span>COMPRESSED <span class="token keyword">CHARACTER SET</span><span class="token operator">=</span>utf8 <span class="token keyword">COLLATE</span> utf8_general_ci<span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> zipkin_annotations <span class="token keyword">ADD</span> <span class="token keyword">UNIQUE</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span><span class="token punctuation">`</span>trace_id_high<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>trace_id<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>span_id<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>a_key<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>a_timestamp<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">'Ignore insert on duplicate'</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> zipkin_annotations <span class="token keyword">ADD</span> <span class="token keyword">INDEX</span><span class="token punctuation">(</span><span class="token punctuation">`</span>trace_id_high<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>trace_id<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>span_id<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">'for joining with zipkin_spans'</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> zipkin_annotations <span class="token keyword">ADD</span> <span class="token keyword">INDEX</span><span class="token punctuation">(</span><span class="token punctuation">`</span>trace_id_high<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>trace_id<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">'for getTraces/ByIds'</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> zipkin_annotations <span class="token keyword">ADD</span> <span class="token keyword">INDEX</span><span class="token punctuation">(</span><span class="token punctuation">`</span>endpoint_service_name<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">'for getTraces and getServiceNames'</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> zipkin_annotations <span class="token keyword">ADD</span> <span class="token keyword">INDEX</span><span class="token punctuation">(</span><span class="token punctuation">`</span>a_type<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">'for getTraces and autocomplete values'</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> zipkin_annotations <span class="token keyword">ADD</span> <span class="token keyword">INDEX</span><span class="token punctuation">(</span><span class="token punctuation">`</span>a_key<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">'for getTraces and autocomplete values'</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> zipkin_annotations <span class="token keyword">ADD</span> <span class="token keyword">INDEX</span><span class="token punctuation">(</span><span class="token punctuation">`</span>trace_id<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>span_id<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>a_key<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">'for dependencies job'</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> zipkin_dependencies <span class="token punctuation">(</span><span class="token punctuation">`</span>day<span class="token punctuation">`</span> <span class="token keyword">DATE</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token punctuation">`</span>parent<span class="token punctuation">`</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token punctuation">`</span>child<span class="token punctuation">`</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token punctuation">`</span>call_count<span class="token punctuation">`</span> <span class="token keyword">BIGINT</span><span class="token punctuation">,</span><span class="token punctuation">`</span>error_count<span class="token punctuation">`</span> <span class="token keyword">BIGINT</span><span class="token punctuation">,</span><span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>day<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>parent<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>child<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">INNODB</span> ROW_FORMAT<span class="token operator">=</span>COMPRESSED <span class="token keyword">CHARACTER SET</span><span class="token operator">=</span>utf8<span class="token keyword">COLLATE</span> utf8_general_ci<span class="token punctuation">;</span></code></pre><p><a name="SwPna"></a></p><h2 id="pom⽂件引⼊相关依赖"><a href="#pom⽂件引⼊相关依赖" class="headerlink" title="pom⽂件引⼊相关依赖"></a>pom⽂件引⼊相关依赖</h2><pre class=" language-xml"><code class="language-xml">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>io.zipkin.java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>zipkin-autoconfigure-storage-mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.12.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>druid-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.1.10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-tx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-jdbc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><p><a name="zDaEv"></a></p><h2 id="修改配置⽂件，添加如下内容"><a href="#修改配置⽂件，添加如下内容" class="headerlink" title="修改配置⽂件，添加如下内容"></a>修改配置⽂件，添加如下内容</h2><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.jdbc.Driver    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>3306/zipkin<span class="token punctuation">?</span>serverTimezone=GMT<span class="token important">&amp;useUnicode</span>=true<span class="token important">&amp;characterEncoding</span>=utf<span class="token punctuation">-</span>8<span class="token important">&amp;useSSL</span>=false<span class="token important">&amp;allowMultiQueries</span>=true    <span class="token key atrule">username</span><span class="token punctuation">:</span> root    <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token number">123456</span>    <span class="token key atrule">druid</span><span class="token punctuation">:</span>      <span class="token key atrule">initialSize</span><span class="token punctuation">:</span> <span class="token number">10</span>      <span class="token key atrule">minIdle</span><span class="token punctuation">:</span> <span class="token number">10</span>      <span class="token key atrule">maxActive</span><span class="token punctuation">:</span> <span class="token number">30</span>      <span class="token key atrule">maxWait</span><span class="token punctuation">:</span> <span class="token number">50000</span>  <span class="token comment" spellcheck="true"># 指定zipkin持久化介质为mysql</span><span class="token key atrule">zipkin</span><span class="token punctuation">:</span>  <span class="token key atrule">storage</span><span class="token punctuation">:</span>    <span class="token key atrule">type</span><span class="token punctuation">:</span> mysql</code></pre><p><a name="pok1F"></a></p><h2 id="启动类中注⼊事务管理器"><a href="#启动类中注⼊事务管理器" class="headerlink" title="启动类中注⼊事务管理器"></a>启动类中注⼊事务管理器</h2><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@EnableZipkinServer</span> <span class="token comment" spellcheck="true">//开启zipkin服务器功能</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ZipkinServerApplication9411</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>ZipkinServerApplication9411<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//注入事务控制器</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> PlatformTransactionManager <span class="token function">transactionManager</span><span class="token punctuation">(</span>DataSource dataSource<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DataSourceTransactionManager</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><a name="iDniN"></a></p><h1 id="微服务统⼀认证⽅案-Spring-Cloud-OAuth2-JWT"><a href="#微服务统⼀认证⽅案-Spring-Cloud-OAuth2-JWT" class="headerlink" title="微服务统⼀认证⽅案 Spring Cloud OAuth2 + JWT"></a>微服务统⼀认证⽅案 Spring Cloud OAuth2 + JWT</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664103125119-f6b78693-2525-42ac-84ad-29b73ea0f779.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=93&amp;id=u674e1bf5&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=116&amp;originWidth=1003&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=37309&amp;status=done&amp;style=none&amp;taskId=uc40b5554-2266-4cb5-8e7d-1171b78e5d7&amp;title=&amp;width=802.4" alt="image.png"><br><a name="OlP28"></a></p><h2 id="微服务架构下统⼀认证场景"><a href="#微服务架构下统⼀认证场景" class="headerlink" title="微服务架构下统⼀认证场景"></a>微服务架构下统⼀认证场景</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664103228601-e63fdabf-d95a-4155-8533-74f8bf316cec.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=130&amp;id=ubc993450&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=163&amp;originWidth=1002&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=42863&amp;status=done&amp;style=none&amp;taskId=u88e12ccb-e328-4c0c-99f8-c1d0e6dbbd8&amp;title=&amp;width=801.6" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664103233162-3ce75b08-5529-4a42-8ca0-88d2a96d164e.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=570&amp;id=uee1d38f7&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=713&amp;originWidth=455&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=60417&amp;status=done&amp;style=none&amp;taskId=uf72e4bcd-d745-44b7-aca8-7c83a9d358f&amp;title=&amp;width=364" alt="image.png"><br><a name="L2VGf"></a></p><h2 id="微服务架构下统⼀认证思路"><a href="#微服务架构下统⼀认证思路" class="headerlink" title="微服务架构下统⼀认证思路"></a>微服务架构下统⼀认证思路</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664103349569-edff45c8-451b-4ae6-8186-cfbe0da3981b.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=461&amp;id=u01ad0193&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=576&amp;originWidth=1044&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=167725&amp;status=done&amp;style=none&amp;taskId=u63d66a4a-920f-49bb-b8fe-f4624070fef&amp;title=&amp;width=835.2" alt="image.png"><br><a name="hh9EK"></a></p><h2 id="OAuth2开放授权协议-标准"><a href="#OAuth2开放授权协议-标准" class="headerlink" title="OAuth2开放授权协议/标准"></a>OAuth2开放授权协议/标准</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664103508960-0e360e75-34d7-4c60-bef2-11810b749f99.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=570&amp;id=u3d3fe9b3&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=713&amp;originWidth=1054&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=137877&amp;status=done&amp;style=none&amp;taskId=ud2d25a6a-dc15-4a5e-a7c8-328d7a19abc&amp;title=&amp;width=843.2" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664103545469-571b97a4-41f6-4401-b3ca-89c3b98c98a8.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=406&amp;id=u4dc40fe7&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=507&amp;originWidth=1051&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=117165&amp;status=done&amp;style=none&amp;taskId=u4bb3d598-2b15-48ad-a06f-fc58446e4b8&amp;title=&amp;width=840.8" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664103568612-ca498efc-9d29-46dd-a04c-0aa41745ad77.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=914&amp;id=u6d0f6db9&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=1142&amp;originWidth=1924&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=121284&amp;status=done&amp;style=none&amp;taskId=u75623177-5e31-4a13-82b8-9cd0d92dfd8&amp;title=&amp;width=1539.2" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664103596660-2dc21663-cddb-4dd6-91bb-ab528b7e538c.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=378&amp;id=ua313cf8b&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=473&amp;originWidth=791&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=137542&amp;status=done&amp;style=none&amp;taskId=u78744d5a-21f1-41e7-9c36-ffaca91d762&amp;title=&amp;width=632.8" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664103610994-111dc5df-256f-4fe5-89a6-03c84f1630c6.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=706&amp;id=uab3c73d1&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=882&amp;originWidth=1026&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=215590&amp;status=done&amp;style=none&amp;taskId=uae63ad1e-6103-41d6-8d58-ce02d31d6ad&amp;title=&amp;width=820.8" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664103633948-0c60b99f-cb13-48f3-b693-5346bb22c734.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=564&amp;id=ue1bd9250&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=705&amp;originWidth=1054&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=201487&amp;status=done&amp;style=none&amp;taskId=ucf9ced6b-4b1a-43c8-9242-c2422934347&amp;title=&amp;width=843.2" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664103638241-f1394ef2-6a63-4f1b-abbf-76cedf5ca440.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=487&amp;id=u54ea5145&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=609&amp;originWidth=1059&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=58035&amp;status=done&amp;style=none&amp;taskId=ucdbca211-3105-4829-b6bc-756cdac66ad&amp;title=&amp;width=847.2" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664103759313-4ff7c379-ed21-449f-9f87-1ee337c25b17.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=126&amp;id=u1c53415b&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=158&amp;originWidth=1036&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=49194&amp;status=done&amp;style=none&amp;taskId=uf1ac3644-96ea-447d-a55b-35c45eca956&amp;title=&amp;width=828.8" alt="image.png"><br><a name="QEsWb"></a></p><h1 id="搭建认证服务器（Authorization-Server）"><a href="#搭建认证服务器（Authorization-Server）" class="headerlink" title="搭建认证服务器（Authorization Server）"></a>搭建认证服务器（Authorization Server）</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664104026962-c9b2265d-426c-4259-b7ef-fb9a27288fca.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=70&amp;id=u8f0222ce&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=87&amp;originWidth=806&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=12887&amp;status=done&amp;style=none&amp;taskId=u69e73cba-072f-48a8-aca1-a1ab8104e71&amp;title=&amp;width=644.8" alt="image.png"><br><a name="NqDJc"></a></p><h2 id="新建项⽬lagou-cloud-oauth-server-9999-引入依赖"><a href="#新建项⽬lagou-cloud-oauth-server-9999-引入依赖" class="headerlink" title="新建项⽬lagou-cloud-oauth-server-9999,引入依赖"></a>新建项⽬lagou-cloud-oauth-server-9999,引入依赖</h2><pre class=" language-xml"><code class="language-xml">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--导⼊Eureka Client依赖--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-netflix-eureka-client            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--导⼊spring cloud oauth2依赖--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-oauth2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.security.oauth.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-security-oauth2-                        autoconfigure                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.security.oauth.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-security-oauth2-autoconfigure            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.1.11.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.security.oauth<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-security-oauth2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.3.4.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span></code></pre><p><a name="b17Y6"></a></p><h2 id="application-yml（构建认证服务器，配置⽂件⽆特别之处）"><a href="#application-yml（构建认证服务器，配置⽂件⽆特别之处）" class="headerlink" title="application.yml（构建认证服务器，配置⽂件⽆特别之处）"></a>application.yml（构建认证服务器，配置⽂件⽆特别之处）</h2><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9999</span><span class="token key atrule">Spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> lagou<span class="token punctuation">-</span>cloud<span class="token punctuation">-</span>oauth<span class="token punctuation">-</span>server<span class="token key atrule">eureka</span><span class="token punctuation">:</span>  <span class="token key atrule">client</span><span class="token punctuation">:</span>    <span class="token key atrule">serviceUrl</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># eureka server的路径</span>      <span class="token key atrule">defaultZone</span><span class="token punctuation">:</span>        http<span class="token punctuation">:</span>//lagoucloudeurekaservera<span class="token punctuation">:</span>8761/eureka/<span class="token punctuation">,</span>http<span class="token punctuation">:</span>//lagoucloudeurekaserverb<span class="token punctuation">:</span>8762/eureka/ <span class="token comment" spellcheck="true">#把 eureka 集群中的所有 url 都填写了进来，也可以只写⼀台，因为各个 eureka server 可以同步注册表</span>  <span class="token key atrule">instance</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">#使⽤ip注册，否则会使⽤主机名注册了（此处考虑到对⽼版本的兼容，新版本经过实验都是ip）</span>    <span class="token key atrule">prefer-ip-address</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token comment" spellcheck="true">#⾃定义实例显示格式，加上版本号，便于多版本管理，注意是ip-address，早期版本是ipAddress</span>    <span class="token key atrule">instance-id</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>spring.cloud.client.ip<span class="token punctuation">-</span>address<span class="token punctuation">}</span><span class="token punctuation">:</span>$<span class="token punctuation">{</span>spring.application.name<span class="token punctuation">}</span><span class="token punctuation">:</span>$<span class="token punctuation">{</span>server.port<span class="token punctuation">}</span><span class="token punctuation">:</span>@project.version@</code></pre><p><a name="sMsay"></a></p><h2 id="启动类-6"><a href="#启动类-6" class="headerlink" title="启动类"></a>启动类</h2><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@EnableDiscoveryClient</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OauthServerApplication9999</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>OauthServerApplication9999<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><a name="IcDQc"></a></p><h2 id="认证服务器安全配置类"><a href="#认证服务器安全配置类" class="headerlink" title="认证服务器安全配置类"></a>认证服务器安全配置类</h2><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//处理用户名和密码的校验等</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecurityConfig</span> <span class="token keyword">extends</span> <span class="token class-name">WebSecurityConfigurerAdapter</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 注册一个认证管理类对象到容器     */</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> AuthenticationManager <span class="token function">authenticationManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">authenticationManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 密码编码对象（密码不进⾏加密处理）     * @return     */</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> PasswordEncoder <span class="token function">passwordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> NoOpPasswordEncoder<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 处理⽤户名和密码验证事宜     * 1）客户端传递username和password参数到认证服务器     * 2）⼀般来说，username和password会存储在数据库中的⽤户表中     * 3）根据⽤户表中数据，验证当前传递过来的⽤户信息的合法性     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span>AuthenticationManagerBuilder auth<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 在这个⽅法中就可以去关联数据库了，当前我们先把⽤户信息配置在内存中</span>        <span class="token comment" spellcheck="true">// 实例化⼀个⽤户对象(相当于数据表中的⼀条⽤户记录)</span>        UserDetails user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">"admin"</span><span class="token punctuation">,</span> <span class="token string">"123456"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        auth<span class="token punctuation">.</span><span class="token function">inMemoryAuthentication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">withUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">passwordEncoder</span><span class="token punctuation">(</span><span class="token function">passwordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><a name="cCJwb"></a></p><h2 id="认证服务器配置类"><a href="#认证服务器配置类" class="headerlink" title="认证服务器配置类"></a>认证服务器配置类</h2><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@EnableAuthorizationServer</span> <span class="token comment" spellcheck="true">//开启认证服务器功能</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OauthServerConfig</span> <span class="token keyword">extends</span> <span class="token class-name">AuthorizationServerConfigurerAdapter</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> AuthenticationManager authenticationManager<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 认证服务器最终是以api接⼝的⽅式对外提供服务（校验合法性并⽣成令牌、校验令牌等）     * 那么，以api接⼝⽅式对外的话，就涉及到接⼝的访问权限，我们需要在这⾥进⾏必要的配置     *     * @param security     * @throws Exception     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span>AuthorizationServerSecurityConfigurer security<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span>security<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 相当于打开endpoints 访问接⼝的开关，这样的话后期我们能够访问该接⼝</span>        security <span class="token comment" spellcheck="true">// 允许客户端表单认证</span>                <span class="token punctuation">.</span><span class="token function">allowFormAuthenticationForClients</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 开启端⼝/oauth/token_key的访问权限（允许）</span>                <span class="token punctuation">.</span><span class="token function">tokenKeyAccess</span><span class="token punctuation">(</span><span class="token string">"permitAll()"</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 开启端⼝/oauth/check_token的访问权限（允许）</span>                <span class="token punctuation">.</span><span class="token function">checkTokenAccess</span><span class="token punctuation">(</span><span class="token string">"permitAll()"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 客户端详情配置，     * ⽐如client_id，secret     * 当前这个服务就如同QQ平台，拉勾⽹作为客户端需要qq平台进⾏登录授权认证等，     * 提前需要到QQ平台注册，QQ平台会给拉勾⽹     * 颁发client_id等必要参数，表明客户端是谁     *     * @param clients     * @throws Exception     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span>ClientDetailsServiceConfigurer clients<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span>clients<span class="token punctuation">)</span><span class="token punctuation">;</span>        clients<span class="token punctuation">.</span><span class="token function">inMemory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 客户端信息存储在什么地⽅，可以在内存中，可以在数据库⾥</span>                <span class="token punctuation">.</span><span class="token function">withClient</span><span class="token punctuation">(</span><span class="token string">"client_id"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 添加⼀个client配置,指定其client_id</span>                <span class="token punctuation">.</span><span class="token function">secret</span><span class="token punctuation">(</span><span class="token string">"abcxyz"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 指定客户端的密码/安全码</span>                <span class="token comment" spellcheck="true">// 指定客户端所能访问资源id清单，此处的资源id是需要在具体的资源服务器上也配置⼀样</span>                <span class="token comment" spellcheck="true">// 认证类型/令牌颁发模式，可以配置多个在这⾥，但是不⼀定都⽤，具体使⽤哪种⽅式颁发token，</span>                <span class="token comment" spellcheck="true">// 需要客户端调⽤的时候传递参数指定</span>                <span class="token punctuation">.</span><span class="token function">resourceIds</span><span class="token punctuation">(</span><span class="token string">"autodeliver"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">authorizedGrantTypes</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">,</span><span class="token string">"refresh_token"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//认证类型</span>                <span class="token punctuation">.</span><span class="token function">scopes</span><span class="token punctuation">(</span><span class="token string">"all"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 客户端的权限范围，此处配置为all全部即可</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 认证服务器是玩转token的，那么这⾥配置token令牌管理相关     * （token此时就是⼀个字符串，当下的token需要在服务器端存储，那么存储在哪⾥呢？都是在这⾥配置）     *     * @param endpoints     * @throws Exception     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span>AuthorizationServerEndpointsConfigurer endpoints<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span>endpoints<span class="token punctuation">)</span><span class="token punctuation">;</span>        endpoints<span class="token punctuation">.</span><span class="token function">tokenStore</span><span class="token punctuation">(</span><span class="token function">tokenStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 指定token存储方法</span>                <span class="token punctuation">.</span><span class="token function">tokenServices</span><span class="token punctuation">(</span><span class="token function">authorizationServerTokenServices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// token服务的⼀个描述，可以认为是token⽣成细节的描述，⽐如有效时间多少等</span>                <span class="token punctuation">.</span><span class="token function">authenticationManager</span><span class="token punctuation">(</span>authenticationManager<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 指定认证管理器，随后注⼊⼀个到当前类使⽤即可</span>                <span class="token punctuation">.</span><span class="token function">allowedTokenEndpointRequestMethods</span><span class="token punctuation">(</span>HttpMethod<span class="token punctuation">.</span>GET<span class="token punctuation">,</span>HttpMethod<span class="token punctuation">.</span>POST<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*     生成token store对象(令牌存储对象),token以什么方式存储     */</span>    <span class="token keyword">public</span> TokenStore <span class="token function">tokenStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">InMemoryTokenStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//内存</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*     该方法用户获取一个token服务对象(描述了token有效期等信息)     */</span>    <span class="token keyword">public</span> AuthorizationServerTokenServices <span class="token function">authorizationServerTokenServices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//使用默认实现</span>        DefaultTokenServices tokenServices<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">DefaultTokenServices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tokenServices<span class="token punctuation">.</span><span class="token function">setSupportRefreshToken</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//是否支持令牌刷新</span>        tokenServices<span class="token punctuation">.</span><span class="token function">setTokenStore</span><span class="token punctuation">(</span><span class="token function">tokenStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置令牌有效时间（⼀般设置为2个⼩时）</span>        tokenServices<span class="token punctuation">.</span><span class="token function">setAccessTokenValiditySeconds</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// access_token就是我们请求资源需要携带的令牌</span>        <span class="token comment" spellcheck="true">// 设置刷新令牌的有效时间</span>        tokenServices<span class="token punctuation">.</span><span class="token function">setRefreshTokenValiditySeconds</span><span class="token punctuation">(</span><span class="token number">259200</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//3天</span>        <span class="token keyword">return</span> tokenServices<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664104829525-b02f535a-f528-4c80-91d4-1d2c4a4b0b6f.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=274&amp;id=u3de0bc2f&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=343&amp;originWidth=985&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=67370&amp;status=done&amp;style=none&amp;taskId=u80953c3d-fd35-4f6f-bcf4-db59fc41a56&amp;title=&amp;width=788" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664104842534-0995ce38-d84a-468e-b105-f522b2e10ce3.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=775&amp;id=u48e502db&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=969&amp;originWidth=980&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=235416&amp;status=done&amp;style=none&amp;taskId=u6b4b07d3-69c6-4a93-8e0c-c5aa06bc347&amp;title=&amp;width=784" alt="image.png"><br><a name="MgLaj"></a></p><h2 id="测试-4"><a href="#测试-4" class="headerlink" title="测试"></a>测试</h2><p>获取token：<a href="http://localhost:9999/oauth/token?client_secret=abcxyz&amp;grant_type=password&amp;username=admin&amp;password=123456&amp;client_id=client_id">http://localhost:9999/oauth/token?client_secret=abcxyz&amp;grant_type=password&amp;username=admin&amp;password=123456&amp;client_id=client_id</a><br><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664107037756-b87d78f1-51b6-455e-a7b1-72604c800487.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=277&amp;id=ud89e04dc&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=346&amp;originWidth=775&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=47420&amp;status=done&amp;style=none&amp;taskId=u544fc623-d2b7-4ddf-a894-c27d905e2d7&amp;title=&amp;width=620" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664107482763-36a7f595-34e0-45a1-9987-82fa2f96c24a.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=450&amp;id=ue65646aa&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=563&amp;originWidth=1355&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=true&amp;size=43428&amp;status=done&amp;style=none&amp;taskId=u28dc8333-8e8f-46f6-b30a-6d4b903bb49&amp;title=http%3A%2F%2Flocalhost%3A9999%2Foauth%2Ftoken%3Fclient_secret%3Dabcxyz%26grant_type%3Dpassword%26username%3Dadmin%26password%3D123456%26client_id%3Dclient_id&amp;width=1084" alt="image.png" title="http://localhost:9999/oauth/token?client_secret=abcxyz&amp;grant_type=password&amp;username=admin&amp;password=123456&amp;client_id=client_id"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664107717464-f1987b74-e18a-483f-8c92-0637ed1fc1b8.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=482&amp;id=u53273ba9&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=602&amp;originWidth=957&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=true&amp;size=31060&amp;status=done&amp;style=none&amp;taskId=ub9df3548-495f-4c36-b484-76445ac4b03&amp;title=http%3A%2F%2Flocalhost%3A9999%2Foauth%2Fcheck_token%3Ftoken%3Ddd756635-f049-4358-881d-31d1a5eb64f9&amp;width=765.6" alt="image.png" title="http://localhost:9999/oauth/check_token?token=dd756635-f049-4358-881d-31d1a5eb64f9"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664107817883-ba31612e-c430-4880-912f-48c196416fa7.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=344&amp;id=udebc2d31&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=430&amp;originWidth=993&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=24719&amp;status=done&amp;style=none&amp;taskId=ub0f20d5f-ddaf-4746-9f1d-314251fb0a8&amp;title=&amp;width=794.4" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664107789294-8756c677-5d05-4480-abef-439f0aad4971.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=641&amp;id=u4fef99fa&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=801&amp;originWidth=1341&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=true&amp;size=54654&amp;status=done&amp;style=none&amp;taskId=u36044932-8fd2-48e3-b6fb-b03f043b9b6&amp;title=http%3A%2F%2Flocalhost%3A9999%2Foauth%2Ftoken%3Fclient_secret%3Dabcxyz%26grant_type%3Dpassword%26username%3Dadmin%26password%3D123456%26client_id%3Dclient_id%26refresh_token%3D4c82f27e-db3e-4047-baf0-b593f0185493&amp;width=1072.8" alt="image.png" title="http://localhost:9999/oauth/token?client_secret=abcxyz&amp;grant_type=password&amp;username=admin&amp;password=123456&amp;client_id=client_id&amp;refresh_token=4c82f27e-db3e-4047-baf0-b593f0185493"><br><a name="bl6GQ"></a></p><h2 id="资源服务器（希望访问被认证的微服务）Resource-Server配置引入依赖"><a href="#资源服务器（希望访问被认证的微服务）Resource-Server配置引入依赖" class="headerlink" title="资源服务器（希望访问被认证的微服务）Resource Server配置引入依赖"></a>资源服务器（希望访问被认证的微服务）Resource Server配置引入依赖</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664108703908-3351d98d-0020-4e2b-9981-62840c6a0e40.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=405&amp;id=ua1b97420&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=599&amp;originWidth=404&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=354067&amp;status=done&amp;style=none&amp;taskId=ueda0c16e-94dd-4795-bbc9-1754b8d4ccd&amp;title=&amp;width=273.20001220703125" alt="image.png"></p><pre class=" language-xml"><code class="language-xml">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--导⼊Eureka Client依赖--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-netflix-eureka-client            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--导⼊spring cloud oauth2依赖--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-oauth2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.security.oauth.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-security-oauth2-                        autoconfigure                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.security.oauth.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-security-oauth2-autoconfigure            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.1.11.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.security.oauth<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-security-oauth2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.3.4.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span></code></pre><p><a name="IbHR2"></a></p><h2 id="yaml-4"><a href="#yaml-4" class="headerlink" title="yaml"></a>yaml</h2><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">oauth2</span><span class="token punctuation">:</span>  <span class="token key atrule">server</span><span class="token punctuation">:</span>    <span class="token key atrule">check-token-url</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>9999/oauth/check_token</code></pre><p><a name="E2HIc"></a></p><h2 id="资源服务配置类"><a href="#资源服务配置类" class="headerlink" title="资源服务配置类"></a>资源服务配置类</h2><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@EnableWebSecurity</span> <span class="token comment" spellcheck="true">// 开启web访问安全</span><span class="token annotation punctuation">@EnableResourceServer</span> <span class="token comment" spellcheck="true">//开启资源服务器功能</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ResourceServerConfig</span> <span class="token keyword">extends</span> <span class="token class-name">ResourceServerConfigurerAdapter</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String sign_key <span class="token operator">=</span> <span class="token string">"lagou123"</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// jwt签名密钥</span>    <span class="token comment" spellcheck="true">/**     * 该⽅法⽤于定义资源服务器向远程认证服务器发起请求，进⾏token校验等事宜     *     * @param resources     * @throws Exception     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span>ResourceServerSecurityConfigurer resources<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 设置当前资源服务的资源id</span>        resources<span class="token punctuation">.</span><span class="token function">resourceId</span><span class="token punctuation">(</span><span class="token string">"autodeliver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 定义token服务对象（token校验就应该靠token服务对象）</span>        RemoteTokenServices remoteTokenServices <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RemoteTokenServices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 校验端点/接⼝设置</span>        remoteTokenServices<span class="token punctuation">.</span><span class="token function">setCheckTokenEndpointUrl</span><span class="token punctuation">(</span><span class="token string">"http://localhost:9999/oauth/check_token"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 携带客户端id和客户端安全码</span>        remoteTokenServices<span class="token punctuation">.</span><span class="token function">setClientId</span><span class="token punctuation">(</span><span class="token string">"client_id"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        remoteTokenServices<span class="token punctuation">.</span><span class="token function">setClientSecret</span><span class="token punctuation">(</span><span class="token string">"abcxyz"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 别忘了这⼀步,把配置加进去</span>        resources<span class="token punctuation">.</span><span class="token function">tokenServices</span><span class="token punctuation">(</span>remoteTokenServices<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 场景：⼀个服务中可能有很多资源（API接⼝）     * 某⼀些API接⼝，需要先认证，才能访问     * 某⼀些API接⼝，压根就不需要认证，本来就是对外开放的接⼝     * 我们就需要对不同特点的接⼝区分对待（在当前configure⽅法中完成），设置是否需要经过认证     *     * @param http     * @throws Exception     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span>HttpSecurity http<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        http    <span class="token comment" spellcheck="true">// 设置session的创建策略（根据需要创建即可）</span>                <span class="token punctuation">.</span><span class="token function">sessionManagement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sessionCreationPolicy</span><span class="token punctuation">(</span>SessionCreationPolicy<span class="token punctuation">.</span>IF_REQUIRED<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// autodeliver为前缀的请求需要认证</span>                <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/autodeliver/**"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// demo为前缀的请求需要认证</span>                <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/demo/**"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">anyRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 其他请求不认证</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><a name="ItoJI"></a></p><h2 id="测试用的Controller"><a href="#测试用的Controller" class="headerlink" title="测试用的Controller"></a>测试用的Controller</h2><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/demo"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/test"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">findResumeOpenState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"demo/test"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/other"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OtherController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/test"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">findResumeOpenState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"other/test"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><a name="BUgi0"></a></p><h2 id="测试-5"><a href="#测试-5" class="headerlink" title="测试"></a>测试</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664108922901-169f1d2f-ae19-4a71-8064-0be708002e19.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=356&amp;id=u8584e725&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=445&amp;originWidth=849&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=23784&amp;status=done&amp;style=none&amp;taskId=u60df8405-ed8d-4d08-b592-d9581aecf29&amp;title=&amp;width=679.2" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664108965734-75a72b37-9fda-4b3e-a1f9-ba10f95e5f78.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=317&amp;id=ud3858d02&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=396&amp;originWidth=662&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=17018&amp;status=done&amp;style=none&amp;taskId=ufa2b26f0-452b-4342-81c7-9c62125a889&amp;title=&amp;width=529.6" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664108979839-cd583c56-e4b5-422e-83f6-8c72b435c306.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=363&amp;id=u944da2d4&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=454&amp;originWidth=935&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=22756&amp;status=done&amp;style=none&amp;taskId=ubb724293-d0a6-4741-aa5e-668fbfb9578&amp;title=&amp;width=748" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664109229693-8b6ce06d-bfdc-405f-85ff-9557ea0b72e6.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=396&amp;id=u82e5e154&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=495&amp;originWidth=1053&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=true&amp;size=27699&amp;status=done&amp;style=none&amp;taskId=uf26943a6-e30f-4082-82ff-35aac88d1a3&amp;title=%E4%BD%BF%E7%94%A8token&amp;width=842.4" alt="image.png" title="使用token"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664109220553-81871518-26ea-4574-ab15-aadf9114093f.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=398&amp;id=u64ce90f7&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=497&amp;originWidth=997&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=true&amp;size=27222&amp;status=done&amp;style=none&amp;taskId=u039c6c1c-d4b9-4409-b803-2b429157bfc&amp;title=%E4%BD%BF%E7%94%A8token&amp;width=797.6" alt="image.png" title="使用token"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664108609686-eaceefc5-7bd3-4e45-acfa-22f8f6829d6e.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=352&amp;id=RZNLh&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=440&amp;originWidth=993&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=131607&amp;status=done&amp;style=none&amp;taskId=u0bdf35ed-57f4-417b-b2e5-1807374c2e5&amp;title=&amp;width=794.4" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664109395851-157431d7-439a-4976-9621-6fa3a043eb9e.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=524&amp;id=u483d13a6&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=655&amp;originWidth=960&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=231223&amp;status=done&amp;style=none&amp;taskId=ue9500dca-663a-43cb-b891-f8f0afcef88&amp;title=&amp;width=768" alt="image.png"><br><a name="hOObO"></a></p><h1 id="JWT改造统⼀认证授权中⼼的令牌存储机制"><a href="#JWT改造统⼀认证授权中⼼的令牌存储机制" class="headerlink" title="JWT改造统⼀认证授权中⼼的令牌存储机制"></a>JWT改造统⼀认证授权中⼼的令牌存储机制</h1><p><a name="wUWKB"></a></p><h2 id="JWT令牌介绍"><a href="#JWT令牌介绍" class="headerlink" title="JWT令牌介绍"></a>JWT令牌介绍</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664109460767-ea819c79-7b4c-4239-92be-278311a96f58.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=768&amp;id=u425e1782&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=960&amp;originWidth=1040&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=226168&amp;status=done&amp;style=none&amp;taskId=u80bf5c4a-fa42-4e78-bb48-861d02e2783&amp;title=&amp;width=832" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664109482171-72a08386-878b-4512-962f-7aaedf52280e.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=639&amp;id=ued711062&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=799&amp;originWidth=1075&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=131982&amp;status=done&amp;style=none&amp;taskId=u89f85b01-2b38-4f1c-9c43-a733ae41ea5&amp;title=&amp;width=860" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664109491138-662c8ec6-a849-4977-95a7-67241bf01770.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=477&amp;id=u1b9cb683&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=596&amp;originWidth=1034&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=99778&amp;status=done&amp;style=none&amp;taskId=uba656d66-f6fb-45b3-9ae8-5c00fb9bc41&amp;title=&amp;width=827.2" alt="image.png"><br><a name="ViANl"></a></p><h2 id="认证服务器端JWT改造-改造主配置类"><a href="#认证服务器端JWT改造-改造主配置类" class="headerlink" title="认证服务器端JWT改造(改造主配置类)"></a>认证服务器端JWT改造(改造主配置类)</h2><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@EnableAuthorizationServer</span> <span class="token comment" spellcheck="true">//开启认证服务器功能</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OauthServerConfig</span> <span class="token keyword">extends</span> <span class="token class-name">AuthorizationServerConfigurerAdapter</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> AuthenticationManager authenticationManager<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 认证服务器最终是以api接⼝的⽅式对外提供服务（校验合法性并⽣成令牌、校验令牌等）     * 那么，以api接⼝⽅式对外的话，就涉及到接⼝的访问权限，我们需要在这⾥进⾏必要的配置     *     * @param security     * @throws Exception     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span>AuthorizationServerSecurityConfigurer security<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span>security<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 相当于打开endpoints 访问接⼝的开关，这样的话后期我们能够访问该接⼝</span>        security <span class="token comment" spellcheck="true">// 允许客户端表单认证</span>                <span class="token punctuation">.</span><span class="token function">allowFormAuthenticationForClients</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 开启端⼝/oauth/token_key的访问权限（允许）</span>                <span class="token punctuation">.</span><span class="token function">tokenKeyAccess</span><span class="token punctuation">(</span><span class="token string">"permitAll()"</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 开启端⼝/oauth/check_token的访问权限（允许）</span>                <span class="token punctuation">.</span><span class="token function">checkTokenAccess</span><span class="token punctuation">(</span><span class="token string">"permitAll()"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 客户端详情配置，     * ⽐如client_id，secret     * 当前这个服务就如同QQ平台，拉勾⽹作为客户端需要qq平台进⾏登录授权认证等，     * 提前需要到QQ平台注册，QQ平台会给拉勾⽹     * 颁发client_id等必要参数，表明客户端是谁     *     * @param clients     * @throws Exception     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span>ClientDetailsServiceConfigurer clients<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span>clients<span class="token punctuation">)</span><span class="token punctuation">;</span>        clients<span class="token punctuation">.</span><span class="token function">inMemory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 客户端信息存储在什么地⽅，可以在内存中，可以在数据库⾥</span>                <span class="token punctuation">.</span><span class="token function">withClient</span><span class="token punctuation">(</span><span class="token string">"client_id"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 添加⼀个client配置,指定其client_id</span>                <span class="token punctuation">.</span><span class="token function">secret</span><span class="token punctuation">(</span><span class="token string">"abcxyz"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 指定客户端的密码/安全码</span>                <span class="token comment" spellcheck="true">// 指定客户端所能访问资源id清单，此处的资源id是需要在具体的资源服务器上也配置⼀样</span>                <span class="token comment" spellcheck="true">// 认证类型/令牌颁发模式，可以配置多个在这⾥，但是不⼀定都⽤，具体使⽤哪种⽅式颁发token，</span>                <span class="token comment" spellcheck="true">// 需要客户端调⽤的时候传递参数指定</span>                <span class="token punctuation">.</span><span class="token function">resourceIds</span><span class="token punctuation">(</span><span class="token string">"autodeliver"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">authorizedGrantTypes</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">,</span> <span class="token string">"refresh_token"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//认证类型</span>                <span class="token punctuation">.</span><span class="token function">scopes</span><span class="token punctuation">(</span><span class="token string">"all"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 客户端的权限范围，此处配置为all全部即可</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 认证服务器是玩转token的，那么这⾥配置token令牌管理相关     * （token此时就是⼀个字符串，当下的token需要在服务器端存储，那么存储在哪⾥呢？都是在这⾥配置）     *     * @param endpoints     * @throws Exception     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span>AuthorizationServerEndpointsConfigurer endpoints<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span>endpoints<span class="token punctuation">)</span><span class="token punctuation">;</span>        endpoints<span class="token punctuation">.</span><span class="token function">tokenStore</span><span class="token punctuation">(</span><span class="token function">tokenStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 指定token存储方法</span>                <span class="token punctuation">.</span><span class="token function">tokenServices</span><span class="token punctuation">(</span><span class="token function">authorizationServerTokenServices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// token服务的⼀个描述，可以认为是token⽣成细节的描述，⽐如有效时间多少等</span>                <span class="token punctuation">.</span><span class="token function">authenticationManager</span><span class="token punctuation">(</span>authenticationManager<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 指定认证管理器，随后注⼊⼀个到当前类使⽤即可</span>                <span class="token punctuation">.</span><span class="token function">allowedTokenEndpointRequestMethods</span><span class="token punctuation">(</span>HttpMethod<span class="token punctuation">.</span>GET<span class="token punctuation">,</span> HttpMethod<span class="token punctuation">.</span>POST<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> String sign_key<span class="token operator">=</span><span class="token string">"malguy123"</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//密钥</span>    <span class="token comment" spellcheck="true">/**     * 返回jwt令牌转换器（帮助我们⽣成jwt令牌的）     * 在这⾥，我们可以把签名密钥传递进去给转换器对象     * @return     */</span>    <span class="token keyword">public</span> JwtAccessTokenConverter <span class="token function">jwtAccessTokenConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        JwtAccessTokenConverter jwtAccessTokenConverter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JwtAccessTokenConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jwtAccessTokenConverter<span class="token punctuation">.</span><span class="token function">setSigningKey</span><span class="token punctuation">(</span>sign_key<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//签名密钥</span>        jwtAccessTokenConverter<span class="token punctuation">.</span><span class="token function">setVerifier</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MacSigner</span><span class="token punctuation">(</span>sign_key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//校验用的密钥,和签名密钥一致</span>        <span class="token keyword">return</span> jwtAccessTokenConverter<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*     生成token store对象(令牌存储对象),token以什么方式存储     */</span>    <span class="token keyword">public</span> TokenStore <span class="token function">tokenStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//        return new InMemoryTokenStore();//内存</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JwtTokenStore</span><span class="token punctuation">(</span><span class="token function">jwtAccessTokenConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//使用jwt令牌</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*     该方法用户获取一个token服务对象(描述了token有效期等信息)     */</span>    <span class="token keyword">public</span> AuthorizationServerTokenServices <span class="token function">authorizationServerTokenServices</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//使用默认实现</span>        DefaultTokenServices tokenServices <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultTokenServices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tokenServices<span class="token punctuation">.</span><span class="token function">setSupportRefreshToken</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//是否支持令牌刷新</span>        tokenServices<span class="token punctuation">.</span><span class="token function">setTokenStore</span><span class="token punctuation">(</span><span class="token function">tokenStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//针对jwt令牌的添加</span>        tokenServices<span class="token punctuation">.</span><span class="token function">setTokenEnhancer</span><span class="token punctuation">(</span><span class="token function">jwtAccessTokenConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置令牌有效时间（⼀般设置为2个⼩时）</span>        tokenServices<span class="token punctuation">.</span><span class="token function">setAccessTokenValiditySeconds</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// access_token就是我们请求资源需要携带的令牌</span>        <span class="token comment" spellcheck="true">// 设置刷新令牌的有效时间</span>        tokenServices<span class="token punctuation">.</span><span class="token function">setRefreshTokenValiditySeconds</span><span class="token punctuation">(</span><span class="token number">259200</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//3天</span>        <span class="token keyword">return</span> tokenServices<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664110019285-74f6229f-99df-4f1d-8587-f952a0171e04.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=439&amp;id=uccf61983&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=549&amp;originWidth=1252&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=116947&amp;status=done&amp;style=none&amp;taskId=ua541d992-1803-43d3-9466-cbeb57412cc&amp;title=&amp;width=1001.6" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664110230231-7784e26c-fbd6-4835-8320-518876238fad.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=702&amp;id=ufc30d14a&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=877&amp;originWidth=1487&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=92186&amp;status=done&amp;style=none&amp;taskId=ucdbef5cf-bd0d-4fb8-b39b-563275b49d9&amp;title=&amp;width=1189.6" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664110303997-ed10e0e9-cfa9-4dc8-a91b-41d1bdf30f58.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=834&amp;id=u3199f584&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=1043&amp;originWidth=1647&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=137216&amp;status=done&amp;style=none&amp;taskId=uc6e8a3b5-7124-4641-afb0-ba90bf13357&amp;title=&amp;width=1317.6" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664110314760-cc125dad-560b-4f04-815a-2c11f8fa40a1.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=237&amp;id=uc6cf58d7&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=296&amp;originWidth=1535&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=20910&amp;status=done&amp;style=none&amp;taskId=u876afe34-e302-4fb0-bdfa-9337c7c5e57&amp;title=&amp;width=1228" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664110377772-4ba6c814-fdd4-4657-94c9-5838bf8a6cf9.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=622&amp;id=u193ea3a8&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=777&amp;originWidth=1313&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=55770&amp;status=done&amp;style=none&amp;taskId=ud94ce9ad-ecae-4b80-b4ea-86454f817ac&amp;title=&amp;width=1050.4" alt="image.png"><br><a name="bTvEn"></a></p><h2 id="资源服务器校验JWT令牌"><a href="#资源服务器校验JWT令牌" class="headerlink" title="资源服务器校验JWT令牌"></a>资源服务器校验JWT令牌</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664110037614-8c914487-f1ca-454e-94cb-c2bb932a3891.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=50&amp;id=u78e2f3eb&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=63&amp;originWidth=753&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=14281&amp;status=done&amp;style=none&amp;taskId=u6cfefcdc-2759-4763-be8d-042c27428f2&amp;title=&amp;width=602.4" alt="image.png"></p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@EnableWebSecurity</span> <span class="token comment" spellcheck="true">// 开启web访问安全</span><span class="token annotation punctuation">@EnableResourceServer</span> <span class="token comment" spellcheck="true">//开启资源服务器功能</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ResourceServerConfig</span> <span class="token keyword">extends</span> <span class="token class-name">ResourceServerConfigurerAdapter</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String sign_key <span class="token operator">=</span> <span class="token string">"malguy123"</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// jwt签名密钥</span>    <span class="token comment" spellcheck="true">/**     * 返回jwt令牌转换器（帮助我们⽣成jwt令牌的）     * 在这⾥，我们可以把签名密钥传递进去给转换器对象     * @return     */</span>    <span class="token keyword">public</span> JwtAccessTokenConverter <span class="token function">jwtAccessTokenConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        JwtAccessTokenConverter jwtAccessTokenConverter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JwtAccessTokenConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jwtAccessTokenConverter<span class="token punctuation">.</span><span class="token function">setSigningKey</span><span class="token punctuation">(</span>sign_key<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//签名密钥</span>        jwtAccessTokenConverter<span class="token punctuation">.</span><span class="token function">setVerifier</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MacSigner</span><span class="token punctuation">(</span>sign_key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//校验用的密钥,和签名密钥一致</span>        <span class="token keyword">return</span> jwtAccessTokenConverter<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*     生成token store对象(令牌存储对象),token以什么方式存储     */</span>    <span class="token keyword">public</span> TokenStore <span class="token function">tokenStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//        return new InMemoryTokenStore();//内存</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JwtTokenStore</span><span class="token punctuation">(</span><span class="token function">jwtAccessTokenConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//使用jwt令牌</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 该⽅法⽤于定义资源服务器向远程认证服务器发起请求，进⾏token校验等事宜     *     * @param resources     * @throws Exception     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span>ResourceServerSecurityConfigurer resources<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//        // 设置当前资源服务的资源id</span><span class="token comment" spellcheck="true">//        resources.resourceId("autodeliver");</span><span class="token comment" spellcheck="true">//        // 定义token服务对象（token校验就应该靠token服务对象）</span><span class="token comment" spellcheck="true">//        RemoteTokenServices remoteTokenServices = new RemoteTokenServices();</span><span class="token comment" spellcheck="true">//        // 校验端点/接⼝设置</span><span class="token comment" spellcheck="true">//        remoteTokenServices.setCheckTokenEndpointUrl("http://localhost:9999/oauth/check_token");</span><span class="token comment" spellcheck="true">//        // 携带客户端id和客户端安全码</span><span class="token comment" spellcheck="true">//        remoteTokenServices.setClientId("client_id");</span><span class="token comment" spellcheck="true">//        remoteTokenServices.setClientSecret("abcxyz");</span><span class="token comment" spellcheck="true">//        // 别忘了这⼀步,把配置加进去</span><span class="token comment" spellcheck="true">//        resources.tokenServices(remoteTokenServices);</span>        <span class="token comment" spellcheck="true">//jwt令牌改造</span>        resources<span class="token punctuation">.</span><span class="token function">resourceId</span><span class="token punctuation">(</span><span class="token string">"autodeliver"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">tokenStore</span><span class="token punctuation">(</span><span class="token function">tokenStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stateless</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//无状态设置</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 场景：⼀个服务中可能有很多资源（API接⼝）     * 某⼀些API接⼝，需要先认证，才能访问     * 某⼀些API接⼝，压根就不需要认证，本来就是对外开放的接⼝     * 我们就需要对不同特点的接⼝区分对待（在当前configure⽅法中完成），设置是否需要经过认证     *     * @param http     * @throws Exception     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span>HttpSecurity http<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        http    <span class="token comment" spellcheck="true">// 设置session的创建策略（根据需要创建即可）</span>                <span class="token punctuation">.</span><span class="token function">sessionManagement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sessionCreationPolicy</span><span class="token punctuation">(</span>SessionCreationPolicy<span class="token punctuation">.</span>IF_REQUIRED<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// autodeliver为前缀的请求需要认证</span>                <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/autodeliver/**"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// demo为前缀的请求需要认证</span>                <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/demo/**"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">anyRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 其他请求不认证</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664110887493-77ef9684-3651-4cf4-9088-b36e2ed3bdcf.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=458&amp;id=u103ed2fc&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=572&amp;originWidth=1267&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=40970&amp;status=done&amp;style=none&amp;taskId=udccf49da-e5c2-4924-86a2-f7d55320d9a&amp;title=&amp;width=1013.6" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664110893919-83cf98b4-2199-49b8-818a-22594c51a283.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=496&amp;id=ua50b9f86&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=620&amp;originWidth=1270&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=41380&amp;status=done&amp;style=none&amp;taskId=u0a9ef0e8-d176-4194-8593-ce2cc9b5b76&amp;title=&amp;width=1016" alt="image.png"><br><a name="b17Yi"></a></p><h1 id="从数据库加载Oauth2客户端信息-修改认证服务端"><a href="#从数据库加载Oauth2客户端信息-修改认证服务端" class="headerlink" title="从数据库加载Oauth2客户端信息(修改认证服务端)"></a>从数据库加载Oauth2客户端信息(修改认证服务端)</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664111541183-1c9fa653-1391-48be-8880-1b06f7f74cb3.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=31&amp;id=u8e2408ef&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=39&amp;originWidth=368&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=22780&amp;status=done&amp;style=none&amp;taskId=u3ba1c32d-2f3e-4429-9067-6c5d2ff2235&amp;title=&amp;width=294.4" alt="image.png"><br><a name="vp3Hg"></a></p><h2 id="创建数据表并初始化数据（表名及字段保持固定）"><a href="#创建数据表并初始化数据（表名及字段保持固定）" class="headerlink" title="创建数据表并初始化数据（表名及字段保持固定）"></a>创建数据表并初始化数据（表名及字段保持固定）</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SET</span> NAMES utf8mb4<span class="token punctuation">;</span><span class="token keyword">SET</span> FOREIGN_KEY_CHECKS <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- ----------------------------</span><span class="token comment" spellcheck="true">-- Table structure for oauth_client_details</span><span class="token comment" spellcheck="true">-- ----------------------------</span><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">`</span>oauth_client_details<span class="token punctuation">`</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>oauth_client_details<span class="token punctuation">`</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>client_id<span class="token punctuation">`</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">48</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token punctuation">`</span>resource_ids<span class="token punctuation">`</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token punctuation">`</span>client_secret<span class="token punctuation">`</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token punctuation">`</span>scope<span class="token punctuation">`</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token punctuation">`</span>authorized_grant_types<span class="token punctuation">`</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token punctuation">`</span>web_server_redirect_uri<span class="token punctuation">`</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token punctuation">`</span>authorities<span class="token punctuation">`</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token punctuation">`</span>access_token_validity<span class="token punctuation">`</span> <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token punctuation">`</span>refresh_token_validity<span class="token punctuation">`</span> <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token punctuation">`</span>additional_information<span class="token punctuation">`</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">4096</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token punctuation">`</span>autoapprove<span class="token punctuation">`</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>client_id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">INNODB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- ----------------------------</span><span class="token comment" spellcheck="true">-- Records of oauth_client_details</span><span class="token comment" spellcheck="true">-- ----------------------------</span><span class="token keyword">BEGIN</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token punctuation">`</span>oauth_client_details<span class="token punctuation">`</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'client_lagou123'</span><span class="token punctuation">,</span><span class="token string">'autodeliver,resume'</span><span class="token punctuation">,</span> <span class="token string">'abcxyz'</span><span class="token punctuation">,</span> <span class="token string">'all'</span><span class="token punctuation">,</span> <span class="token string">'password,refresh_token'</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token number">7200</span><span class="token punctuation">,</span> <span class="token number">259200</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">COMMIT</span><span class="token punctuation">;</span><span class="token keyword">SET</span> FOREIGN_KEY_CHECKS <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></code></pre><p><a name="Rm57R"></a></p><h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><pre class=" language-xml"><code class="language-xml">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>druid-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.1.10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-tx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-jdbc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><p><a name="AWBOY"></a></p><h2 id="配置数据源"><a href="#配置数据源" class="headerlink" title="配置数据源"></a>配置数据源</h2><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">Spring</span><span class="token punctuation">:</span>   <span class="token key atrule">datasource</span><span class="token punctuation">:</span>    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.jdbc.Driver    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>5408/test<span class="token punctuation">?</span>serverTimezone=GMT<span class="token important">&amp;useUnicode</span>=true<span class="token important">&amp;characterEncoding</span>=utf<span class="token punctuation">-</span>8<span class="token important">&amp;useSSL</span>=false<span class="token important">&amp;allowMultiQueries</span>=true    <span class="token key atrule">username</span><span class="token punctuation">:</span> root    <span class="token key atrule">password</span><span class="token punctuation">:</span>     <span class="token key atrule">druid</span><span class="token punctuation">:</span>      <span class="token key atrule">initialSize</span><span class="token punctuation">:</span> <span class="token number">10</span>      <span class="token key atrule">minIdle</span><span class="token punctuation">:</span> <span class="token number">10</span>      <span class="token key atrule">maxActive</span><span class="token punctuation">:</span> <span class="token number">30</span>      <span class="token key atrule">maxWait</span><span class="token punctuation">:</span> <span class="token number">50000</span></code></pre><p><a name="YMIT4"></a></p><h2 id="认证服务器主配置类改造"><a href="#认证服务器主配置类改造" class="headerlink" title="认证服务器主配置类改造"></a>认证服务器主配置类改造</h2><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@EnableAuthorizationServer</span> <span class="token comment" spellcheck="true">//开启认证服务器功能</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OauthServerConfig</span> <span class="token keyword">extends</span> <span class="token class-name">AuthorizationServerConfigurerAdapter</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> AuthenticationManager authenticationManager<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 认证服务器最终是以api接⼝的⽅式对外提供服务（校验合法性并⽣成令牌、校验令牌等）     * 那么，以api接⼝⽅式对外的话，就涉及到接⼝的访问权限，我们需要在这⾥进⾏必要的配置     *     * @param security     * @throws Exception     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span>AuthorizationServerSecurityConfigurer security<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span>security<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 相当于打开endpoints 访问接⼝的开关，这样的话后期我们能够访问该接⼝</span>        security <span class="token comment" spellcheck="true">// 允许客户端表单认证</span>                <span class="token punctuation">.</span><span class="token function">allowFormAuthenticationForClients</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 开启端⼝/oauth/token_key的访问权限（允许）</span>                <span class="token punctuation">.</span><span class="token function">tokenKeyAccess</span><span class="token punctuation">(</span><span class="token string">"permitAll()"</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 开启端⼝/oauth/check_token的访问权限（允许）</span>                <span class="token punctuation">.</span><span class="token function">checkTokenAccess</span><span class="token punctuation">(</span><span class="token string">"permitAll()"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> DataSource dataSource<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> JdbcClientDetailsService <span class="token function">jdbcClientDetailsService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        JdbcClientDetailsService jdbcClientDetailsService <span class="token operator">=</span>                <span class="token keyword">new</span> <span class="token class-name">JdbcClientDetailsService</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> jdbcClientDetailsService<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 客户端详情配置，     * ⽐如client_id，secret     * 当前这个服务就如同QQ平台，拉勾⽹作为客户端需要qq平台进⾏登录授权认证等，     * 提前需要到QQ平台注册，QQ平台会给拉勾⽹     * 颁发client_id等必要参数，表明客户端是谁     *     * @param clients     * @throws Exception     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span>ClientDetailsServiceConfigurer clients<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span>clients<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//从内存中加载客户端详情</span><span class="token comment" spellcheck="true">//        clients.inMemory() // 客户端信息存储在什么地⽅，可以在内存中，可以在数据库⾥</span><span class="token comment" spellcheck="true">//                .withClient("client_id") // 添加⼀个client配置,指定其client_id</span><span class="token comment" spellcheck="true">//                .secret("abcxyz") // 指定客户端的密码/安全码</span><span class="token comment" spellcheck="true">//                // 指定客户端所能访问资源id清单，此处的资源id是需要在具体的资源服务器上也配置⼀样</span><span class="token comment" spellcheck="true">//                // 认证类型/令牌颁发模式，可以配置多个在这⾥，但是不⼀定都⽤，具体使⽤哪种⽅式颁发token，</span><span class="token comment" spellcheck="true">//                // 需要客户端调⽤的时候传递参数指定</span><span class="token comment" spellcheck="true">//                .resourceIds("autodeliver")</span><span class="token comment" spellcheck="true">//                .authorizedGrantTypes("password", "refresh_token") //认证类型</span><span class="token comment" spellcheck="true">//                .scopes("all"); // 客户端的权限范围，此处配置为all全部即可</span>        <span class="token comment" spellcheck="true">//从数据库中加载客户端详情</span>        clients<span class="token punctuation">.</span><span class="token function">withClientDetails</span><span class="token punctuation">(</span><span class="token function">jdbcClientDetailsService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 认证服务器是玩转token的，那么这⾥配置token令牌管理相关     * （token此时就是⼀个字符串，当下的token需要在服务器端存储，那么存储在哪⾥呢？都是在这⾥配置）     *     * @param endpoints     * @throws Exception     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span>AuthorizationServerEndpointsConfigurer endpoints<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span>endpoints<span class="token punctuation">)</span><span class="token punctuation">;</span>        endpoints<span class="token punctuation">.</span><span class="token function">tokenStore</span><span class="token punctuation">(</span><span class="token function">tokenStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 指定token存储方法</span>                <span class="token punctuation">.</span><span class="token function">tokenServices</span><span class="token punctuation">(</span><span class="token function">authorizationServerTokenServices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// token服务的⼀个描述，可以认为是token⽣成细节的描述，⽐如有效时间多少等</span>                <span class="token punctuation">.</span><span class="token function">authenticationManager</span><span class="token punctuation">(</span>authenticationManager<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 指定认证管理器，随后注⼊⼀个到当前类使⽤即可</span>                <span class="token punctuation">.</span><span class="token function">allowedTokenEndpointRequestMethods</span><span class="token punctuation">(</span>HttpMethod<span class="token punctuation">.</span>GET<span class="token punctuation">,</span> HttpMethod<span class="token punctuation">.</span>POST<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> String sign_key<span class="token operator">=</span><span class="token string">"malguy123"</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//密钥</span>    <span class="token comment" spellcheck="true">/**     * 返回jwt令牌转换器（帮助我们⽣成jwt令牌的）     * 在这⾥，我们可以把签名密钥传递进去给转换器对象     * @return     */</span>    <span class="token keyword">public</span> JwtAccessTokenConverter <span class="token function">jwtAccessTokenConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        JwtAccessTokenConverter jwtAccessTokenConverter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JwtAccessTokenConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jwtAccessTokenConverter<span class="token punctuation">.</span><span class="token function">setSigningKey</span><span class="token punctuation">(</span>sign_key<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//签名密钥</span>        jwtAccessTokenConverter<span class="token punctuation">.</span><span class="token function">setVerifier</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MacSigner</span><span class="token punctuation">(</span>sign_key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//校验用的密钥,和签名密钥一致</span>        <span class="token keyword">return</span> jwtAccessTokenConverter<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*     生成token store对象(令牌存储对象),token以什么方式存储     */</span>    <span class="token keyword">public</span> TokenStore <span class="token function">tokenStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//        return new InMemoryTokenStore();//内存</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JwtTokenStore</span><span class="token punctuation">(</span><span class="token function">jwtAccessTokenConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//使用jwt令牌</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*     该方法用户获取一个token服务对象(描述了token有效期等信息)     */</span>    <span class="token keyword">public</span> AuthorizationServerTokenServices <span class="token function">authorizationServerTokenServices</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//使用默认实现</span>        DefaultTokenServices tokenServices <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultTokenServices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tokenServices<span class="token punctuation">.</span><span class="token function">setSupportRefreshToken</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//是否支持令牌刷新</span>        tokenServices<span class="token punctuation">.</span><span class="token function">setTokenStore</span><span class="token punctuation">(</span><span class="token function">tokenStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//针对jwt令牌的添加</span>        tokenServices<span class="token punctuation">.</span><span class="token function">setTokenEnhancer</span><span class="token punctuation">(</span><span class="token function">jwtAccessTokenConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置令牌有效时间（⼀般设置为2个⼩时）</span>        tokenServices<span class="token punctuation">.</span><span class="token function">setAccessTokenValiditySeconds</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// access_token就是我们请求资源需要携带的令牌</span>        <span class="token comment" spellcheck="true">// 设置刷新令牌的有效时间</span>        tokenServices<span class="token punctuation">.</span><span class="token function">setRefreshTokenValiditySeconds</span><span class="token punctuation">(</span><span class="token number">259200</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//3天</span>        <span class="token keyword">return</span> tokenServices<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664111920716-ab4901e7-ae0f-4057-a6e6-bd00342ef8fe.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=748&amp;id=ubba1bd0d&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=935&amp;originWidth=1553&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=107495&amp;status=done&amp;style=none&amp;taskId=u081a4995-1ff0-431e-a79c-f2b0bd0088f&amp;title=&amp;width=1242.4" alt="image.png"><br><a name="FQP1b"></a></p><h1 id="从数据库验证⽤户合法性"><a href="#从数据库验证⽤户合法性" class="headerlink" title="从数据库验证⽤户合法性"></a>从数据库验证⽤户合法性</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664118049378-e448df15-5d28-487f-b755-c26ac2a0470e.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=473&amp;id=u84b300e1&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=670&amp;originWidth=414&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=403239&amp;status=done&amp;style=none&amp;taskId=uaa7ad41f-f2d4-4e69-9565-687f1ce394d&amp;title=&amp;width=292.20001220703125" alt="image.png"><br><a name="tsNjC"></a></p><h2 id="创建数据表users（表名不需固定），初始化数据"><a href="#创建数据表users（表名不需固定），初始化数据" class="headerlink" title="创建数据表users（表名不需固定），初始化数据"></a>创建数据表users（表名不需固定），初始化数据</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SET</span> NAMES utf8mb4<span class="token punctuation">;</span><span class="token keyword">SET</span> FOREIGN_KEY_CHECKS <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- ----------------------------</span><span class="token comment" spellcheck="true">-- Table structure for users</span><span class="token comment" spellcheck="true">-- ----------------------------</span><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">`</span>oauth_users<span class="token punctuation">`</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>oauth_users<span class="token punctuation">`</span> <span class="token punctuation">(</span> <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span><span class="token punctuation">`</span>username<span class="token punctuation">`</span> CHAR<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token punctuation">`</span>password<span class="token punctuation">`</span> CHAR<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">INNODB</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">5</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- ----------------------------</span><span class="token comment" spellcheck="true">-- Records of users</span><span class="token comment" spellcheck="true">-- ----------------------------</span><span class="token keyword">BEGIN</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token punctuation">`</span>oauth_users<span class="token punctuation">`</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">'lagou-user'</span><span class="token punctuation">,</span> <span class="token string">'iuxyzds'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">COMMIT</span><span class="token punctuation">;</span><span class="token keyword">SET</span> FOREIGN_KEY_CHECKS <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></code></pre><p><a name="wT5G4"></a></p><h2 id="操作数据表的JPA配置以及针对该表的操作的Dao接⼝"><a href="#操作数据表的JPA配置以及针对该表的操作的Dao接⼝" class="headerlink" title="操作数据表的JPA配置以及针对该表的操作的Dao接⼝"></a>操作数据表的JPA配置以及针对该表的操作的Dao接⼝</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Entity<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Id<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Table<span class="token punctuation">;</span><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@Entity</span><span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"oauth_users"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OauthUsers</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@Id</span>  <span class="token keyword">private</span> Long id<span class="token punctuation">;</span>  <span class="token keyword">private</span> String username<span class="token punctuation">;</span>  <span class="token keyword">private</span> String password<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--带有jpa的依赖--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.malguy<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lagou-service-common<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@EnableDiscoveryClient</span><span class="token annotation punctuation">@EntityScan</span><span class="token punctuation">(</span><span class="token string">"com.malguy.edu.entity"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OauthServerApplication9999</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>OauthServerApplication9999<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserRepository</span> <span class="token keyword">extends</span> <span class="token class-name">JpaRepository</span><span class="token operator">&lt;</span>OauthUsers<span class="token punctuation">,</span>Long<span class="token operator">></span> <span class="token punctuation">{</span>    OauthUsers <span class="token function">findByUsername</span><span class="token punctuation">(</span>String username<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><a name="JRAxx"></a></p><h2 id="开发UserDetailsService接⼝的实现类，根据⽤户名从数据库加载⽤户信息"><a href="#开发UserDetailsService接⼝的实现类，根据⽤户名从数据库加载⽤户信息" class="headerlink" title="开发UserDetailsService接⼝的实现类，根据⽤户名从数据库加载⽤户信息"></a>开发UserDetailsService接⼝的实现类，根据⽤户名从数据库加载⽤户信息</h2><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">jdbcUserDetailService</span> <span class="token keyword">implements</span> <span class="token class-name">UserDetailsService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UserRepository userRepository<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 根据username查询出该⽤户的所有信息，封装成UserDetails类型的对象返回，⾄于密码，框架会⾃动匹配     * @param username     * @return     * @throws UsernameNotFoundException     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> UserDetails <span class="token function">loadUserByUsername</span><span class="token punctuation">(</span>String username<span class="token punctuation">)</span> <span class="token keyword">throws</span> UsernameNotFoundException <span class="token punctuation">{</span>        OauthUsers users <span class="token operator">=</span> userRepository<span class="token punctuation">.</span><span class="token function">findByUsername</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span>users<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>users<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><a name="HeXM5"></a></p><h2 id="使⽤⾃定义的⽤户详情服务对象"><a href="#使⽤⾃定义的⽤户详情服务对象" class="headerlink" title="使⽤⾃定义的⽤户详情服务对象"></a>使⽤⾃定义的⽤户详情服务对象</h2><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//处理用户名和密码的校验等</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecurityConfig</span> <span class="token keyword">extends</span> <span class="token class-name">WebSecurityConfigurerAdapter</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> PasswordEncoder passwordEncoder<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> jdbcUserDetailService jdbcUserDetailService<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 注册一个认证管理类对象到容器     */</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> AuthenticationManager <span class="token function">authenticationManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">authenticationManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 密码编码对象（密码不进⾏加密处理）     * @return     */</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> PasswordEncoder <span class="token function">passwordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> NoOpPasswordEncoder<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 处理⽤户名和密码验证事宜     * 1）客户端传递username和password参数到认证服务器     * 2）⼀般来说，username和password会存储在数据库中的⽤户表中     * 3）根据⽤户表中数据，验证当前传递过来的⽤户信息的合法性     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span>AuthenticationManagerBuilder auth<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 在这个⽅法中就可以去关联数据库了，当前我们先把⽤户信息配置在内存中</span>        <span class="token comment" spellcheck="true">// 实例化⼀个⽤户对象(相当于数据表中的⼀条⽤户记录)</span><span class="token comment" spellcheck="true">//        UserDetails user = new User("admin", "123456", new ArrayList&lt;>());</span><span class="token comment" spellcheck="true">//        auth.inMemoryAuthentication().withUser(user).passwordEncoder(passwordEncoder());</span>        auth<span class="token punctuation">.</span><span class="token function">userDetailsService</span><span class="token punctuation">(</span>jdbcUserDetailService<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">passwordEncoder</span><span class="token punctuation">(</span>passwordEncoder<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664117769177-48b370a1-cc96-445a-8e6e-b993cb16f5ce.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=762&amp;id=u09dc7891&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=953&amp;originWidth=1528&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=106454&amp;status=done&amp;style=none&amp;taskId=uc41be06b-cb7c-40b2-bd84-221dbe2fc68&amp;title=&amp;width=1222.4" alt="image.png"><br><a name="JiNA9"></a></p><h2 id="gateway转发–修改yaml"><a href="#gateway转发–修改yaml" class="headerlink" title="gateway转发–修改yaml"></a>gateway转发–修改yaml</h2><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>    <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>      <span class="token key atrule">routes</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># 路由可以有多个</span>        <span class="token comment" spellcheck="true">#配置权限中心的转发路由</span>        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> service<span class="token punctuation">-</span>oauth<span class="token punctuation">-</span>router           <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//lagou<span class="token punctuation">-</span>cloud<span class="token punctuation">-</span>oauth<span class="token punctuation">-</span>server          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> Path=/oauth/**         <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> service<span class="token punctuation">-</span>autodeliver<span class="token punctuation">-</span>router <span class="token comment" spellcheck="true"># 我们⾃定义的路由 ID，保持唯⼀</span>          <span class="token comment" spellcheck="true">#uri: http://127.0.0.1:8092 # ⽬标服务地址 ⾃动投递微服务（部署多实例） 动态路由：uri配置的应该是⼀个服务名称，⽽不应该是⼀个具体的服务实例的地址</span>          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//lagou<span class="token punctuation">-</span>service<span class="token punctuation">-</span>autodeliver          <span class="token comment" spellcheck="true"># gateway⽹关从服务注册中⼼获取实例信息然后负载后路由</span>          <span class="token key atrule">predicates</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#断⾔：路由条件，Predicate 接受⼀个输⼊参数，返回⼀个布尔值结果。该接⼝包含多种默 认⽅法来将 Predicate 组合成其他复杂的逻辑（⽐如：与，或，⾮）。</span>            <span class="token punctuation">-</span> Path=/autodeliver/**        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> service<span class="token punctuation">-</span>resume<span class="token punctuation">-</span>router <span class="token comment" spellcheck="true"># 我们⾃定义的路由 ID，保持唯⼀</span>          <span class="token comment" spellcheck="true">#uri: http://127.0.0.1:8081 # ⽬标服务地址</span>          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//lagou<span class="token punctuation">-</span>service<span class="token punctuation">-</span>resume          <span class="token comment" spellcheck="true">#http://localhost:9002/resume/openstate/1545132</span>          <span class="token comment" spellcheck="true">#http://127.0.0.1:8081/openstate/1545132</span>          <span class="token key atrule">predicates</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#断⾔：路由条件，Predicate 接受⼀个输⼊参数，返回⼀个布尔值结果。该接⼝包含多种默 认⽅法来将 Predicate 组合成其他复杂的逻辑（⽐如：与，或，⾮）。</span>            <span class="token punctuation">-</span> Path=/resume/**<span class="token comment" spellcheck="true">#          filters:</span><span class="token comment" spellcheck="true">#            - StripPrefix=1 #去掉url的host后的第一个字符串(/resume)</span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664118638803-ae8c22be-99c5-4f5e-a9d5-299a17d6917b.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=622&amp;id=u3b952912&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=778&amp;originWidth=1543&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=87261&amp;status=done&amp;style=none&amp;taskId=u858519bc-0fe1-498c-a0f3-21ae823d79d&amp;title=&amp;width=1234.4" alt="image.png"><br><a name="NBCF1"></a></p><h1 id="基于Oauth2的-JWT-令牌信息扩展"><a href="#基于Oauth2的-JWT-令牌信息扩展" class="headerlink" title="基于Oauth2的 JWT 令牌信息扩展"></a>基于Oauth2的 JWT 令牌信息扩展</h1><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664117792088-2c0f59dd-6dfe-47a7-8045-6d3ecfbcad83.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=225&amp;id=u9f65b9ae&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=281&amp;originWidth=1059&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=103785&amp;status=done&amp;style=none&amp;taskId=uc53e4cef-b352-4bd3-abd2-85ed647c12c&amp;title=&amp;width=847.2" alt="image.png"><br><a name="wjbpk"></a></p><h2 id="认证服务器⽣成JWT令牌时存⼊扩展信息-不要放敏感信息-（⽐如clientIp）"><a href="#认证服务器⽣成JWT令牌时存⼊扩展信息-不要放敏感信息-（⽐如clientIp）" class="headerlink" title="认证服务器⽣成JWT令牌时存⼊扩展信息(不要放敏感信息)（⽐如clientIp）"></a>认证服务器⽣成JWT令牌时存⼊扩展信息(不要放敏感信息)（⽐如clientIp）</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664117831162-1613d582-4be7-4092-9568-15740ffe98d0.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=85&amp;id=uc0353f33&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=106&amp;originWidth=997&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=17821&amp;status=done&amp;style=none&amp;taskId=u61aa7fff-16cc-451c-8d7a-89b6c6f1234&amp;title=&amp;width=797.6" alt="image.png"></p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LagouAccessTokenConvertor</span> <span class="token keyword">extends</span> <span class="token class-name">DefaultAccessTokenConverter</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> <span class="token operator">?</span><span class="token operator">></span> <span class="token function">convertAccessToken</span><span class="token punctuation">(</span>OAuth2AccessToken token<span class="token punctuation">,</span> OAuth2Authentication authentication<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获取到request对象</span>        HttpServletRequest request <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ServletRequestAttributes<span class="token punctuation">)</span>                RequestContextHolder<span class="token punctuation">.</span><span class="token function">getRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取客户端ip(如果客户端经过代理之后到达当前服务,</span>        <span class="token comment" spellcheck="true">//则此处获取的不是真实浏览器客户端ip,则需要从请求头里获取真实ip)</span>        String remoteAddr <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getRemoteAddr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>String<span class="token operator">></span> stringMap <span class="token operator">=</span> <span class="token punctuation">(</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> String<span class="token operator">></span><span class="token punctuation">)</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">convertAccessToken</span><span class="token punctuation">(</span>token<span class="token punctuation">,</span> authentication<span class="token punctuation">)</span><span class="token punctuation">;</span>        stringMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"clientIp"</span><span class="token punctuation">,</span>remoteAddr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> stringMap<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>注册自己的tokenconvertor</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@EnableAuthorizationServer</span> <span class="token comment" spellcheck="true">//开启认证服务器功能</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OauthServerConfig</span> <span class="token keyword">extends</span> <span class="token class-name">AuthorizationServerConfigurerAdapter</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> AuthenticationManager authenticationManager<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> LagouAccessTokenConvertor lagouAccessTokenConvertor<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 认证服务器最终是以api接⼝的⽅式对外提供服务（校验合法性并⽣成令牌、校验令牌等）     * 那么，以api接⼝⽅式对外的话，就涉及到接⼝的访问权限，我们需要在这⾥进⾏必要的配置     *     * @param security     * @throws Exception     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span>AuthorizationServerSecurityConfigurer security<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span>security<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 相当于打开endpoints 访问接⼝的开关，这样的话后期我们能够访问该接⼝</span>        security <span class="token comment" spellcheck="true">// 允许客户端表单认证</span>                <span class="token punctuation">.</span><span class="token function">allowFormAuthenticationForClients</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 开启端⼝/oauth/token_key的访问权限（允许）</span>                <span class="token punctuation">.</span><span class="token function">tokenKeyAccess</span><span class="token punctuation">(</span><span class="token string">"permitAll()"</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 开启端⼝/oauth/check_token的访问权限（允许）</span>                <span class="token punctuation">.</span><span class="token function">checkTokenAccess</span><span class="token punctuation">(</span><span class="token string">"permitAll()"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> DataSource dataSource<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> JdbcClientDetailsService <span class="token function">jdbcClientDetailsService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        JdbcClientDetailsService jdbcClientDetailsService <span class="token operator">=</span>                <span class="token keyword">new</span> <span class="token class-name">JdbcClientDetailsService</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> jdbcClientDetailsService<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 客户端详情配置，     * ⽐如client_id，secret     * 当前这个服务就如同QQ平台，拉勾⽹作为客户端需要qq平台进⾏登录授权认证等，     * 提前需要到QQ平台注册，QQ平台会给拉勾⽹     * 颁发client_id等必要参数，表明客户端是谁     *     * @param clients     * @throws Exception     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span>ClientDetailsServiceConfigurer clients<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span>clients<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//从数据库中加载客户端详情</span>        clients<span class="token punctuation">.</span><span class="token function">withClientDetails</span><span class="token punctuation">(</span><span class="token function">jdbcClientDetailsService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 认证服务器是玩转token的，那么这⾥配置token令牌管理相关     * （token此时就是⼀个字符串，当下的token需要在服务器端存储，那么存储在哪⾥呢？都是在这⾥配置）     *     * @param endpoints     * @throws Exception     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span>AuthorizationServerEndpointsConfigurer endpoints<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span>endpoints<span class="token punctuation">)</span><span class="token punctuation">;</span>        endpoints<span class="token punctuation">.</span><span class="token function">tokenStore</span><span class="token punctuation">(</span><span class="token function">tokenStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 指定token存储方法</span>                <span class="token punctuation">.</span><span class="token function">tokenServices</span><span class="token punctuation">(</span><span class="token function">authorizationServerTokenServices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// token服务的⼀个描述，可以认为是token⽣成细节的描述，⽐如有效时间多少等</span>                <span class="token punctuation">.</span><span class="token function">authenticationManager</span><span class="token punctuation">(</span>authenticationManager<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 指定认证管理器，随后注⼊⼀个到当前类使⽤即可</span>                <span class="token punctuation">.</span><span class="token function">allowedTokenEndpointRequestMethods</span><span class="token punctuation">(</span>HttpMethod<span class="token punctuation">.</span>GET<span class="token punctuation">,</span> HttpMethod<span class="token punctuation">.</span>POST<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> String sign_key <span class="token operator">=</span> <span class="token string">"malguy123"</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//密钥</span>    <span class="token comment" spellcheck="true">/**     * 返回jwt令牌转换器（帮助我们⽣成jwt令牌的）     * 在这⾥，我们可以把签名密钥传递进去给转换器对象     *     * @return     */</span>    <span class="token keyword">public</span> JwtAccessTokenConverter <span class="token function">jwtAccessTokenConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        JwtAccessTokenConverter jwtAccessTokenConverter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JwtAccessTokenConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jwtAccessTokenConverter<span class="token punctuation">.</span><span class="token function">setSigningKey</span><span class="token punctuation">(</span>sign_key<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//签名密钥</span>        jwtAccessTokenConverter<span class="token punctuation">.</span><span class="token function">setVerifier</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MacSigner</span><span class="token punctuation">(</span>sign_key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//校验用的密钥,和签名密钥一致</span>        <span class="token comment" spellcheck="true">//把自己的转换器注册进来</span>        jwtAccessTokenConverter<span class="token punctuation">.</span><span class="token function">setAccessTokenConverter</span><span class="token punctuation">(</span>lagouAccessTokenConvertor<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> jwtAccessTokenConverter<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*     生成token store对象(令牌存储对象),token以什么方式存储     */</span>    <span class="token keyword">public</span> TokenStore <span class="token function">tokenStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//        return new InMemoryTokenStore();//内存</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JwtTokenStore</span><span class="token punctuation">(</span><span class="token function">jwtAccessTokenConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//使用jwt令牌</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*     该方法用户获取一个token服务对象(描述了token有效期等信息)     */</span>    <span class="token keyword">public</span> AuthorizationServerTokenServices <span class="token function">authorizationServerTokenServices</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//使用默认实现</span>        DefaultTokenServices tokenServices <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultTokenServices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tokenServices<span class="token punctuation">.</span><span class="token function">setSupportRefreshToken</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//是否支持令牌刷新</span>        tokenServices<span class="token punctuation">.</span><span class="token function">setTokenStore</span><span class="token punctuation">(</span><span class="token function">tokenStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//针对jwt令牌的添加</span>        tokenServices<span class="token punctuation">.</span><span class="token function">setTokenEnhancer</span><span class="token punctuation">(</span><span class="token function">jwtAccessTokenConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置令牌有效时间（⼀般设置为2个⼩时）</span>        tokenServices<span class="token punctuation">.</span><span class="token function">setAccessTokenValiditySeconds</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// access_token就是我们请求资源需要携带的令牌</span>        <span class="token comment" spellcheck="true">// 设置刷新令牌的有效时间</span>        tokenServices<span class="token punctuation">.</span><span class="token function">setRefreshTokenValiditySeconds</span><span class="token punctuation">(</span><span class="token number">259200</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//3天</span>        <span class="token keyword">return</span> tokenServices<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><a name="IqKCN"></a></p><h2 id="资源服务器取出-JWT-令牌扩展信息"><a href="#资源服务器取出-JWT-令牌扩展信息" class="headerlink" title="资源服务器取出 JWT 令牌扩展信息"></a>资源服务器取出 JWT 令牌扩展信息</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664119839745-b944314e-67b5-4d0c-a710-4fdd6b17bedf.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=411&amp;id=u85450d0d&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=561&amp;originWidth=400&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=332001&amp;status=done&amp;style=none&amp;taskId=u76723c5d-efff-48eb-8352-e6ff3d1d253&amp;title=&amp;width=293" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664119457964-5006c215-89e4-4dcc-9313-5d6413d1a5e4.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=93&amp;id=u1d794479&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=116&amp;originWidth=1021&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=39815&amp;status=done&amp;style=none&amp;taskId=uef47f0c4-f286-4c5d-b004-82578951a3a&amp;title=&amp;width=816.8" alt="image.png"></p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LagouAccessTokenConvertor</span> <span class="token keyword">extends</span> <span class="token class-name">DefaultAccessTokenConverter</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> OAuth2Authentication <span class="token function">extractAuthentication</span><span class="token punctuation">(</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> <span class="token operator">?</span><span class="token operator">></span> map<span class="token punctuation">)</span> <span class="token punctuation">{</span>        OAuth2Authentication oAuth2Authentication<span class="token operator">=</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">extractAuthentication</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>        oAuth2Authentication<span class="token punctuation">.</span><span class="token function">setDetails</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//将map放入认证对象中,认证对象在controller中可以拿到</span>        <span class="token keyword">return</span> oAuth2Authentication<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@EnableWebSecurity</span> <span class="token comment" spellcheck="true">// 开启web访问安全</span><span class="token annotation punctuation">@EnableResourceServer</span> <span class="token comment" spellcheck="true">//开启资源服务器功能</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ResourceServerConfig</span> <span class="token keyword">extends</span> <span class="token class-name">ResourceServerConfigurerAdapter</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String sign_key <span class="token operator">=</span> <span class="token string">"malguy123"</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// jwt签名密钥</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> LagouAccessTokenConvertor lagouAccessTokenConvertor<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 返回jwt令牌转换器（帮助我们⽣成jwt令牌的）     * 在这⾥，我们可以把签名密钥传递进去给转换器对象     * @return     */</span>    <span class="token keyword">public</span> JwtAccessTokenConverter <span class="token function">jwtAccessTokenConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        JwtAccessTokenConverter jwtAccessTokenConverter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JwtAccessTokenConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jwtAccessTokenConverter<span class="token punctuation">.</span><span class="token function">setSigningKey</span><span class="token punctuation">(</span>sign_key<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//签名密钥</span>        jwtAccessTokenConverter<span class="token punctuation">.</span><span class="token function">setVerifier</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MacSigner</span><span class="token punctuation">(</span>sign_key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//校验用的密钥,和签名密钥一致</span>        jwtAccessTokenConverter<span class="token punctuation">.</span><span class="token function">setAccessTokenConverter</span><span class="token punctuation">(</span>lagouAccessTokenConvertor<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> jwtAccessTokenConverter<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*     生成token store对象(令牌存储对象),token以什么方式存储     */</span>    <span class="token keyword">public</span> TokenStore <span class="token function">tokenStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//        return new InMemoryTokenStore();//内存</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JwtTokenStore</span><span class="token punctuation">(</span><span class="token function">jwtAccessTokenConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//使用jwt令牌</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 该⽅法⽤于定义资源服务器向远程认证服务器发起请求，进⾏token校验等事宜     *     * @param resources     * @throws Exception     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span>ResourceServerSecurityConfigurer resources<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//        // 设置当前资源服务的资源id</span><span class="token comment" spellcheck="true">//        resources.resourceId("autodeliver");</span><span class="token comment" spellcheck="true">//        // 定义token服务对象（token校验就应该靠token服务对象）</span><span class="token comment" spellcheck="true">//        RemoteTokenServices remoteTokenServices = new RemoteTokenServices();</span><span class="token comment" spellcheck="true">//        // 校验端点/接⼝设置</span><span class="token comment" spellcheck="true">//        remoteTokenServices.setCheckTokenEndpointUrl("http://localhost:9999/oauth/check_token");</span><span class="token comment" spellcheck="true">//        // 携带客户端id和客户端安全码</span><span class="token comment" spellcheck="true">//        remoteTokenServices.setClientId("client_id");</span><span class="token comment" spellcheck="true">//        remoteTokenServices.setClientSecret("abcxyz");</span><span class="token comment" spellcheck="true">//        // 别忘了这⼀步,把配置加进去</span><span class="token comment" spellcheck="true">//        resources.tokenServices(remoteTokenServices);</span>        <span class="token comment" spellcheck="true">//jwt令牌改造</span>        resources<span class="token punctuation">.</span><span class="token function">resourceId</span><span class="token punctuation">(</span><span class="token string">"autodeliver"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">tokenStore</span><span class="token punctuation">(</span><span class="token function">tokenStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stateless</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//无状态设置</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 场景：⼀个服务中可能有很多资源（API接⼝）     * 某⼀些API接⼝，需要先认证，才能访问     * 某⼀些API接⼝，压根就不需要认证，本来就是对外开放的接⼝     * 我们就需要对不同特点的接⼝区分对待（在当前configure⽅法中完成），设置是否需要经过认证     *     * @param http     * @throws Exception     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span>HttpSecurity http<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        http    <span class="token comment" spellcheck="true">// 设置session的创建策略（根据需要创建即可）</span>                <span class="token punctuation">.</span><span class="token function">sessionManagement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sessionCreationPolicy</span><span class="token punctuation">(</span>SessionCreationPolicy<span class="token punctuation">.</span>IF_REQUIRED<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// autodeliver为前缀的请求需要认证</span>                <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/autodeliver/**"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// demo为前缀的请求需要认证</span>                <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/demo/**"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">anyRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 其他请求不认证</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/demo"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/test"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">findResumeOpenState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        Object details <span class="token operator">=</span> SecurityContextHolder<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAuthentication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDetails</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>details<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"demo/test"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664120027165-4778ae31-2459-4635-b803-23f94cfd43e5.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=566&amp;id=ubb4454b6&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=707&amp;originWidth=1213&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=516069&amp;status=done&amp;style=none&amp;taskId=u39d9123a-dcaf-4d61-970c-0e353cee1e2&amp;title=&amp;width=970.4" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664120151467-5b8ee5b0-9659-4417-b466-8874c186fc83.png#clientId=uc566349f-a045-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=92&amp;id=u033b3263&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=115&amp;originWidth=1008&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=133889&amp;status=done&amp;style=none&amp;taskId=ue1006ead-2757-47e9-94a1-985e62b9e08&amp;title=&amp;width=806.4" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/26091703/1664149715908-03346f4c-c4b1-4941-9627-10dbceafbfb7.png#clientId=ua0227fd3-bf61-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=318&amp;id=u8f81ce3a&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=398&amp;originWidth=1033&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=100803&amp;status=done&amp;style=none&amp;taskId=u662ef50b-46c1-4290-99e9-dffca29e088&amp;title=&amp;width=826.4" alt="image.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>测试文章</title>
      <link href="/2022/10/04/ce-shi-wen-zhang/"/>
      <url>/2022/10/04/ce-shi-wen-zhang/</url>
      
        <content type="html"><![CDATA[<p>测试文章</p><img src="/2022/10/04/ce-shi-wen-zhang/test.jpg" class="" title="图片引用方法一"><p><img src="test.jpg" alt="图片引用方法二"></p><p><img src="/images/test.jpg" alt="图片引用方法三"></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>

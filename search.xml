<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>social-media-fullstack</title>
      <link href="/2023/04/30/frontend/react/ytb/social-media-fullstack/social-media-fullstack/"/>
      <url>/2023/04/30/frontend/react/ytb/social-media-fullstack/social-media-fullstack/</url>
      
        <content type="html"><![CDATA[<h1 id="init"><a href="#init" class="headerlink" title="init"></a>init</h1><pre class=" language-shell"><code class="language-shell">npx create-react-app react-social</code></pre><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p><img src="20230430173619.png"></p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>preconnect<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://fonts.googleapis.com<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>preconnect<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://fonts.gstatic.com<span class="token punctuation">"</span></span> <span class="token attr-name">crossorigin</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://fonts.googleapis.com/css2?family<span class="token punctuation">=</span>Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&amp;display<span class="token punctuation">=</span>swap<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><pre class=" language-shell"><code class="language-shell">npm i @material-ui/icons</code></pre><h1 id="Topbar"><a href="#Topbar" class="headerlink" title="Topbar"></a>Topbar</h1><pre class=" language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">{</span>  BsSearch<span class="token punctuation">,</span>  BsFillPersonFill<span class="token punctuation">,</span>  BsFillChatLeftTextFill<span class="token punctuation">,</span><span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react-icons/bs"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">{</span> RiNotificationFill <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react-icons/ri"</span><span class="token punctuation">;</span><span class="token keyword">const</span> topbarLink <span class="token operator">=</span> <span class="token string">"ml-"</span><span class="token punctuation">;</span><span class="token keyword">const</span> Topbar <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>h-[50px]</span> <span class="token attr-name">w-full</span> <span class="token attr-name">bg-blue1</span> <span class="token attr-name">flex</span> <span class="token attr-name">items-center</span> <span class="token attr-name">sticky</span> <span class="token attr-name">top-0"</span><span class="token punctuation">></span></span>      <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* left */</span><span class="token punctuation">}</span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex-3</span> <span class="token attr-name">"</span><span class="token punctuation">></span></span>        <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* logo */</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text-2xl</span> <span class="token attr-name">ml-5</span> <span class="token attr-name">font-bold</span> <span class="token attr-name">text-white</span> <span class="token attr-name">cursor-pointer"</span><span class="token punctuation">></span></span>          Lamasocial        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* center */</span><span class="token punctuation">}</span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex-5</span> <span class="token attr-name">"</span><span class="token punctuation">></span></span>        <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* search */</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>w-full</span> <span class="token attr-name">h-7</span> <span class="token attr-name">bg-white</span> <span class="token attr-name">rounded-[30px]</span> <span class="token attr-name">flex</span> <span class="token attr-name">items-center"</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BsSearch</span> <span class="token attr-name">fontSize</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">20</span><span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ml-[10px]<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>            <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>            <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>rounded-none</span> <span class="token attr-name">w-[70%]</span> <span class="token attr-name"><span class="token namespace">focus:</span>outline-none"</span>            <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Search</span> <span class="token attr-name">for</span> <span class="token attr-name">friend,</span> <span class="token attr-name">post</span> <span class="token attr-name">or</span> <span class="token attr-name">video"</span>          <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* right */</span><span class="token punctuation">}</span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex-4</span> <span class="token attr-name">flex</span> <span class="token attr-name">items-center</span> <span class="token attr-name">justify-around</span> <span class="token attr-name">text-white"</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ml-3</span> <span class="token attr-name">text-sm</span> <span class="token attr-name">cursor-pointer"</span><span class="token punctuation">></span></span>Homepage<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ml-3</span> <span class="token attr-name">text-sm</span> <span class="token attr-name">cursor-pointer"</span><span class="token punctuation">></span></span>Timeline<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mr-4</span> <span class="token attr-name">cursor-pointer</span> <span class="token attr-name">relative"</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BsFillPersonFill</span> <span class="token attr-name">fontSize</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">20</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span>              <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">items-center</span> <span class="token attr-name">justify-center</span> <span class="token attr-name">text-xs</span> <span class="token attr-name">w-4</span> <span class="token attr-name">h-4</span>                             <span class="token attr-name">-top-2</span> <span class="token attr-name">-right-2</span> <span class="token attr-name">bg-red-500</span> <span class="token attr-name">rounded-[50%]</span> <span class="token attr-name">text-white</span> <span class="token attr-name">absolute"</span>            <span class="token punctuation">></span></span>              <span class="token number">1</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mr-4</span> <span class="token attr-name">cursor-pointer</span> <span class="token attr-name">relative"</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BsFillChatLeftTextFill</span> <span class="token attr-name">fontSize</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">20</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span>              <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">items-center</span> <span class="token attr-name">justify-center</span> <span class="token attr-name">text-xs</span> <span class="token attr-name">w-4</span> <span class="token attr-name">h-4</span>                             <span class="token attr-name">-top-2</span> <span class="token attr-name">-right-2</span> <span class="token attr-name">bg-red-500</span> <span class="token attr-name">rounded-[50%]</span> <span class="token attr-name">text-white</span> <span class="token attr-name">absolute"</span>            <span class="token punctuation">></span></span>              <span class="token number">1</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mr-4</span> <span class="token attr-name">cursor-pointer</span> <span class="token attr-name">relative"</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RiNotificationFill</span> <span class="token attr-name">fontSize</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">20</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span>              <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">items-center</span> <span class="token attr-name">justify-center</span> <span class="token attr-name">text-xs</span> <span class="token attr-name">w-4</span> <span class="token attr-name">h-4</span>                             <span class="token attr-name">-top-2</span> <span class="token attr-name">-right-2</span> <span class="token attr-name">bg-red-500</span> <span class="token attr-name">rounded-[50%]</span> <span class="token attr-name">text-white</span> <span class="token attr-name">absolute"</span>            <span class="token punctuation">></span></span>              <span class="token number">1</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* assets放入public,然后使用根据public相对路径定src,这样才能打包后生效 */</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>          <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./assets/person/1.jpeg<span class="token punctuation">"</span></span>          <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>profile<span class="token punctuation">"</span></span>          <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>w-8</span> <span class="token attr-name">h-8</span> <span class="token attr-name">rounded-[50%]</span> <span class="token attr-name">object-cover</span> <span class="token attr-name">cursor-pointer"</span>        <span class="token punctuation">/></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> Topbar<span class="token punctuation">;</span></code></pre><p><img src="20230430192428.png"></p><h1 id="Sidebar"><a href="#Sidebar" class="headerlink" title="Sidebar"></a>Sidebar</h1><pre class=" language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">{</span>  MdRssFeed<span class="token punctuation">,</span>  MdVideoLibrary<span class="token punctuation">,</span>  MdGroup<span class="token punctuation">,</span>  MdBusinessCenter<span class="token punctuation">,</span><span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react-icons/md"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">{</span> BiCalendarEvent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react-icons/bi"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">{</span> FaRegQuestionCircle<span class="token punctuation">,</span> FaGraduationCap <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react-icons/fa"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">{</span> BsFillChatLeftTextFill<span class="token punctuation">,</span> BsBookmarksFill <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react-icons/bs"</span><span class="token punctuation">;</span><span class="token keyword">const</span> Sidebar <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex-3</span> <span class="token attr-name">h-[calc(100vh-50px)]</span> <span class="token attr-name">overflow-scroll</span> <span class="token attr-name">sticky</span> <span class="token attr-name">top-[3.1rem]"</span><span class="token punctuation">></span></span>      <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* sidebarwrapper */</span><span class="token punctuation">}</span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>p-5</span> <span class="token attr-name">"</span><span class="token punctuation">></span></span>        <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* sidebar list */</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>p-0</span> <span class="token attr-name">m-0</span> <span class="token attr-name">list-none"</span><span class="token punctuation">></span></span>          <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* sidebar list item */</span><span class="token punctuation">}</span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">items-center</span> <span class="token attr-name">mb-5"</span><span class="token punctuation">></span></span>            <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* sidebar list item icon */</span><span class="token punctuation">}</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MdRssFeed</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mr-4<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* sidebar list item text */</span><span class="token punctuation">}</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Feed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">items-center</span> <span class="token attr-name">mb-5"</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BsFillChatLeftTextFill</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mr-4<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Chats<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">items-center</span> <span class="token attr-name">mb-5"</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MdVideoLibrary</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mr-4<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Videos<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">items-center</span> <span class="token attr-name">mb-5"</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MdGroup</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mr-4<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Groups<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">items-center</span> <span class="token attr-name">mb-5"</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BsBookmarksFill</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mr-4<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Bookmarks<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">items-center</span> <span class="token attr-name">mb-5"</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FaRegQuestionCircle</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mr-4<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Questions<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">items-center</span> <span class="token attr-name">mb-5"</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MdBusinessCenter</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mr-4<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Jobs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">items-center</span> <span class="token attr-name">mb-5"</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BiCalendarEvent</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mr-4<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Events<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">items-center</span> <span class="token attr-name">mb-5"</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FaGraduationCap</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mr-4<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Courses<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>w-[9rem]</span> <span class="token attr-name">p-3</span> <span class="token attr-name">rounded-md</span> <span class="token attr-name">bg-gray-200</span> <span class="token attr-name">font-medium"</span><span class="token punctuation">></span></span>          Show More        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>my-5</span> <span class="token attr-name">mx-0"</span> <span class="token punctuation">/></span></span>        <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* sidebar friend list */</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>m-0</span> <span class="token attr-name">p-0</span> <span class="token attr-name">list-none"</span><span class="token punctuation">></span></span>          <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* sidebar friend */</span><span class="token punctuation">}</span>          <span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">items-center</span> <span class="token attr-name">mb-4"</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>                <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>w-8</span> <span class="token attr-name">h-8</span> <span class="token attr-name">rounded-[50%]</span> <span class="token attr-name">object-cover</span> <span class="token attr-name">mr-[0.6rem]"</span>                <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./assets/person/2.jpeg<span class="token punctuation">"</span></span>                <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span>              <span class="token punctuation">/></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Jane Doe<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> Sidebar<span class="token punctuation">;</span></code></pre><h2 id="index-css"><a href="#index-css" class="headerlink" title="index.css"></a>index.css</h2><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* 引入tailwind */</span><span class="token atrule"><span class="token rule">@tailwind</span> base<span class="token punctuation">;</span></span><span class="token atrule"><span class="token rule">@tailwind</span> components<span class="token punctuation">;</span></span><span class="token atrule"><span class="token rule">@tailwind</span> utilities<span class="token punctuation">;</span></span><span class="token selector">* </span><span class="token punctuation">{</span>  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'Roboto'</span>, sans-serif<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* 修改滚动条样式 */</span><span class="token selector"><span class="token pseudo-element">::-webkit-scrollbar</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token pseudo-element">::-webkit-scrollbar-track</span> </span><span class="token punctuation">{</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#f1f1f1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token pseudo-element">::-webkit-scrollbar-thumb</span> </span><span class="token punctuation">{</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> gray<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><img src="20230430204415.png"></p><h1 id="Feed"><a href="#Feed" class="headerlink" title="Feed"></a>Feed</h1><h2 id="Share"><a href="#Share" class="headerlink" title="Share"></a>Share</h2><p><img src="20230430210050.png" alt="阴影box"></p><pre class=" language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">{</span> MdPermMedia<span class="token punctuation">,</span> MdLabel<span class="token punctuation">,</span> MdLocationOn <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react-icons/md"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">{</span> BsFillEmojiSunglassesFill <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react-icons/bs"</span><span class="token punctuation">;</span><span class="token keyword">const</span> Share <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>w-full</span> <span class="token attr-name">h-[11rem]</span> <span class="token attr-name">rounded-xl</span> <span class="token attr-name">shadow-share"</span><span class="token punctuation">></span></span>      <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* share wrapper */</span><span class="token punctuation">}</span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>p-[0.6rem]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* share top */</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">items-center"</span><span class="token punctuation">></span></span>          <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* share profile img */</span><span class="token punctuation">}</span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>            <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>w-12</span> <span class="token attr-name">h-12</span> <span class="token attr-name">rounded-[50%]</span> <span class="token attr-name">object-cover</span> <span class="token attr-name">mr-[0.6rem]"</span>            <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./assets/person/1.jpeg<span class="token punctuation">"</span></span>            <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span>          <span class="token punctuation">/></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>            <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>border-none</span> <span class="token attr-name">w-[80%]</span> <span class="token attr-name"><span class="token namespace">focus:</span>outline-none</span> <span class="token attr-name">"</span>            <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>            <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>What<span class="token punctuation">'</span>s</span> <span class="token attr-name">in</span> <span class="token attr-name">your</span> <span class="token attr-name">mind?"</span>          <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>m-5<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* share bottom */</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">items-center</span> <span class="token attr-name">justify-between"</span><span class="token punctuation">></span></span>          <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* share options */</span><span class="token punctuation">}</span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">ml-5"</span><span class="token punctuation">></span></span>            <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* share option */</span><span class="token punctuation">}</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">items-center</span> <span class="token attr-name">mr-4</span> <span class="token attr-name">cursor-pointer"</span><span class="token punctuation">></span></span>              <span class="token operator">&lt;</span>MdPermMedia                <span class="token comment" spellcheck="true">// html-color="tomato"</span>                color<span class="token operator">=</span><span class="token string">"tomato"</span>                fontSize<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">"28px"</span><span class="token punctuation">}</span>                className<span class="token operator">=</span><span class="token string">"mr-1 cursor-pointer"</span>              <span class="token operator">/</span><span class="token operator">></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text-[0.9rem]</span> <span class="token attr-name">font-medium"</span><span class="token punctuation">></span></span>Photo or Video<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">items-center</span> <span class="token attr-name">mr-4</span> <span class="token attr-name">"</span><span class="token punctuation">></span></span>              <span class="token operator">&lt;</span>MdLabel                <span class="token comment" spellcheck="true">// html-color="tomato"</span>                color<span class="token operator">=</span><span class="token string">"blue"</span>                fontSize<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">"28px"</span><span class="token punctuation">}</span>                className<span class="token operator">=</span><span class="token string">"mr-1 cursor-pointer"</span>              <span class="token operator">/</span><span class="token operator">></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text-[0.9rem]</span> <span class="token attr-name">font-medium"</span><span class="token punctuation">></span></span>Tag<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">items-center</span> <span class="token attr-name">mr-4</span> <span class="token attr-name">"</span><span class="token punctuation">></span></span>              <span class="token operator">&lt;</span>MdLocationOn                <span class="token comment" spellcheck="true">// html-color="tomato"</span>                color<span class="token operator">=</span><span class="token string">"green"</span>                fontSize<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">"28px"</span><span class="token punctuation">}</span>                className<span class="token operator">=</span><span class="token string">"mr-1 cursor-pointer"</span>              <span class="token operator">/</span><span class="token operator">></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text-[0.9rem]</span> <span class="token attr-name">font-medium"</span><span class="token punctuation">></span></span>Location<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">items-center</span> <span class="token attr-name">mr-4</span> <span class="token attr-name">"</span><span class="token punctuation">></span></span>              <span class="token operator">&lt;</span>BsFillEmojiSunglassesFill                <span class="token comment" spellcheck="true">// html-color="tomato"</span>                color<span class="token operator">=</span><span class="token string">"goldenrod"</span>                fontSize<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">"28px"</span><span class="token punctuation">}</span>                className<span class="token operator">=</span><span class="token string">"mr-1 cursor-pointer"</span>              <span class="token operator">/</span><span class="token operator">></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text-[0.9rem]</span> <span class="token attr-name">font-medium"</span><span class="token punctuation">></span></span>Feelings<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>              <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ml-[11rem]</span> <span class="token attr-name">border-none</span> <span class="token attr-name">p-2</span> <span class="token attr-name">rounded-md</span> <span class="token attr-name">bg-green-300</span>                    <span class="token attr-name">font-medium</span> <span class="token attr-name">cursor-pointer</span> <span class="token attr-name">text-white"</span>            <span class="token punctuation">></span></span>              Share            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> Share<span class="token punctuation">;</span></code></pre><p><img src="20230430214843.png"></p><h2 id="Post"><a href="#Post" class="headerlink" title="Post"></a>Post</h2><pre class=" language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">{</span> BsThreeDotsVertical <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react-icons/bs"</span><span class="token punctuation">;</span><span class="token keyword">const</span> Post <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>w-full</span> <span class="token attr-name">rounded-[0.6rem]</span> <span class="token attr-name">shadow-share</span> <span class="token attr-name">my-[1.9rem]</span> <span class="token attr-name">mx-0"</span><span class="token punctuation">></span></span>      <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* post wrapper */</span><span class="token punctuation">}</span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>p-[0.6rem]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* post top */</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">items-center</span> <span class="token attr-name">justify-between"</span><span class="token punctuation">></span></span>          <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* post top left */</span><span class="token punctuation">}</span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">items-center"</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>              <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>h-8</span> <span class="token attr-name">w-8</span> <span class="token attr-name">rounded-[50%]</span> <span class="token attr-name">object-cover"</span>              <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./assets/person/1.jpeg<span class="token punctuation">"</span></span>              <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span>            <span class="token punctuation">/></span></span>            <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* post username */</span><span class="token punctuation">}</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text-sm</span> <span class="token attr-name">font-medium</span> <span class="token attr-name">my-0</span> <span class="token attr-name">mx-10"</span><span class="token punctuation">></span></span>Jone Losom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* post date */</span><span class="token punctuation">}</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text-xs<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token number">5</span> min age<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* post top right */</span><span class="token punctuation">}</span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BsThreeDotsVertical</span> <span class="token punctuation">/></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* post center */</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>my-5</span> <span class="token attr-name">mx-0"</span><span class="token punctuation">></span></span>          <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* post text */</span><span class="token punctuation">}</span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Hey<span class="token operator">!</span> It's my first post <span class="token punctuation">:</span><span class="token punctuation">)</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* post img */</span><span class="token punctuation">}</span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>            <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mt-5</span> <span class="token attr-name">w-full</span> <span class="token attr-name">max-h-[32rem]</span> <span class="token attr-name">object-cover"</span>            <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./assets/post/1.jpeg<span class="token punctuation">"</span></span>            <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span>          <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* post bottom */</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">items-center</span> <span class="token attr-name">justify-between"</span><span class="token punctuation">></span></span>          <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* post bottom left */</span><span class="token punctuation">}</span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">items-center"</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>              <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>w-6</span> <span class="token attr-name">h-6</span> <span class="token attr-name">mr-1</span> <span class="token attr-name">cursor-pointer"</span>              <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./assets/like.png<span class="token punctuation">"</span></span>              <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>like<span class="token punctuation">"</span></span>            <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>              <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>w-6</span> <span class="token attr-name">h-6</span> <span class="token attr-name">mr-1</span> <span class="token attr-name">cursor-pointer"</span>              <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./assets/heart.png<span class="token punctuation">"</span></span>              <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heart<span class="token punctuation">"</span></span>            <span class="token punctuation">/></span></span>            <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* post like counter */</span><span class="token punctuation">}</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text-base<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token number">32</span> people like it<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* post bottom right */</span><span class="token punctuation">}</span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* post commont counter */</span><span class="token punctuation">}</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cursor-pointer</span> <span class="token attr-name">"</span><span class="token punctuation">></span></span><span class="token number">9</span> commonts<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> Post<span class="token punctuation">;</span></code></pre><p><img src="20230501073451.png"></p><h1 id="Rightbar"><a href="#Rightbar" class="headerlink" title="Rightbar"></a>Rightbar</h1><pre class=" language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token keyword">const</span> Rightbar <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex-[3.5]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* right bar wrapper */</span><span class="token punctuation">}</span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pt-5</span> <span class="token attr-name">pr-5</span> <span class="token attr-name">pb-0</span> <span class="token attr-name">pl-0"</span><span class="token punctuation">></span></span>        <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* birthday container */</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">items-center"</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>            <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>object-cover</span> <span class="token attr-name">w-10</span> <span class="token attr-name">h-10"</span>            <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./assets/gift.png<span class="token punctuation">"</span></span>            <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span>          <span class="token punctuation">/></span></span>          <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* birthday text */</span><span class="token punctuation">}</span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>font-light</span> <span class="token attr-name">text-[0.94rem]"</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>Pola Foster<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span> and <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span><span class="token number">3</span> other friends<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span> have a birthday today          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* rightbar Ad */</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>          <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>w-full</span> <span class="token attr-name">rounded-[0.6rem]</span> <span class="token attr-name">my-[1.9rem]</span> <span class="token attr-name">mx-0"</span>          <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./assets/ad.png<span class="token punctuation">"</span></span>          <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ad<span class="token punctuation">"</span></span>        <span class="token punctuation">/></span></span>        <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* rightbar title */</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mb-5</span> <span class="token attr-name">font-bold</span> <span class="token attr-name">text-lg"</span><span class="token punctuation">></span></span>Online Friends<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>        <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* rightbar friend list */</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>p-0</span> <span class="token attr-name">m-0</span> <span class="token attr-name">list-none"</span><span class="token punctuation">></span></span>          <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* rightbar friend */</span><span class="token punctuation">}</span>          <span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">items-center</span> <span class="token attr-name">mb-[0.93rem]"</span><span class="token punctuation">></span></span>              <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* rightbar profile img container */</span><span class="token punctuation">}</span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mr-[0.63rem]</span> <span class="token attr-name">relative"</span><span class="token punctuation">></span></span>                <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* rightbar profile img */</span><span class="token punctuation">}</span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>                  <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>w-10</span> <span class="token attr-name">h-10</span> <span class="token attr-name">rounded-half</span> <span class="token attr-name">object-cover"</span>                  <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./assets/person/3.jpeg<span class="token punctuation">"</span></span>                  <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span>                <span class="token punctuation">/></span></span>                <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* rightbar online */</span><span class="token punctuation">}</span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span>                  <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>w-3</span> <span class="token attr-name">h-3</span> <span class="token attr-name">rounded-half</span> <span class="token attr-name">absolute</span> <span class="token attr-name">bg-green-300</span>                           <span class="token attr-name">-top-[0.12rem]</span> <span class="token attr-name">right-0</span> <span class="token attr-name">border-2</span> <span class="token attr-name">border-solid</span> <span class="token attr-name">border-white"</span>                <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>              <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* rightbar username */</span><span class="token punctuation">}</span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>font-medium<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>John Carter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> Rightbar<span class="token punctuation">;</span></code></pre><p><img src="20230501091648.png"></p><h1 id="Profile"><a href="#Profile" class="headerlink" title="Profile"></a>Profile</h1><pre class=" language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token keyword">import</span> Topbar <span class="token keyword">from</span> <span class="token string">"../components/Topbar"</span><span class="token punctuation">;</span><span class="token keyword">import</span> Sidebar <span class="token keyword">from</span> <span class="token string">"../components/Sidebar"</span><span class="token punctuation">;</span><span class="token keyword">import</span> Rightbar <span class="token keyword">from</span> <span class="token string">"../components/Rightbar"</span><span class="token punctuation">;</span><span class="token keyword">import</span> Feed <span class="token keyword">from</span> <span class="token string">"../components/Feed"</span><span class="token punctuation">;</span><span class="token keyword">const</span> Profile <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span><span class="token operator">></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Topbar</span> <span class="token punctuation">/></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">w-full"</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Sidebar</span> <span class="token punctuation">/></span></span>        <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* profile right */</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex-[9]</span> <span class="token attr-name">"</span><span class="token punctuation">></span></span>          <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* profile right top */</span><span class="token punctuation">}</span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* profile cover */</span><span class="token punctuation">}</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>h-80</span> <span class="token attr-name">relative"</span><span class="token punctuation">></span></span>              <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* profile cover img */</span><span class="token punctuation">}</span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>                <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>w-full</span> <span class="token attr-name">h-[15.5rem]</span> <span class="token attr-name">object-cover"</span>                <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./assets/post/3.jpeg<span class="token punctuation">"</span></span>                <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span>              <span class="token punctuation">/></span></span>              <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* profile user img */</span><span class="token punctuation">}</span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>                <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>w-[9.5rem]</span> <span class="token attr-name">h-[9.5rem]</span> <span class="token attr-name">rounded-half</span> <span class="token attr-name">object-cover</span> <span class="token attr-name">absolute</span>                          <span class="token attr-name">left-0</span> <span class="token attr-name">right-0</span> <span class="token attr-name">top-[9.5rem]</span> <span class="token attr-name">m-auto</span> <span class="token attr-name">border-[3px]</span> <span class="token attr-name">border-solid</span>                           <span class="token attr-name">border-white"</span>                <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./assets/person/7.jpeg<span class="token punctuation">"</span></span>                <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span>              <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* profile info */</span><span class="token punctuation">}</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">flex-col</span> <span class="token attr-name">items-center</span> <span class="token attr-name">justify-center"</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text-2xl</span> <span class="token attr-name">font-bold"</span><span class="token punctuation">></span></span>Safak Kocaoglu<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>font-light<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Hello my friends<span class="token operator">!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* profile right bottom */</span><span class="token punctuation">}</span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">"</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Feed</span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Rightbar</span> <span class="token attr-name">profile</span><span class="token punctuation">/></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> Profile<span class="token punctuation">;</span></code></pre><h2 id="Rightbar-1"><a href="#Rightbar-1" class="headerlink" title="Rightbar"></a>Rightbar</h2><pre class=" language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">{</span> Users <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"../dummyData"</span><span class="token punctuation">;</span><span class="token keyword">import</span> RightbarFriend <span class="token keyword">from</span> <span class="token string">"./RightbarFriend"</span><span class="token punctuation">;</span><span class="token keyword">const</span> Rightbar <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> profile <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> HomeRightbar <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span><span class="token operator">></span>        <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* birthday container */</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">items-center"</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>            <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>object-cover</span> <span class="token attr-name">w-10</span> <span class="token attr-name">h-10"</span>            <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./assets/gift.png<span class="token punctuation">"</span></span>            <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span>          <span class="token punctuation">/></span></span>          <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* birthday text */</span><span class="token punctuation">}</span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>font-light</span> <span class="token attr-name">text-[0.94rem]"</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>Pola Foster<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span> and <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span><span class="token number">3</span> other friends<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span> have a birthday today          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* rightbar Ad */</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>          <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>w-full</span> <span class="token attr-name">rounded-[0.6rem]</span> <span class="token attr-name">my-[1.9rem]</span> <span class="token attr-name">mx-0"</span>          <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./assets/ad.png<span class="token punctuation">"</span></span>          <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ad<span class="token punctuation">"</span></span>        <span class="token punctuation">/></span></span>        <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* rightbar title */</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mb-5</span> <span class="token attr-name">font-bold</span> <span class="token attr-name">text-lg"</span><span class="token punctuation">></span></span>Online Friends<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>        <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* rightbar friend list */</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>p-0</span> <span class="token attr-name">m-0</span> <span class="token attr-name">list-none"</span><span class="token punctuation">></span></span>          <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* rightbar friend */</span><span class="token punctuation">}</span>          <span class="token punctuation">{</span>Users<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RightbarFriend</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>u<span class="token punctuation">.</span>id<span class="token punctuation">}</span></span> <span class="token attr-name">user</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>u<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>          <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> ProfileRightbar <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span><span class="token operator">></span>        <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* rightbar title */</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>font-medium</span> <span class="token attr-name">text-lg</span> <span class="token attr-name">mb-[0.6rem]"</span><span class="token punctuation">></span></span>User information<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>        <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* rightbar info */</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mb-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* rightbar info item */</span><span class="token punctuation">}</span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bottom-[0.6rem]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* rightbar info key */</span><span class="token punctuation">}</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>font-medium</span> <span class="token attr-name">mr-4</span> <span class="token attr-name">text-[#555]"</span><span class="token punctuation">></span></span>City<span class="token punctuation">:</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* rightbar info value */</span><span class="token punctuation">}</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>font-light<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>New <span class="token class-name">York</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bottom-[0.6rem]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>font-medium</span> <span class="token attr-name">mr-4</span> <span class="token attr-name">text-[#555]"</span><span class="token punctuation">></span></span>From<span class="token punctuation">:</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>font-light<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Madrid<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bottom-[0.6rem]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>font-medium</span> <span class="token attr-name">mr-4</span> <span class="token attr-name">text-[#555]"</span><span class="token punctuation">></span></span>Relationship<span class="token punctuation">:</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>font-light<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Single<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* rightbar title */</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>font-medium</span> <span class="token attr-name">text-lg</span> <span class="token attr-name">mb-[0.6rem]"</span><span class="token punctuation">></span></span>User Friends<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>        <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* rightbar followings */</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">flex-wrap</span> <span class="token attr-name">justify-between"</span><span class="token punctuation">></span></span>          <span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>              <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span>              <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex-col</span> <span class="token attr-name">flex</span> <span class="token attr-name">mb-[1.2rem]</span> <span class="token attr-name">cursor-pointer</span> <span class="token attr-name">text-center"</span>            <span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>                <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>w-[6.5rem]</span> <span class="token attr-name">h-[6.5rem]</span> <span class="token attr-name">object-cover</span> <span class="token attr-name">rounded-md"</span>                <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./assets/person/1.jpeg<span class="token punctuation">"</span></span>                <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span>              <span class="token punctuation">/></span></span>              <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* rightbar followings name */</span><span class="token punctuation">}</span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>John Carter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex-[3.5]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* right bar wrapper */</span><span class="token punctuation">}</span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pt-5</span> <span class="token attr-name">pr-5</span> <span class="token attr-name">pb-0</span> <span class="token attr-name">pl-0"</span><span class="token punctuation">></span></span>        <span class="token punctuation">{</span>profile <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ProfileRightbar</span> <span class="token punctuation">/></span></span> <span class="token punctuation">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>HomeRightbar</span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> Rightbar<span class="token punctuation">;</span></code></pre><p><img src="20230501111805.png"></p><h1 id="Login-amp-Register"><a href="#Login-amp-Register" class="headerlink" title="Login &amp; Register"></a>Login &amp; Register</h1><pre class=" language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">{</span> Link <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react-router-dom"</span><span class="token punctuation">;</span><span class="token keyword">const</span> Login <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>w-[100vw]</span> <span class="token attr-name">h-[100vh]</span> <span class="token attr-name">bg-[#f0f2f5]</span> <span class="token attr-name">flex</span> <span class="token attr-name">items-center</span> <span class="token attr-name">justify-center"</span><span class="token punctuation">></span></span>      <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* login wrapper */</span><span class="token punctuation">}</span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>w-[70%]</span> <span class="token attr-name">h-[70%]</span> <span class="token attr-name">flex"</span><span class="token punctuation">></span></span>        <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* login left */</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">flex-[1]</span> <span class="token attr-name">flex-col</span> <span class="token attr-name">justify-center"</span><span class="token punctuation">></span></span>          <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* logo */</span><span class="token punctuation">}</span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text-5xl</span> <span class="token attr-name">font-extrabold</span> <span class="token attr-name">text-[#1775ee]</span> <span class="token attr-name">mb-[0.6rem]"</span><span class="token punctuation">></span></span>            Lamasocial          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>          <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* logo desc */</span><span class="token punctuation">}</span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text-2xl<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            Connect <span class="token keyword">with</span> friends and world around you on Lamasocial          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* login right */</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">flex-[1]</span> <span class="token attr-name">flex-col</span> <span class="token attr-name">justify-center"</span><span class="token punctuation">></span></span>          <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* login box */</span><span class="token punctuation">}</span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>h-[19rem]</span> <span class="token attr-name">p-5</span> <span class="token attr-name">bg-whtie</span> <span class="token attr-name">rounded-[0.6rem]</span> <span class="token attr-name">flex</span> <span class="token attr-name">flex-col</span> <span class="token attr-name">justify-between"</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>              <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>h-[3.1rem]</span> <span class="token attr-name">rounded-[0.6rem]</span> <span class="token attr-name">border-solid</span> <span class="token attr-name">border-1</span>                         <span class="token attr-name">border-gray-300</span> <span class="token attr-name">text-lg</span> <span class="token attr-name">pl-[1.2rem]"</span>              <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span>              <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Email<span class="token punctuation">"</span></span>            <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>              <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>h-[3.1rem]</span> <span class="token attr-name">rounded-[0.6rem]</span> <span class="token attr-name">border-solid</span> <span class="token attr-name">border-1</span>                         <span class="token attr-name">border-gray-300</span> <span class="token attr-name">text-lg</span> <span class="token attr-name">pl-[1.2rem]"</span>              <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>              <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Password<span class="token punctuation">"</span></span>            <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>              <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>focus:outline-none</span> <span class="token attr-name">h-[3.1rem]</span> <span class="token attr-name">rounded-[0.6rem]</span>                      <span class="token attr-name">bg-[#1775ee]</span> <span class="token attr-name">text-white</span> <span class="token attr-name">cursor-pointer"</span>            <span class="token punctuation">></span></span>              Log In            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>              <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>focus:outline-none</span> <span class="token attr-name">h-[3.1rem]</span> <span class="token attr-name">rounded-[0.6rem]</span>                      <span class="token attr-name">bg-[#42b72a]</span> <span class="token attr-name">text-white</span> <span class="token attr-name">cursor-pointer"</span>            <span class="token punctuation">></span></span>              Create a New <span class="token class-name">Account</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/register<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text-center</span> <span class="token attr-name">text-[#1775ee]"</span><span class="token punctuation">></span></span>                Forgot Password<span class="token operator">?</span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Link</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> Login<span class="token punctuation">;</span></code></pre><pre class=" language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token keyword">const</span> Register <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>w-[100vw]</span> <span class="token attr-name">h-[100vh]</span> <span class="token attr-name">bg-[#f0f2f5]</span> <span class="token attr-name">flex</span> <span class="token attr-name">items-center</span> <span class="token attr-name">justify-center"</span><span class="token punctuation">></span></span>      <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* login wrapper */</span><span class="token punctuation">}</span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>w-[70%]</span> <span class="token attr-name">h-[70%]</span> <span class="token attr-name">flex"</span><span class="token punctuation">></span></span>        <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* login left */</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">flex-[1]</span> <span class="token attr-name">flex-col</span> <span class="token attr-name">justify-center"</span><span class="token punctuation">></span></span>          <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* logo */</span><span class="token punctuation">}</span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text-5xl</span> <span class="token attr-name">font-extrabold</span> <span class="token attr-name">text-[#1775ee]</span> <span class="token attr-name">mb-[0.6rem]"</span><span class="token punctuation">></span></span>            Lamasocial          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>          <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* logo desc */</span><span class="token punctuation">}</span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text-2xl<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            Connect <span class="token keyword">with</span> friends and world around you on Lamasocial          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* login right */</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flex</span> <span class="token attr-name">flex-[1]</span> <span class="token attr-name">flex-col</span> <span class="token attr-name">justify-center"</span><span class="token punctuation">></span></span>          <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* login box */</span><span class="token punctuation">}</span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>h-[25rem]</span> <span class="token attr-name">p-5</span> <span class="token attr-name">bg-whtie</span> <span class="token attr-name">rounded-[0.6rem]</span> <span class="token attr-name">flex</span> <span class="token attr-name">flex-col</span> <span class="token attr-name">justify-between"</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>              <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>h-[3.1rem]</span> <span class="token attr-name">rounded-[0.6rem]</span> <span class="token attr-name">border-solid</span> <span class="token attr-name">border-1</span>                         <span class="token attr-name">border-gray-300</span> <span class="token attr-name">text-lg</span> <span class="token attr-name">pl-[1.2rem]"</span>              <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>              <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Username<span class="token punctuation">"</span></span>            <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>              <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>h-[3.1rem]</span> <span class="token attr-name">rounded-[0.6rem]</span> <span class="token attr-name">border-solid</span> <span class="token attr-name">border-1</span>                         <span class="token attr-name">border-gray-300</span> <span class="token attr-name">text-lg</span> <span class="token attr-name">pl-[1.2rem]"</span>              <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span>              <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Email<span class="token punctuation">"</span></span>            <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>              <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>h-[3.1rem]</span> <span class="token attr-name">rounded-[0.6rem]</span> <span class="token attr-name">border-solid</span> <span class="token attr-name">border-1</span>                         <span class="token attr-name">border-gray-300</span> <span class="token attr-name">text-lg</span> <span class="token attr-name">pl-[1.2rem]"</span>              <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>              <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Password<span class="token punctuation">"</span></span>            <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>              <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>h-[3.1rem]</span> <span class="token attr-name">rounded-[0.6rem]</span> <span class="token attr-name">border-solid</span> <span class="token attr-name">border-1</span>                         <span class="token attr-name">border-gray-300</span> <span class="token attr-name">text-lg</span> <span class="token attr-name">pl-[1.2rem]"</span>              <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>              <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Password</span> <span class="token attr-name">Again"</span>            <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>              <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>focus:outline-none</span> <span class="token attr-name">h-[3.1rem]</span> <span class="token attr-name">rounded-[0.6rem]</span>                      <span class="token attr-name">bg-[#1775ee]</span> <span class="token attr-name">text-white</span> <span class="token attr-name">cursor-pointer"</span>            <span class="token punctuation">></span></span>              Sign Up            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>              <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>focus:outline-none</span> <span class="token attr-name">h-[3.1rem]</span> <span class="token attr-name">rounded-[0.6rem]</span>                      <span class="token attr-name">bg-[#42b72a]</span> <span class="token attr-name">text-white</span> <span class="token attr-name">cursor-pointer"</span>            <span class="token punctuation">></span></span>              Log into Account            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> Register<span class="token punctuation">;</span></code></pre><p><img src="20230501123412.png"><br><img src="20230501123420.png"></p>]]></content>
      
      
      <categories>
          
          <category> node </category>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node </tag>
            
            <tag> react </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jwt-go 认证服务器</title>
      <link href="/2023/04/30/backend/golang/jwt-authentication-in-go-gingorm/jwt-go/"/>
      <url>/2023/04/30/backend/golang/jwt-authentication-in-go-gingorm/jwt-go/</url>
      
        <content type="html"><![CDATA[<h1 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h1><p><img src="1682754591806.png" alt="1682754591806"><br><img src="1682754628679.png" alt="1682754628679"></p><pre class=" language-shell"><code class="language-shell">go get -u github.com/golang-jwt/jwt/v4go get gorm.io/gormgo get gorm.io/driver/sqlitego get github.com/joho/godotenvgo get github.com/githubnemo/CompileDaemongo install github.com/githubnemo/CompileDaemongo get -u golang.org/x/crypto/bcrypt </code></pre><pre class=" language-shell"><code class="language-shell"># 启动(command="gomod模块名称"),然后可以热更新compiledaemon --command="./jwt-go-system" </code></pre><h1 id="可以注册使用免费的postgres数据库"><a href="#可以注册使用免费的postgres数据库" class="headerlink" title="可以注册使用免费的postgres数据库"></a>可以注册使用免费的postgres数据库</h1><p><img src="1682755461947.png" alt="1682755461947"></p><p><img src="1682772056451.png" alt="1682772056451"></p><h1 id="controllers"><a href="#controllers" class="headerlink" title="controllers"></a>controllers</h1><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> controllers<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"github.com/gin-gonic/gin"</span>    <span class="token string">"github.com/golang-jwt/jwt/v4"</span>    <span class="token string">"golang.org/x/crypto/bcrypt"</span>    <span class="token string">"jwt-go-system/initializers"</span>    <span class="token string">"jwt-go-system/models"</span>    <span class="token string">"net/http"</span>    <span class="token string">"os"</span>    <span class="token string">"time"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">Signup</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 传过来的json里的变量名大小写开头都行</span>    <span class="token keyword">var</span> body <span class="token keyword">struct</span> <span class="token punctuation">{</span>        Email    <span class="token builtin">string</span>        Password <span class="token builtin">string</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> c<span class="token punctuation">.</span><span class="token function">Bind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>body<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusBadRequest<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span>            <span class="token string">"error"</span><span class="token punctuation">:</span> <span class="token string">"failed to read body"</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// hash the password</span>    hash<span class="token punctuation">,</span> err <span class="token operator">:=</span> bcrypt<span class="token punctuation">.</span><span class="token function">GenerateFromPassword</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>body<span class="token punctuation">.</span>Password<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusBadRequest<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span>            <span class="token string">"error"</span><span class="token punctuation">:</span> <span class="token string">"failed to hash password"</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// create a new user</span>    user <span class="token operator">:=</span> models<span class="token punctuation">.</span>User<span class="token punctuation">{</span>Email<span class="token punctuation">:</span> body<span class="token punctuation">.</span>Email<span class="token punctuation">,</span> Password<span class="token punctuation">:</span> <span class="token function">string</span><span class="token punctuation">(</span>hash<span class="token punctuation">)</span><span class="token punctuation">}</span>    result <span class="token operator">:=</span> initializers<span class="token punctuation">.</span>DB<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span>    <span class="token keyword">if</span> result<span class="token punctuation">.</span>Error <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusBadRequest<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span>            <span class="token string">"error"</span><span class="token punctuation">:</span> <span class="token string">"failed to create user"</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// response</span>    c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">Login</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 传过来的json里的变量名大小写开头都行</span>    <span class="token keyword">var</span> body <span class="token keyword">struct</span> <span class="token punctuation">{</span>        Email    <span class="token builtin">string</span>        Password <span class="token builtin">string</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> c<span class="token punctuation">.</span><span class="token function">Bind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>body<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusBadRequest<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span>            <span class="token string">"error"</span><span class="token punctuation">:</span> <span class="token string">"failed to read body"</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 是否有该用户</span>    <span class="token keyword">var</span> user models<span class="token punctuation">.</span>User    initializers<span class="token punctuation">.</span>DB<span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">,</span> <span class="token string">"email = ?"</span><span class="token punctuation">,</span> body<span class="token punctuation">.</span>Email<span class="token punctuation">)</span>    <span class="token keyword">if</span> user<span class="token punctuation">.</span>ID <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>        c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusBadRequest<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span>            <span class="token string">"error"</span><span class="token punctuation">:</span> <span class="token string">"Invalid email or password"</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 校验密码</span>    err <span class="token operator">:=</span> bcrypt<span class="token punctuation">.</span><span class="token function">CompareHashAndPassword</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>Password<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>body<span class="token punctuation">.</span>Password<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusBadRequest<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span>            <span class="token string">"error"</span><span class="token punctuation">:</span> <span class="token string">"failed to hash password"</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 生成jwt令牌(传输协议用https,加密传输,防止jwt泄露)</span>    token <span class="token operator">:=</span> jwt<span class="token punctuation">.</span><span class="token function">NewWithClaims</span><span class="token punctuation">(</span>jwt<span class="token punctuation">.</span>SigningMethodHS256<span class="token punctuation">,</span> jwt<span class="token punctuation">.</span>MapClaims<span class="token punctuation">{</span>        <span class="token string">"sub"</span><span class="token punctuation">:</span> user<span class="token punctuation">.</span>ID<span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 过期时间</span>        <span class="token string">"exp"</span><span class="token punctuation">:</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Hour <span class="token operator">*</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Unix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 传入密钥,加密</span>    tokenStr<span class="token punctuation">,</span> err <span class="token operator">:=</span> token<span class="token punctuation">.</span><span class="token function">SignedString</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span><span class="token function">Getenv</span><span class="token punctuation">(</span><span class="token string">"SECRET"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusBadRequest<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span>            <span class="token string">"error"</span><span class="token punctuation">:</span> <span class="token string">"Failed to create token"</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">}</span>    c<span class="token punctuation">.</span><span class="token function">SetSameSite</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>SameSiteLaxMode<span class="token punctuation">)</span>    c<span class="token punctuation">.</span><span class="token function">SetCookie</span><span class="token punctuation">(</span><span class="token string">"Authorization"</span><span class="token punctuation">,</span> tokenStr<span class="token punctuation">,</span> <span class="token number">3600</span><span class="token operator">*</span><span class="token number">24</span><span class="token operator">*</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>    c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span>        <span class="token string">"token"</span><span class="token punctuation">:</span> tokenStr<span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">Validate</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    user<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span>    c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span>        <span class="token string">"msg"</span><span class="token punctuation">:</span>  <span class="token string">"ok!"</span><span class="token punctuation">,</span>        <span class="token string">"user"</span><span class="token punctuation">:</span> user<span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><h1 id="initializers"><a href="#initializers" class="headerlink" title="initializers"></a>initializers</h1><h2 id="connectToDb-go"><a href="#connectToDb-go" class="headerlink" title="connectToDb.go"></a>connectToDb.go</h2><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> initializers<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"gorm.io/driver/sqlite"</span> <span class="token comment" spellcheck="true">// 基于 GGO 的 Sqlite 驱动</span>    <span class="token comment" spellcheck="true">// "github.com/glebarez/sqlite" // 纯 Go 实现的 SQLite 驱动, 详情参考： https://github.com/glebarez/sqlite</span>    <span class="token string">"gorm.io/gorm"</span><span class="token punctuation">)</span><span class="token keyword">var</span> DB <span class="token operator">*</span>gorm<span class="token punctuation">.</span>DB<span class="token keyword">func</span> <span class="token function">ConnectToDb</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> err <span class="token builtin">error</span>    <span class="token comment" spellcheck="true">// github.com/mattn/go-sqlite3</span>    DB<span class="token punctuation">,</span> err <span class="token operator">=</span> gorm<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>sqlite<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">"jwt-go.db"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>gorm<span class="token punctuation">.</span>Config<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        <span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">"fail to connect to database"</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="loadEnvVariables-go"><a href="#loadEnvVariables-go" class="headerlink" title="loadEnvVariables.go"></a>loadEnvVariables.go</h2><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> initializers<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"log"</span>    <span class="token string">"github.com/joho/godotenv"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">LoadEnvVariables</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    err <span class="token operator">:=</span> godotenv<span class="token punctuation">.</span><span class="token function">Load</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="syncDatabase-go"><a href="#syncDatabase-go" class="headerlink" title="syncDatabase.go"></a>syncDatabase.go</h2><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> initializers<span class="token keyword">import</span> <span class="token string">"jwt-go-system/models"</span><span class="token keyword">func</span> <span class="token function">SyncDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 创建表</span>    DB<span class="token punctuation">.</span><span class="token function">AutoMigrate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>models<span class="token punctuation">.</span>User<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><h1 id="middleware"><a href="#middleware" class="headerlink" title="middleware"></a>middleware</h1><h2 id="cors-go"><a href="#cors-go" class="headerlink" title="cors.go"></a>cors.go</h2><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> middleware<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"net/http"</span>    <span class="token string">"github.com/gin-gonic/gin"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//解决跨域问题</span><span class="token keyword">func</span> <span class="token function">Core</span><span class="token punctuation">(</span><span class="token punctuation">)</span> gin<span class="token punctuation">.</span>HandlerFunc <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>        method <span class="token operator">:=</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Method        <span class="token comment" spellcheck="true">// axios跨域必须origin一致,而不是*</span>        origin <span class="token operator">:=</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">"Origin"</span><span class="token punctuation">)</span>        c<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Allow-Origin"</span><span class="token punctuation">,</span> origin<span class="token punctuation">)</span>        c<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Allow-Headers"</span><span class="token punctuation">,</span> <span class="token string">"*"</span><span class="token punctuation">)</span>        c<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Allow-Methods"</span><span class="token punctuation">,</span> <span class="token string">"*"</span><span class="token punctuation">)</span>        c<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Expose-Headers"</span><span class="token punctuation">,</span> <span class="token string">"Content-Length,Access-Control-Allow-Origin,Access-Control-Allow-Headers,Content-Type"</span><span class="token punctuation">)</span>        c<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Max-Age"</span><span class="token punctuation">,</span> <span class="token string">"3600"</span><span class="token punctuation">)</span>        c<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Allow-Credentials"</span><span class="token punctuation">,</span> <span class="token string">"true"</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">//放行索引options</span>        <span class="token keyword">if</span> method <span class="token operator">==</span> <span class="token string">"OPTIONS"</span> <span class="token punctuation">{</span>            c<span class="token punctuation">.</span><span class="token function">AbortWithStatus</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusNoContent<span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//处理请求</span>        c<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="requireAuth-go"><a href="#requireAuth-go" class="headerlink" title="requireAuth.go"></a>requireAuth.go</h2><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> middleware<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"fmt"</span>     <span class="token string">"jwt-go-system/initializers"</span>    <span class="token string">"jwt-go-system/models"</span>    <span class="token string">"net/http"</span>    <span class="token string">"os"</span>    <span class="token string">"time"</span>    <span class="token string">"github.com/gin-gonic/gin"</span>    <span class="token string">"github.com/golang-jwt/jwt/v4"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">RequireAuth</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 获取token</span>    tokenStr<span class="token punctuation">,</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Cookie</span><span class="token punctuation">(</span><span class="token string">"Authorization"</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        c<span class="token punctuation">.</span><span class="token function">AbortWithStatus</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusUnauthorized<span class="token punctuation">)</span>    <span class="token punctuation">}</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>tokenStr<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 验证token</span>    token<span class="token punctuation">,</span> err <span class="token operator">:=</span> jwt<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>tokenStr<span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>token <span class="token operator">*</span>jwt<span class="token punctuation">.</span>Token<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> ok <span class="token operator">:=</span> token<span class="token punctuation">.</span>Method<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>jwt<span class="token punctuation">.</span>SigningMethodHMAC<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"Unexpected signing method: %v"</span><span class="token punctuation">,</span> token<span class="token punctuation">.</span>Header<span class="token punctuation">[</span><span class="token string">"alg"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span><span class="token function">Getenv</span><span class="token punctuation">(</span><span class="token string">"SECRET"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> cliams<span class="token punctuation">,</span> ok <span class="token operator">:=</span> token<span class="token punctuation">.</span>Claims<span class="token punctuation">.</span><span class="token punctuation">(</span>jwt<span class="token punctuation">.</span>MapClaims<span class="token punctuation">)</span><span class="token punctuation">;</span> ok <span class="token operator">&amp;&amp;</span> token<span class="token punctuation">.</span>Valid <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 过期</span>        <span class="token keyword">if</span> <span class="token function">float64</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Unix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">></span> cliams<span class="token punctuation">[</span><span class="token string">"exp"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">float64</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            c<span class="token punctuation">.</span><span class="token function">AbortWithStatus</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusUnauthorized<span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 根据jwt携带消息(userId)查询数据库</span>        <span class="token keyword">var</span> user models<span class="token punctuation">.</span>User        initializers<span class="token punctuation">.</span>DB<span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">,</span> cliams<span class="token punctuation">[</span><span class="token string">"sub"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> user<span class="token punctuation">.</span>ID <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>            c<span class="token punctuation">.</span><span class="token function">AbortWithStatus</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusUnauthorized<span class="token punctuation">)</span>        <span class="token punctuation">}</span>        c<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>        c<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        c<span class="token punctuation">.</span><span class="token function">AbortWithStatus</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusUnauthorized<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h1 id="models"><a href="#models" class="headerlink" title="models"></a>models</h1><h2 id="userModels-go"><a href="#userModels-go" class="headerlink" title="userModels.go"></a>userModels.go</h2><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> models<span class="token keyword">import</span> <span class="token string">"gorm.io/gorm"</span><span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>    gorm<span class="token punctuation">.</span>Model    Email    <span class="token builtin">string</span> <span class="token string">`gorm:"unique"`</span>    Password <span class="token builtin">string</span><span class="token punctuation">}</span></code></pre><h1 id="env"><a href="#env" class="headerlink" title=".env"></a>.env</h1><pre class=" language-env"><code class="language-env">PORT=3000SECRET=8d6f7b7d-2f24-4867-ae90-feb4fc646693</code></pre><h1 id="main-go"><a href="#main-go" class="headerlink" title="main.go"></a>main.go</h1><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"jwt-go-system/controllers"</span>    <span class="token string">"jwt-go-system/initializers"</span>    <span class="token string">"jwt-go-system/middleware"</span>    <span class="token string">"github.com/gin-gonic/gin"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 加载env文件里的变量</span>    initializers<span class="token punctuation">.</span><span class="token function">LoadEnvVariables</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 链接数据库</span>    initializers<span class="token punctuation">.</span><span class="token function">ConnectToDb</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 建表</span>    initializers<span class="token punctuation">.</span><span class="token function">SyncDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span>middleware<span class="token punctuation">.</span><span class="token function">Core</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/signup"</span><span class="token punctuation">,</span> middleware<span class="token punctuation">.</span><span class="token function">Core</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> controllers<span class="token punctuation">.</span>Signup<span class="token punctuation">)</span>    r<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/login"</span><span class="token punctuation">,</span> middleware<span class="token punctuation">.</span><span class="token function">Core</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> controllers<span class="token punctuation">.</span>Login<span class="token punctuation">)</span>    r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/validate"</span><span class="token punctuation">,</span> middleware<span class="token punctuation">.</span><span class="token function">Core</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> middleware<span class="token punctuation">.</span>RequireAuth<span class="token punctuation">,</span> controllers<span class="token punctuation">.</span>Validate<span class="token punctuation">)</span>    r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":3000"</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><h1 id="gin中间件请求该认证服务器进行认证"><a href="#gin中间件请求该认证服务器进行认证" class="headerlink" title="gin中间件请求该认证服务器进行认证"></a>gin中间件请求该认证服务器进行认证</h1><pre class=" language-go"><code class="language-go"><span class="token comment" spellcheck="true">// 权限认证(验证token) -> 请求服务器</span><span class="token keyword">func</span> <span class="token function">TokenValid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> gin<span class="token punctuation">.</span>HandlerFunc <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>        url <span class="token operator">:=</span> <span class="token string">"http://127.0.0.1:3000/validate"</span>        req<span class="token punctuation">,</span> err <span class="token operator">:=</span> http<span class="token punctuation">.</span><span class="token function">NewRequest</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>MethodGet<span class="token punctuation">,</span> url<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"TestGetReq http.NewRequest err:"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>            c<span class="token punctuation">.</span><span class="token function">AbortWithStatus</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusUnauthorized<span class="token punctuation">)</span>        <span class="token punctuation">}</span>        token<span class="token punctuation">,</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Cookie</span><span class="token punctuation">(</span><span class="token string">"Authorization"</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODUzNjA5NjksInN1YiI6NH0.K2kE3Gjp1OW96XBevTkC6tFPWkskhm02WiCeTGEEOAo</span>        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"token: "</span><span class="token punctuation">,</span> token<span class="token punctuation">)</span>        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Get token error:"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>            c<span class="token punctuation">.</span><span class="token function">AbortWithStatus</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusUnauthorized<span class="token punctuation">)</span>        <span class="token punctuation">}</span>        c1 <span class="token operator">:=</span> http<span class="token punctuation">.</span>Cookie<span class="token punctuation">{</span>            Name<span class="token punctuation">:</span>     <span class="token string">"Authorization"</span><span class="token punctuation">,</span>            Value<span class="token punctuation">:</span>    token<span class="token punctuation">,</span>            HttpOnly<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span>        req<span class="token punctuation">.</span><span class="token function">AddCookie</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>c1<span class="token punctuation">)</span>        client <span class="token operator">:=</span> <span class="token operator">&amp;</span>http<span class="token punctuation">.</span>Client<span class="token punctuation">{</span>Timeout<span class="token punctuation">:</span> <span class="token number">5</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">}</span> <span class="token comment" spellcheck="true">// 设置请求超时时长5s</span>        resp<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">Do</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span>        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"TestGetReq http.DefaultClient.Do() err: "</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>            c<span class="token punctuation">.</span><span class="token function">AbortWithStatus</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusUnauthorized<span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token keyword">defer</span> resp<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// 如果认证失败</span>        <span class="token keyword">if</span> resp<span class="token punctuation">.</span>StatusCode <span class="token operator">==</span> http<span class="token punctuation">.</span>StatusUnauthorized <span class="token punctuation">{</span>            c<span class="token punctuation">.</span><span class="token function">AbortWithStatus</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusUnauthorized<span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//处理请求</span>        c<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> golang </category>
          
          <category> jwt </category>
          
          <category> 认证 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> golang </tag>
            
            <tag> jwt </tag>
            
            <tag> 认证 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>构建简单crud(没有操作数据库)</title>
      <link href="/2023/04/30/backend/golang/learn-go-programming-by-building-11-projects-full-course/2/2-build-a-crud-api-with-golang/"/>
      <url>/2023/04/30/backend/golang/learn-go-programming-by-building-11-projects-full-course/2/2-build-a-crud-api-with-golang/</url>
      
        <content type="html"><![CDATA[<p><img src="image.png"></p><pre class=" language-go"><code class="language-go"><span class="token keyword">go</span> mod init movie_crud<span class="token keyword">go</span> get <span class="token string">"github.com/gorilla/mux"</span></code></pre><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> main <span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"encoding/json"</span>    <span class="token string">"fmt"</span>    <span class="token string">"log"</span>    <span class="token string">"math/rand"</span>    <span class="token string">"net/http"</span>    <span class="token string">"strconv"</span>     <span class="token string">"github.com/gorilla/mux"</span><span class="token punctuation">)</span> <span class="token keyword">type</span> Movie <span class="token keyword">struct</span> <span class="token punctuation">{</span>    ID       <span class="token builtin">string</span>    <span class="token string">`json:"id"`</span>    Isbn     <span class="token builtin">string</span>    <span class="token string">`json:"isbn"`</span>    Title    <span class="token builtin">string</span>    <span class="token string">`json:"title"`</span>    Director <span class="token operator">*</span>Director <span class="token string">`json:"director"`</span><span class="token punctuation">}</span><span class="token keyword">type</span> Director <span class="token keyword">struct</span> <span class="token punctuation">{</span>    FirstName <span class="token builtin">string</span> <span class="token string">`json:"firstname"`</span>    LastName  <span class="token builtin">string</span> <span class="token string">`json:"lastname"`</span><span class="token punctuation">}</span> <span class="token keyword">var</span> movies <span class="token punctuation">[</span><span class="token punctuation">]</span>Movie <span class="token keyword">func</span> <span class="token function">getMovies</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>    w<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">"Content-Type"</span><span class="token punctuation">,</span> <span class="token string">"application/json"</span><span class="token punctuation">)</span>    json<span class="token punctuation">.</span><span class="token function">NewEncoder</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Encode</span><span class="token punctuation">(</span>movies<span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token keyword">func</span> <span class="token function">getMovie</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>    w<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">"Content-Type"</span><span class="token punctuation">,</span> <span class="token string">"application/json"</span><span class="token punctuation">)</span>    params <span class="token operator">:=</span> mux<span class="token punctuation">.</span><span class="token function">Vars</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span>    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> item <span class="token operator">:=</span> <span class="token keyword">range</span> movies <span class="token punctuation">{</span>        <span class="token keyword">if</span> item<span class="token punctuation">.</span>ID <span class="token operator">==</span> params<span class="token punctuation">[</span><span class="token string">"id"</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>            json<span class="token punctuation">.</span><span class="token function">NewEncoder</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Encode</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>            <span class="token keyword">return</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token keyword">func</span> <span class="token function">createMovie</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>    w<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">"Content-Type"</span><span class="token punctuation">,</span> <span class="token string">"application/json"</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> movie Movie    <span class="token comment" spellcheck="true">// 绑定json数据到movie结构体</span>    <span class="token boolean">_</span> <span class="token operator">=</span> json<span class="token punctuation">.</span><span class="token function">NewDecoder</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>Body<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Decode</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>movie<span class="token punctuation">)</span>    movie<span class="token punctuation">.</span>ID <span class="token operator">=</span> strconv<span class="token punctuation">.</span><span class="token function">Itoa</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">Intn</span><span class="token punctuation">(</span><span class="token number">100000000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    movies <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>movies<span class="token punctuation">,</span> movie<span class="token punctuation">)</span>    json<span class="token punctuation">.</span><span class="token function">NewEncoder</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Encode</span><span class="token punctuation">(</span>movie<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">updateMovie</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>    w<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">"Content-Type"</span><span class="token punctuation">,</span> <span class="token string">"application/json"</span><span class="token punctuation">)</span>    params <span class="token operator">:=</span> mux<span class="token punctuation">.</span><span class="token function">Vars</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span>    <span class="token keyword">for</span> index<span class="token punctuation">,</span> item <span class="token operator">:=</span> <span class="token keyword">range</span> movies <span class="token punctuation">{</span>        <span class="token keyword">if</span> item<span class="token punctuation">.</span>ID <span class="token operator">==</span> params<span class="token punctuation">[</span><span class="token string">"id"</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 从0到index 拼接 从index+1到尾</span>            movies <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>movies<span class="token punctuation">[</span><span class="token punctuation">:</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span> movies<span class="token punctuation">[</span>index<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token operator">...</span><span class="token punctuation">)</span>            <span class="token keyword">var</span> movie Movie            <span class="token comment" spellcheck="true">// 绑定json数据到movie结构体</span>            <span class="token boolean">_</span> <span class="token operator">=</span> json<span class="token punctuation">.</span><span class="token function">NewDecoder</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>Body<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Decode</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>movie<span class="token punctuation">)</span>            movie<span class="token punctuation">.</span>ID <span class="token operator">=</span> strconv<span class="token punctuation">.</span><span class="token function">Itoa</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">Intn</span><span class="token punctuation">(</span><span class="token number">100000000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            movies <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>movies<span class="token punctuation">,</span> movie<span class="token punctuation">)</span>            json<span class="token punctuation">.</span><span class="token function">NewEncoder</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Encode</span><span class="token punctuation">(</span>movies<span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">deleteMovie</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>    w<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">"Content-Type"</span><span class="token punctuation">,</span> <span class="token string">"application/json"</span><span class="token punctuation">)</span>    params <span class="token operator">:=</span> mux<span class="token punctuation">.</span><span class="token function">Vars</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span>    <span class="token keyword">for</span> index<span class="token punctuation">,</span> item <span class="token operator">:=</span> <span class="token keyword">range</span> movies <span class="token punctuation">{</span>        <span class="token keyword">if</span> item<span class="token punctuation">.</span>ID <span class="token operator">==</span> params<span class="token punctuation">[</span><span class="token string">"id"</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 从0到index 拼接 从index+1到尾</span>            movies <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>movies<span class="token punctuation">[</span><span class="token punctuation">:</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span> movies<span class="token punctuation">[</span>index<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token operator">...</span><span class="token punctuation">)</span>            <span class="token keyword">break</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    json<span class="token punctuation">.</span><span class="token function">NewEncoder</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Encode</span><span class="token punctuation">(</span>movies<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    r <span class="token operator">:=</span> mux<span class="token punctuation">.</span><span class="token function">NewRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    movies <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>movies<span class="token punctuation">,</span> Movie<span class="token punctuation">{</span>ID<span class="token punctuation">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span> Isbn<span class="token punctuation">:</span> <span class="token string">"438227"</span><span class="token punctuation">,</span> Title<span class="token punctuation">:</span> <span class="token string">"Movie One"</span><span class="token punctuation">,</span>        Director<span class="token punctuation">:</span> <span class="token operator">&amp;</span>Director<span class="token punctuation">{</span>            FirstName<span class="token punctuation">:</span> <span class="token string">"john"</span><span class="token punctuation">,</span> LastName<span class="token punctuation">:</span> <span class="token string">"doe"</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    movies <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>movies<span class="token punctuation">,</span> Movie<span class="token punctuation">{</span>ID<span class="token punctuation">:</span> <span class="token string">"2"</span><span class="token punctuation">,</span> Isbn<span class="token punctuation">:</span> <span class="token string">"45445"</span><span class="token punctuation">,</span> Title<span class="token punctuation">:</span> <span class="token string">"Movie Two"</span><span class="token punctuation">,</span>        Director<span class="token punctuation">:</span> <span class="token operator">&amp;</span>Director<span class="token punctuation">{</span>            FirstName<span class="token punctuation">:</span> <span class="token string">"steve"</span><span class="token punctuation">,</span> LastName<span class="token punctuation">:</span> <span class="token string">"smith"</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">"/movies"</span><span class="token punctuation">,</span> getMovies<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Methods</span><span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">"/movies/{id}"</span><span class="token punctuation">,</span> getMovie<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Methods</span><span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">"/movies"</span><span class="token punctuation">,</span> createMovie<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Methods</span><span class="token punctuation">(</span><span class="token string">"POST"</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">"/movies/{id}"</span><span class="token punctuation">,</span> updateMovie<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Methods</span><span class="token punctuation">(</span><span class="token string">"PUT"</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">"/movies/{id}"</span><span class="token punctuation">,</span> deleteMovie<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Methods</span><span class="token punctuation">(</span><span class="token string">"DELETE"</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"listening in port: 8000"</span><span class="token punctuation">)</span>    log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token string">":8000"</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> golang </category>
          
          <category> mux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> golang </tag>
            
            <tag> mux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>构建简单服务器</title>
      <link href="/2023/04/30/backend/golang/learn-go-programming-by-building-11-projects-full-course/1/1-build-a-simple-web-server-with-golang/"/>
      <url>/2023/04/30/backend/golang/learn-go-programming-by-building-11-projects-full-course/1/1-build-a-simple-web-server-with-golang/</url>
      
        <content type="html"><![CDATA[<p><img src="image.png"></p><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"fmt"</span>    <span class="token string">"log"</span>    <span class="token string">"net/http"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">formHandler</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> err <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">ParseForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        fmt<span class="token punctuation">.</span><span class="token function">Fprintf</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> <span class="token string">"ParseForm() err: %v"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">}</span>    fmt<span class="token punctuation">.</span><span class="token function">Fprintf</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> <span class="token string">"POST Request successful"</span><span class="token punctuation">)</span>    name <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">FormValue</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span>    address <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">FormValue</span><span class="token punctuation">(</span><span class="token string">"address"</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Fprintf</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> <span class="token string">"name = %s\n"</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Fprintf</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> <span class="token string">"address = %s\n"</span><span class="token punctuation">,</span> address<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">helloHandler</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> r<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path <span class="token operator">!=</span> <span class="token string">"/hello"</span> <span class="token punctuation">{</span>        http<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> <span class="token string">"404 not found"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>StatusNotFound<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> r<span class="token punctuation">.</span>Method <span class="token operator">!=</span> <span class="token string">"GET"</span> <span class="token punctuation">{</span>        http<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> <span class="token string">"method is not supported"</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>StatusMethodNotAllowed<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">}</span>    fmt<span class="token punctuation">.</span><span class="token function">Fprintf</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> <span class="token string">"Hello"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 静态资源</span>    fileServer <span class="token operator">:=</span> http<span class="token punctuation">.</span><span class="token function">FileServer</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span><span class="token function">Dir</span><span class="token punctuation">(</span><span class="token string">"./static"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    http<span class="token punctuation">.</span><span class="token function">Handle</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> fileServer<span class="token punctuation">)</span>    http<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">"/form"</span><span class="token punctuation">,</span> formHandler<span class="token punctuation">)</span>    http<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">"/hello"</span><span class="token punctuation">,</span> helloHandler<span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"listening on port 8080... \n"</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">:=</span> http<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>metaverse - 14 - input</title>
      <link href="/2023/04/30/frontend/react/building-the-metaverse-ultimate-react-three-fiber-course/14-input/14-input/"/>
      <url>/2023/04/30/frontend/react/building-the-metaverse-ultimate-react-three-fiber-course/14-input/14-input/</url>
      
        <content type="html"><![CDATA[<blockquote><p>用按键的方式 播放/暂停 动画</p><p>视频作者改变了目录结构</p></blockquote><p><img src="1682680734849.png" alt="1682680734849"></p><h2 id="gril-tsx"><a href="#gril-tsx" class="headerlink" title="gril.tsx"></a>gril.tsx</h2><pre class=" language-tsx"><code class="language-tsx">import * as THREE from "three";import React, { useEffect, useRef, useState } from "react";import { useGLTF, useAnimations } from "@react-three/drei";import { GLTF } from "three-stdlib";import { useInput } from "../hooks/useInput";const GrilModel = () => {    const { forward, backward, left, right, shift, jump } = useInput()    const model = useGLTF(        // GLTFLoader,        './models/gril.glb'    )    const { actions } = useAnimations(model.animations, model.scene)    // 缩放    model.scene.scale.set(0.8, 0.8, 0.8)    model.scene.traverse((obj) => {        if (obj.isMesh) {            obj.castShadow = true        }    })    const currentAction = useRef('')    useEffect(() => {        // actions?.jumping?.play();          let action = ''        if (forward || backward || left || right) {            action = 'walking'            if (shift) {                action = 'running'            }        } else if (jump) {            action = 'jumping'        } else {            action = 'idle'        }        // 如果动作改变了        if (currentAction.current != action) {            // 改变当前动作            const nextActionToPlay = actions[action]            const current = actions[currentAction.current]            current?.fadeOut(0.2)            nextActionToPlay?.reset().fadeIn(0.2).play()            currentAction.current = action        }    }, [forward, backward, left, right, shift, jump])    return <primitive object={model.scene} />}export default GrilModel</code></pre><h2 id="input-ts"><a href="#input-ts" class="headerlink" title="input.ts"></a>input.ts</h2><pre class=" language-ts"><code class="language-ts"><span class="token keyword">import</span> <span class="token punctuation">{</span> useEffect<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token keyword">export</span> <span class="token keyword">const</span> useInput <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> <span class="token punctuation">[</span>input<span class="token punctuation">,</span> setInput<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        forward<span class="token punctuation">:</span> <span class="token keyword">false</span><span class="token punctuation">,</span>        backward<span class="token punctuation">:</span> <span class="token keyword">false</span><span class="token punctuation">,</span>        left<span class="token punctuation">:</span> <span class="token keyword">false</span><span class="token punctuation">,</span>        right<span class="token punctuation">:</span> <span class="token keyword">false</span><span class="token punctuation">,</span>        shift<span class="token punctuation">:</span> <span class="token keyword">false</span><span class="token punctuation">,</span>        jump<span class="token punctuation">:</span> <span class="token keyword">false</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">const</span> keys <span class="token operator">=</span> <span class="token punctuation">{</span>        KeyW<span class="token punctuation">:</span> <span class="token string">'forward'</span><span class="token punctuation">,</span>        KeyS<span class="token punctuation">:</span> <span class="token string">'backward'</span><span class="token punctuation">,</span>        KeyA<span class="token punctuation">:</span> <span class="token string">'left'</span><span class="token punctuation">,</span>        KeyD<span class="token punctuation">:</span> <span class="token string">'right'</span><span class="token punctuation">,</span>        ShiftLeft<span class="token punctuation">:</span> <span class="token string">'shift'</span><span class="token punctuation">,</span>        Space<span class="token punctuation">:</span> <span class="token string">'jump'</span>    <span class="token punctuation">}</span>    <span class="token keyword">const</span> findKey <span class="token operator">=</span> <span class="token punctuation">(</span>key<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> keys<span class="token punctuation">[</span>key<span class="token punctuation">]</span>    <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token keyword">const</span> handleKeyDown <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 根据e.code找到input里对应的值->true</span>            <span class="token function">setInput</span><span class="token punctuation">(</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span>m<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token function">findKey</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>code<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token keyword">const</span> handleKeyUp <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            <span class="token function">setInput</span><span class="token punctuation">(</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span>m<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token function">findKey</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>code<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 按下按键会触发</span>        document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'keydown'</span><span class="token punctuation">,</span> handleKeyDown<span class="token punctuation">)</span>        document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'keyup'</span><span class="token punctuation">,</span> handleKeyUp<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// 回调</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            document<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">'keydown'</span><span class="token punctuation">,</span> handleKeyDown<span class="token punctuation">)</span>            document<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">'keyup'</span><span class="token punctuation">,</span> handleKeyUp<span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> input<span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> metaverse </category>
          
          <category> r3f </category>
          
          <category> threejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> threejs </tag>
            
            <tag> metaverse </tag>
            
            <tag> r3f </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go邮箱信息获取服务</title>
      <link href="/2023/04/30/backend/golang/learn-go-programming-by-building-11-projects-full-course/6/email-verifier-tool-with-golang/"/>
      <url>/2023/04/30/backend/golang/learn-go-programming-by-building-11-projects-full-course/6/email-verifier-tool-with-golang/</url>
      
        <content type="html"><![CDATA[<p><img src="1682692196502.png" alt="1682692196502"></p><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"bufio"</span>    <span class="token string">"fmt"</span>    <span class="token string">"log"</span>    <span class="token string">"net"</span>    <span class="token string">"os"</span>    <span class="token string">"strings"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    scanner <span class="token operator">:=</span> bufio<span class="token punctuation">.</span><span class="token function">NewScanner</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stdin<span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"domain,hasMX,hasSPF,spfRecord,hasDMARC,dmarcRecord\n"</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> scanner<span class="token punctuation">.</span><span class="token function">Scan</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">checkDomain</span><span class="token punctuation">(</span>scanner<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> err <span class="token operator">:=</span> scanner<span class="token punctuation">.</span><span class="token function">Err</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token string">"Error: could not read from input: %v\n"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">checkDomain</span><span class="token punctuation">(</span>domain <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// DKIM、DMARC 和 SPF 是维护电子邮件安全的三种主要机制。</span>    <span class="token comment" spellcheck="true">// 相关协议可让您防止未经授权的服务器作为您的域发送，并为收件人提供一种验证电子邮件确实来自您的方法。</span>    <span class="token keyword">var</span> hasMX<span class="token punctuation">,</span> hasSPF<span class="token punctuation">,</span> hasDMARC <span class="token builtin">bool</span>    <span class="token keyword">var</span> spfRecord<span class="token punctuation">,</span> dmarcRecord <span class="token builtin">string</span>    mxRecords<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">LookupMX</span><span class="token punctuation">(</span>domain<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"error: %v\n"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>mxRecords<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token punctuation">{</span>        hasMX <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token punctuation">}</span>    txtRecords<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">LookupTXT</span><span class="token punctuation">(</span>domain<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"error: %v\n"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> record <span class="token operator">:=</span> <span class="token keyword">range</span> txtRecords <span class="token punctuation">{</span>        <span class="token keyword">if</span> strings<span class="token punctuation">.</span><span class="token function">HasPrefix</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">"v=spf1"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            hasSPF <span class="token operator">=</span> <span class="token boolean">true</span>            spfRecord <span class="token operator">=</span> record            <span class="token keyword">break</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    dmarctxt <span class="token operator">:=</span> <span class="token string">"_dmarc."</span> <span class="token operator">+</span> domain    dmarcRecords<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">LookupTXT</span><span class="token punctuation">(</span>dmarctxt<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"error: %v\n"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> record <span class="token operator">:=</span> <span class="token keyword">range</span> dmarcRecords <span class="token punctuation">{</span>        <span class="token keyword">if</span> strings<span class="token punctuation">.</span><span class="token function">HasPrefix</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">"v=DMARC1"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            hasDMARC <span class="token operator">=</span> <span class="token boolean">true</span>            dmarcRecord <span class="token operator">=</span> record            <span class="token keyword">break</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"domain: %v\n hasMX: %v\n hasSPF: %v\n spfRecord: %v\n hasDMARC: %v\n dmarcRecord: %v\n"</span><span class="token punctuation">,</span>        domain<span class="token punctuation">,</span> hasMX<span class="token punctuation">,</span> hasSPF<span class="token punctuation">,</span> spfRecord<span class="token punctuation">,</span> hasDMARC<span class="token punctuation">,</span> dmarcRecord<span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> golang </category>
          
          <category> email </category>
          
      </categories>
      
      
        <tags>
            
            <tag> golang </tag>
            
            <tag> email </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go使用fiber实现CRM</title>
      <link href="/2023/04/30/backend/golang/learn-go-programming-by-building-11-projects-full-course/8/crm-with-golang-fiber/"/>
      <url>/2023/04/30/backend/golang/learn-go-programming-by-building-11-projects-full-course/8/crm-with-golang-fiber/</url>
      
        <content type="html"><![CDATA[<h1 id="install"><a href="#install" class="headerlink" title="install"></a>install</h1><pre class=" language-shell"><code class="language-shell">go get -u gorm.io/gormgo get -u gorm.io/driver/sqlite</code></pre><blockquote><p>技术选型: gorm(sqlite),go-fiber</p></blockquote><h1 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h1><p><img src="20230430151855.png"></p><h2 id="database-database-go"><a href="#database-database-go" class="headerlink" title="database/database.go"></a>database/database.go</h2><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> database<span class="token keyword">import</span> <span class="token punctuation">(</span>   <span class="token string">"gorm.io/gorm"</span> <span class="token punctuation">)</span><span class="token keyword">var</span> <span class="token punctuation">(</span>    DBConn <span class="token operator">*</span>gorm<span class="token punctuation">.</span>DB<span class="token punctuation">)</span></code></pre><h2 id="lead-lead-go"><a href="#lead-lead-go" class="headerlink" title="lead/lead.go"></a>lead/lead.go</h2><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> lead<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"errors"</span>    <span class="token string">"go_fiber_crm/database"</span>    <span class="token string">"github.com/gofiber/fiber/v2"</span>    <span class="token string">"gorm.io/gorm"</span><span class="token punctuation">)</span><span class="token keyword">type</span> Lead <span class="token keyword">struct</span> <span class="token punctuation">{</span>    gorm<span class="token punctuation">.</span>Model    Name    <span class="token builtin">string</span> <span class="token string">`json:"name"`</span>    Company <span class="token builtin">string</span> <span class="token string">`json:"company"`</span>    Email   <span class="token builtin">string</span> <span class="token string">`json:"email"`</span>    Phone   <span class="token builtin">int</span>    <span class="token string">`json:"phone"`</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">GetLead</span><span class="token punctuation">(</span>c <span class="token operator">*</span>fiber<span class="token punctuation">.</span>Ctx<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>    id <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Params</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span>    db <span class="token operator">:=</span> database<span class="token punctuation">.</span>DBConn    <span class="token keyword">var</span> lead Lead    db<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>lead<span class="token punctuation">,</span> id<span class="token punctuation">)</span>    c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>lead<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">GetLeads</span><span class="token punctuation">(</span>c <span class="token operator">*</span>fiber<span class="token punctuation">.</span>Ctx<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>    db <span class="token operator">:=</span> database<span class="token punctuation">.</span>DBConn    <span class="token keyword">var</span> leads <span class="token punctuation">[</span><span class="token punctuation">]</span>Lead    db<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>leads<span class="token punctuation">)</span>    c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>leads<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">NewLead</span><span class="token punctuation">(</span>c <span class="token operator">*</span>fiber<span class="token punctuation">.</span>Ctx<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>    db <span class="token operator">:=</span> database<span class="token punctuation">.</span>DBConn    <span class="token comment" spellcheck="true">// 在 golang 中 new 是另外一种创建变量的方式。</span>    <span class="token comment" spellcheck="true">// 通过 new(T) 可以创建 T 类型的变量(这里 T 表示类型)</span>    <span class="token comment" spellcheck="true">// 初始值为 T 类型的零值，返回值为其地址(地址类型是 *T)。</span>    lead <span class="token operator">:=</span> <span class="token function">new</span><span class="token punctuation">(</span>Lead<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 返回指向类型的指针</span>    <span class="token keyword">if</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">BodyParser</span><span class="token punctuation">(</span>lead<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        c<span class="token punctuation">.</span><span class="token function">Status</span><span class="token punctuation">(</span><span class="token number">503</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SendString</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> err    <span class="token punctuation">}</span>    db<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>lead<span class="token punctuation">)</span>    c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>lead<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">UptLead</span><span class="token punctuation">(</span>c <span class="token operator">*</span>fiber<span class="token punctuation">.</span>Ctx<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>    id <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Params</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span>    db <span class="token operator">:=</span> database<span class="token punctuation">.</span>DBConn    <span class="token keyword">var</span> old Lead    db<span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>old<span class="token punctuation">,</span> id<span class="token punctuation">)</span>    <span class="token keyword">if</span> old<span class="token punctuation">.</span>Name <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">{</span>        c<span class="token punctuation">.</span><span class="token function">Status</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SendString</span><span class="token punctuation">(</span><span class="token string">"no lead found with ID"</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"no lead found with ID"</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 传过来要修改的数据</span>    newLead <span class="token operator">:=</span> <span class="token function">new</span><span class="token punctuation">(</span>Lead<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">BodyParser</span><span class="token punctuation">(</span>newLead<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        c<span class="token punctuation">.</span><span class="token function">Status</span><span class="token punctuation">(</span><span class="token number">503</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SendString</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> err    <span class="token punctuation">}</span>    <span class="token keyword">if</span> newLead<span class="token punctuation">.</span>Name <span class="token operator">!=</span> <span class="token string">""</span> <span class="token punctuation">{</span>        old<span class="token punctuation">.</span>Name <span class="token operator">=</span> newLead<span class="token punctuation">.</span>Name    <span class="token punctuation">}</span>    <span class="token keyword">if</span> newLead<span class="token punctuation">.</span>Company <span class="token operator">!=</span> <span class="token string">""</span> <span class="token punctuation">{</span>        old<span class="token punctuation">.</span>Company <span class="token operator">=</span> newLead<span class="token punctuation">.</span>Company    <span class="token punctuation">}</span>    <span class="token keyword">if</span> newLead<span class="token punctuation">.</span>Email <span class="token operator">!=</span> <span class="token string">""</span> <span class="token punctuation">{</span>        old<span class="token punctuation">.</span>Email <span class="token operator">=</span> newLead<span class="token punctuation">.</span>Email    <span class="token punctuation">}</span>    <span class="token keyword">if</span> newLead<span class="token punctuation">.</span>Phone <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">{</span>        old<span class="token punctuation">.</span>Phone <span class="token operator">=</span> newLead<span class="token punctuation">.</span>Phone    <span class="token punctuation">}</span>    db<span class="token punctuation">.</span><span class="token function">Save</span><span class="token punctuation">(</span>old<span class="token punctuation">)</span>    c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>old<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">DeleteLead</span><span class="token punctuation">(</span>c <span class="token operator">*</span>fiber<span class="token punctuation">.</span>Ctx<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>    id <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Params</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span>    db <span class="token operator">:=</span> database<span class="token punctuation">.</span>DBConn    <span class="token keyword">var</span> lead Lead    db<span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>lead<span class="token punctuation">,</span> id<span class="token punctuation">)</span>    <span class="token keyword">if</span> lead<span class="token punctuation">.</span>Name <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">{</span>        c<span class="token punctuation">.</span><span class="token function">Status</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SendString</span><span class="token punctuation">(</span><span class="token string">"no lead found with ID"</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"no lead found with ID"</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    db<span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>lead<span class="token punctuation">)</span>    c<span class="token punctuation">.</span><span class="token function">SendString</span><span class="token punctuation">(</span><span class="token string">"lead successfully deleted"</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">}</span></code></pre><h2 id="main-go"><a href="#main-go" class="headerlink" title="main.go"></a>main.go</h2><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"fmt"</span>    <span class="token string">"go_fiber_crm/database"</span>    <span class="token string">"go_fiber_crm/lead"</span>    <span class="token string">"github.com/gofiber/fiber/v2"</span>    <span class="token string">"gorm.io/driver/sqlite"</span>    <span class="token string">"gorm.io/gorm"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">setupRoutes</span><span class="token punctuation">(</span>app <span class="token operator">*</span>fiber<span class="token punctuation">.</span>App<span class="token punctuation">)</span> <span class="token punctuation">{</span>    api <span class="token operator">:=</span> app<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">"/api"</span><span class="token punctuation">)</span>    v1 <span class="token operator">:=</span> api<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">"/v1"</span><span class="token punctuation">)</span>    v1<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">"/lead"</span><span class="token punctuation">,</span> lead<span class="token punctuation">.</span>GetLeads<span class="token punctuation">)</span>    v1<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">"/lead/:id"</span><span class="token punctuation">,</span> lead<span class="token punctuation">.</span>GetLead<span class="token punctuation">)</span>    v1<span class="token punctuation">.</span><span class="token function">Post</span><span class="token punctuation">(</span><span class="token string">"/lead"</span><span class="token punctuation">,</span> lead<span class="token punctuation">.</span>NewLead<span class="token punctuation">)</span>    v1<span class="token punctuation">.</span><span class="token function">Put</span><span class="token punctuation">(</span><span class="token string">"/lead/:id"</span><span class="token punctuation">,</span>lead<span class="token punctuation">.</span>UptLead<span class="token punctuation">)</span>    v1<span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span><span class="token string">"/lead/:id"</span><span class="token punctuation">,</span> lead<span class="token punctuation">.</span>DeleteLead<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">initDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> err <span class="token builtin">error</span>    database<span class="token punctuation">.</span>DBConn<span class="token punctuation">,</span> err <span class="token operator">=</span> gorm<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>sqlite<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">"leads.db"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>gorm<span class="token punctuation">.</span>Config<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        <span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">"failed to open database"</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"connect to database"</span><span class="token punctuation">)</span>    database<span class="token punctuation">.</span>DBConn<span class="token punctuation">.</span><span class="token function">AutoMigrate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>lead<span class="token punctuation">.</span>Lead<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"database migrated"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    app <span class="token operator">:=</span> fiber<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">initDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">setupRoutes</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span>    app<span class="token punctuation">.</span><span class="token function">Listen</span><span class="token punctuation">(</span><span class="token string">":3000"</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// defer database.DBConn.Close()</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> golang </category>
          
          <category> go-fiber </category>
          
          <category> CRM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> golang </tag>
            
            <tag> go-fiber </tag>
            
            <tag> CRM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>metaverse - 15 - player controller</title>
      <link href="/2023/04/30/frontend/react/building-the-metaverse-ultimate-react-three-fiber-course/15-player-controller/15-player-controller/"/>
      <url>/2023/04/30/frontend/react/building-the-metaverse-ultimate-react-three-fiber-course/15-player-controller/15-player-controller/</url>
      
        <content type="html"><![CDATA[<blockquote><p>真正地移动角色</p></blockquote><pre class=" language-tsx"><code class="language-tsx">import * as THREE from "three";import React, { useEffect, useRef, useState } from "react";import { useGLTF, useAnimations, OrbitControls } from "@react-three/drei";import { useInput } from "../hooks/useInput";import { useFrame, useThree } from "@react-three/fiber";let walkDirection = new THREE.Vector3()let rotateAngle = new THREE.Vector3(0, 1, 0)let rotateQuarternion = new THREE.Quaternion()let cameraTarget = new THREE.Vector3()// 对角移动const directionOffset = ({ forward, backward, left, right }) => {    var directionOffset = 0    if (forward) {        // 向前+向左 -> 对角线移动        if (left) {            directionOffset = Math.PI / 4 // w+a        } else if (right) {            directionOffset = -Math.PI / 4        }    } else if (backward) {        if (left) {            directionOffset = Math.PI / 4 + Math.PI / 2        } else if (right) {            directionOffset = -Math.PI / 4 - Math.PI / 2        } else {            directionOffset = Math.PI        }    } else if (left) {        directionOffset = Math.PI / 2    } else if (right) {        directionOffset = -Math.PI / 2    }    return directionOffset}type props = {    modelName: string}const Model: React.FC<props> = ({ modelName }) => {    const { forward, backward, left, right, shift, jump } = useInput()    const name = modelName ? modelName : 'gril'    const model = useGLTF(        // GLTFLoader,        './models/' + name + '.glb'    )     const { actions } = useAnimations(model.animations, model.scene)    // 缩放    model.scene.scale.set(0.8, 0.8, 0.8)    model.scene.traverse((obj) => {        if (obj.isMesh) {            obj.castShadow = true        }    })    // 当前动画    const currentAction = useRef('')    // 控制器    const controlsRef = useRef<typeof OrbitControls>()    // 相机    const camera = useThree((state) => state.camera)    // 更新相机的方法    const updateCameraTarget = (moveX: number, moveZ: number) => {        // move camera         camera.position.x += moveX        camera.position.z += moveZ        // update camera target        cameraTarget.x = model.scene.position.x        cameraTarget.y = model.scene.position.y + 2        cameraTarget.z = model.scene.position.z        if (controlsRef.current) controlsRef.current.target = cameraTarget    }    useEffect(() => {        // actions?.jumping?.play();          let action = ''        if (forward || backward || left || right) {            action = 'walking'            if (shift) {                action = 'running'            }        } else if (jump) {            action = 'jumping'        } else {            action = 'idel'        }        // 如果动作改变了        if (currentAction.current != action) {            // 改变当前动作            const nextActionToPlay = actions[action]            const current = actions[currentAction.current]            current?.fadeOut(0.2)            nextActionToPlay?.reset().fadeIn(0.2).play()            currentAction.current = action        }    }, [forward, backward, left, right, shift, jump])    useFrame((state, delta) => {        // delta是单位时间        if (currentAction.current == 'running' || currentAction.current == 'walking') {            // 相机朝向            let angleYCameraDirection = Math.atan2(                camera.position.x - model.scene.position.x,                camera.position.z - model.scene.position.z,            )            // 对角移动            let newDirectionOffset = directionOffset({                forward,                backward,                left,                right            })            // 旋转模型            rotateQuarternion.setFromAxisAngle(                rotateAngle,                angleYCameraDirection + newDirectionOffset            )            model.scene.quaternion.rotateTowards(rotateQuarternion, 0.2)            // 计算方向            camera.getWorldDirection(walkDirection)            walkDirection.y = 0            walkDirection.normalize()            walkDirection.applyAxisAngle(rotateAngle, newDirectionOffset)            // 移动速度            const velocity = currentAction.current == 'running' ? 10 : 5            // 移动model和相机            const moveX = walkDirection.x * velocity * delta            const moveZ = walkDirection.z * velocity * delta            model.scene.position.x += moveX            model.scene.position.z += moveZ            updateCameraTarget(moveX, moveZ)        }    })    return (<>        <OrbitControls ref={controlsRef} />        <primitive object={model.scene} />    </>)}export default Model</code></pre><h2 id="如果模型是往方向跑-就去blender里调一下z-180"><a href="#如果模型是往方向跑-就去blender里调一下z-180" class="headerlink" title="如果模型是往方向跑, 就去blender里调一下z=180"></a>如果模型是往方向跑, 就去blender里调一下z=180</h2><p><img src="1682685756598.png" alt="1682685756598"></p>]]></content>
      
      
      <categories>
          
          <category> metaverse </category>
          
          <category> r3f </category>
          
          <category> threejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> threejs </tag>
            
            <tag> metaverse </tag>
            
            <tag> r3f </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go微服务网关 - 5</title>
      <link href="/2023/04/30/backend/golang/go-wei-fu-wu-wang-guan/5-hou-tai-guan-li-hou-duan/5-hou-tai-guan-li-hou-duan-1/"/>
      <url>/2023/04/30/backend/golang/go-wei-fu-wu-wang-guan/5-hou-tai-guan-li-hou-duan/5-hou-tai-guan-li-hou-duan-1/</url>
      
        <content type="html"><![CDATA[<p><img src="1682753295885.png" alt="1682753295885"></p><p><img src="1682753305611.png" alt="1682753305611"></p><p><img src="1682753312535.png" alt="1682753312535"></p><p><img src="1682753332483.png" alt="1682753332483"></p><p><img src="1682753346057.png" alt="1682753346057"></p><p><img src="1682753369931.png" alt="1682753369931"></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- phpMyAdmin SQL Dump</span><span class="token comment" spellcheck="true">-- version 4.7.0</span><span class="token comment" spellcheck="true">-- https://www.phpmyadmin.net/</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- Host: 127.0.0.1</span><span class="token comment" spellcheck="true">-- Generation Time: 2020-04-27 13:59:47</span><span class="token comment" spellcheck="true">-- 服务器版本： 5.6.25-log</span><span class="token comment" spellcheck="true">-- PHP Version: 7.0.18</span><span class="token keyword">SET</span> SQL_MODE <span class="token operator">=</span> <span class="token string">"NO_AUTO_VALUE_ON_ZERO"</span><span class="token punctuation">;</span><span class="token keyword">SET</span> AUTOCOMMIT <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span><span class="token keyword">SET</span> time_zone <span class="token operator">=</span> <span class="token string">"+00:00"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*!40101 SET NAMES utf8mb4 */</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- Database: `go_gateway`</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- --------------------------------------------------------</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- 表的结构 `gateway_admin`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>gateway_admin<span class="token punctuation">`</span> <span class="token punctuation">(</span>  <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'自增id'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>user_name<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'用户名'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>salt<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'盐'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>password<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'密码'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>create_at<span class="token punctuation">`</span> <span class="token keyword">datetime</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'1971-01-01 00:00:00'</span> <span class="token keyword">COMMENT</span> <span class="token string">'新增时间'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>update_at<span class="token punctuation">`</span> <span class="token keyword">datetime</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'1971-01-01 00:00:00'</span> <span class="token keyword">COMMENT</span> <span class="token string">'更新时间'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>is_delete<span class="token punctuation">`</span> <span class="token keyword">tinyint</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'0'</span> <span class="token keyword">COMMENT</span> <span class="token string">'是否删除'</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8 <span class="token keyword">COMMENT</span><span class="token operator">=</span><span class="token string">'管理员表'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- 转存表中的数据 `gateway_admin`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token punctuation">`</span>gateway_admin<span class="token punctuation">`</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>user_name<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>salt<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>password<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>create_at<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>update_at<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>is_delete<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'admin'</span><span class="token punctuation">,</span> <span class="token string">'admin'</span><span class="token punctuation">,</span> <span class="token string">'2823d896e9822c0833d41d4904f0c00756d718570fce49b9a379a62c804689d3'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-10 16:42:05'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-21 06:35:08'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- --------------------------------------------------------</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- 表的结构 `gateway_app`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>gateway_app<span class="token punctuation">`</span> <span class="token punctuation">(</span>  <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> UNSIGNED <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'自增id'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>app_id<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'租户id'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'租户名称'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>secret<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'密钥'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>white_ips<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'ip白名单，支持前缀匹配'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>qpd<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'0'</span> <span class="token keyword">COMMENT</span> <span class="token string">'日请求量限制'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>qps<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'0'</span> <span class="token keyword">COMMENT</span> <span class="token string">'每秒请求量限制'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>create_at<span class="token punctuation">`</span> <span class="token keyword">datetime</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'添加时间'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>update_at<span class="token punctuation">`</span> <span class="token keyword">datetime</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'更新时间'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>is_delete<span class="token punctuation">`</span> <span class="token keyword">tinyint</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'0'</span> <span class="token keyword">COMMENT</span> <span class="token string">'是否删除 1=删除'</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8 <span class="token keyword">COMMENT</span><span class="token operator">=</span><span class="token string">'网关租户表'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- 转存表中的数据 `gateway_app`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token punctuation">`</span>gateway_app<span class="token punctuation">`</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>app_id<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>secret<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>white_ips<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>qpd<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>qps<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>create_at<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>update_at<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>is_delete<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">31</span><span class="token punctuation">,</span> <span class="token string">'app_id_a'</span><span class="token punctuation">,</span> <span class="token string">'租户A'</span><span class="token punctuation">,</span> <span class="token string">'449441eb5e72dca9c42a12f3924ea3a2'</span><span class="token punctuation">,</span> <span class="token string">'white_ips'</span><span class="token punctuation">,</span> <span class="token number">100000</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">'2020-04-15 20:55:02'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-21 07:23:34'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token string">'app_id_b'</span><span class="token punctuation">,</span> <span class="token string">'租户B'</span><span class="token punctuation">,</span> <span class="token string">'8d7b11ec9be0e59a36b52f32366c09cb'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'2020-04-15 21:40:52'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-21 07:23:27'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">,</span> <span class="token string">'app_id'</span><span class="token punctuation">,</span> <span class="token string">'租户名称'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'2020-04-15 22:02:23'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-15 22:06:51'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">34</span><span class="token punctuation">,</span> <span class="token string">'app_id45'</span><span class="token punctuation">,</span> <span class="token string">'名称'</span><span class="token punctuation">,</span> <span class="token string">'07d980f8a49347523ee1d5c1c41aec02'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'2020-04-15 22:06:38'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-15 22:06:49'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- --------------------------------------------------------</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- 表的结构 `gateway_service_access_control`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>gateway_service_access_control<span class="token punctuation">`</span> <span class="token punctuation">(</span>  <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'自增主键'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>service_id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'0'</span> <span class="token keyword">COMMENT</span> <span class="token string">'服务id'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>open_auth<span class="token punctuation">`</span> <span class="token keyword">tinyint</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'0'</span> <span class="token keyword">COMMENT</span> <span class="token string">'是否开启权限 1=开启'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>black_list<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'黑名单ip'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>white_list<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'白名单ip'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>white_host_name<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'白名单主机'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>clientip_flow_limit<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'0'</span> <span class="token keyword">COMMENT</span> <span class="token string">'客户端ip限流'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>service_flow_limit<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'0'</span> <span class="token keyword">COMMENT</span> <span class="token string">'服务端限流'</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8 <span class="token keyword">COMMENT</span><span class="token operator">=</span><span class="token string">'网关权限控制表'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- 转存表中的数据 `gateway_service_access_control`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token punctuation">`</span>gateway_service_access_control<span class="token punctuation">`</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>service_id<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>open_auth<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>black_list<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>white_list<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>white_host_name<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>clientip_flow_limit<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>service_flow_limit<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">162</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">165</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">167</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">168</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'111.11'</span><span class="token punctuation">,</span> <span class="token string">'22.33'</span><span class="token punctuation">,</span> <span class="token string">'11.11'</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">169</span><span class="token punctuation">,</span> <span class="token number">41</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'111.11'</span><span class="token punctuation">,</span> <span class="token string">'22.33'</span><span class="token punctuation">,</span> <span class="token string">'11.11'</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">170</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'111.11'</span><span class="token punctuation">,</span> <span class="token string">'22.33'</span><span class="token punctuation">,</span> <span class="token string">'11.11'</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">171</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'111.11'</span><span class="token punctuation">,</span> <span class="token string">'22.33'</span><span class="token punctuation">,</span> <span class="token string">'11.11'</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">172</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">173</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">174</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">175</span><span class="token punctuation">,</span> <span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">176</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">177</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">178</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">179</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token punctuation">,</span> <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">181</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">182</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'127.0.0.3'</span><span class="token punctuation">,</span> <span class="token string">'127.0.0.2'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">183</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'127.0.0.2'</span><span class="token punctuation">,</span> <span class="token string">'127.0.0.1'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">184</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'192.168.1.0'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">185</span><span class="token punctuation">,</span> <span class="token number">57</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">'127.0.0.1,127.0.0.2'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">186</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">187</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'127.0.0.1'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">188</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">189</span><span class="token punctuation">,</span> <span class="token number">61</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- --------------------------------------------------------</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- 表的结构 `gateway_service_grpc_rule`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>gateway_service_grpc_rule<span class="token punctuation">`</span> <span class="token punctuation">(</span>  <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'自增主键'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>service_id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'0'</span> <span class="token keyword">COMMENT</span> <span class="token string">'服务id'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>port<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'0'</span> <span class="token keyword">COMMENT</span> <span class="token string">'端口'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>header_transfor<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'header转换支持增加(add)、删除(del)、修改(edit) 格式: add headname headvalue 多个逗号间隔'</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8 <span class="token keyword">COMMENT</span><span class="token operator">=</span><span class="token string">'网关路由匹配表'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- 转存表中的数据 `gateway_service_grpc_rule`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token punctuation">`</span>gateway_service_grpc_rule<span class="token punctuation">`</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>service_id<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>port<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>header_transfor<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">171</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">8009</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">172</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">8002</span><span class="token punctuation">,</span> <span class="token string">'add metadata1 datavalue,edit metadata2 datavalue2'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">173</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">,</span> <span class="token number">8012</span><span class="token punctuation">,</span> <span class="token string">'add meta_name meta_value'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- --------------------------------------------------------</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- 表的结构 `gateway_service_http_rule`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>gateway_service_http_rule<span class="token punctuation">`</span> <span class="token punctuation">(</span>  <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'自增主键'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>service_id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'服务id'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>rule_type<span class="token punctuation">`</span> <span class="token keyword">tinyint</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'0'</span> <span class="token keyword">COMMENT</span> <span class="token string">'匹配类型 0=url前缀url_prefix 1=域名domain '</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span><span class="token keyword">rule</span><span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'type=domain表示域名，type=url_prefix时表示url前缀'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>need_https<span class="token punctuation">`</span> <span class="token keyword">tinyint</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'0'</span> <span class="token keyword">COMMENT</span> <span class="token string">'支持https 1=支持'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>need_strip_uri<span class="token punctuation">`</span> <span class="token keyword">tinyint</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'0'</span> <span class="token keyword">COMMENT</span> <span class="token string">'启用strip_uri 1=启用'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>need_websocket<span class="token punctuation">`</span> <span class="token keyword">tinyint</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'0'</span> <span class="token keyword">COMMENT</span> <span class="token string">'是否支持websocket 1=支持'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>url_rewrite<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'url重写功能 格式：^/gatekeeper/test_service(.*) $1 多个逗号间隔'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>header_transfor<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'header转换支持增加(add)、删除(del)、修改(edit) 格式: add headname headvalue 多个逗号间隔'</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8 <span class="token keyword">COMMENT</span><span class="token operator">=</span><span class="token string">'网关路由匹配表'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- 转存表中的数据 `gateway_service_http_rule`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token punctuation">`</span>gateway_service_http_rule<span class="token punctuation">`</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>service_id<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>rule_type<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span><span class="token keyword">rule</span><span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>need_https<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>need_strip_uri<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>need_websocket<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>url_rewrite<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>header_transfor<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">165</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">168</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">170</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">171</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'/abc'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'^/abc $1'</span><span class="token punctuation">,</span> <span class="token string">'add head1 value1'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">172</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'/usr'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'^/afsaasf $1,^/afsaasf $1'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">173</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'www.test.com'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">174</span><span class="token punctuation">,</span> <span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'www.test.com'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">175</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'www.test.com'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">176</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'www.test.com'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">177</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'/test_http_service'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'^/test_http_service/abb/(.*) /test_http_service/bba/$1'</span><span class="token punctuation">,</span> <span class="token string">'add header_name header_value'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">178</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'test.com'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">'add headername headervalue'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">179</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'/test_strip_uri'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'^/aaa/(.*) /bbb/$1'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token punctuation">,</span> <span class="token number">61</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'/test_https_server'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- --------------------------------------------------------</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- 表的结构 `gateway_service_info`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>gateway_service_info<span class="token punctuation">`</span> <span class="token punctuation">(</span>  <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> UNSIGNED <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'自增主键'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>load_type<span class="token punctuation">`</span> <span class="token keyword">tinyint</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'0'</span> <span class="token keyword">COMMENT</span> <span class="token string">'负载类型 0=http 1=tcp 2=grpc'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>service_name<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'服务名称 6-128 数字字母下划线'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>service_desc<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'服务描述'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>create_at<span class="token punctuation">`</span> <span class="token keyword">datetime</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'1971-01-01 00:00:00'</span> <span class="token keyword">COMMENT</span> <span class="token string">'添加时间'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>update_at<span class="token punctuation">`</span> <span class="token keyword">datetime</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'1971-01-01 00:00:00'</span> <span class="token keyword">COMMENT</span> <span class="token string">'更新时间'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>is_delete<span class="token punctuation">`</span> <span class="token keyword">tinyint</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">'0'</span> <span class="token keyword">COMMENT</span> <span class="token string">'是否删除 1=删除'</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8 <span class="token keyword">COMMENT</span><span class="token operator">=</span><span class="token string">'网关基本信息表'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- 转存表中的数据 `gateway_service_info`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token punctuation">`</span>gateway_service_info<span class="token punctuation">`</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>load_type<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>service_name<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>service_desc<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>create_at<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>update_at<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>is_delete<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'websocket_test'</span><span class="token punctuation">,</span> <span class="token string">'websocket_test'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-13 01:31:47'</span><span class="token punctuation">,</span> <span class="token string">'1971-01-01 00:00:00'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'test_grpc'</span><span class="token punctuation">,</span> <span class="token string">'test_grpc'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-13 01:34:32'</span><span class="token punctuation">,</span> <span class="token string">'1971-01-01 00:00:00'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'test_httpe'</span><span class="token punctuation">,</span> <span class="token string">'test_httpe'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-11 21:12:48'</span><span class="token punctuation">,</span> <span class="token string">'1971-01-01 00:00:00'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'service_name'</span><span class="token punctuation">,</span> <span class="token string">'11111'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-15 07:49:45'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-11 23:59:39'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">41</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'service_name_tcp'</span><span class="token punctuation">,</span> <span class="token string">'11111'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-13 01:38:01'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-12 01:06:09'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'service_name_tcp2'</span><span class="token punctuation">,</span> <span class="token string">'11111'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-13 01:38:06'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-12 01:13:24'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'service_name_tcp4'</span><span class="token punctuation">,</span> <span class="token string">'service_name_tcp4'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-15 07:49:44'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-12 01:13:50'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'websocket_service'</span><span class="token punctuation">,</span> <span class="token string">'websocket_service'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-15 07:49:43'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-13 01:20:08'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'tcp_service'</span><span class="token punctuation">,</span> <span class="token string">'tcp_desc'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-15 07:49:41'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-13 01:46:27'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'grpc_service'</span><span class="token punctuation">,</span> <span class="token string">'grpc_desc'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-13 01:54:12'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-13 01:53:14'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'testsefsafs'</span><span class="token punctuation">,</span> <span class="token string">'werrqrr'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-13 01:59:14'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-13 01:57:49'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'testsefsafs1'</span><span class="token punctuation">,</span> <span class="token string">'werrqrr'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-13 01:59:11'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-13 01:58:14'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'testsefsafs1222'</span><span class="token punctuation">,</span> <span class="token string">'werrqrr'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-13 01:59:08'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-13 01:58:23'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'grpc_service_name'</span><span class="token punctuation">,</span> <span class="token string">'grpc_service_desc'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-15 07:49:40'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-13 02:01:00'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'gresafsf'</span><span class="token punctuation">,</span> <span class="token string">'wesfsf'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-15 07:49:39'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-13 02:01:57'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'gresafsf11'</span><span class="token punctuation">,</span> <span class="token string">'wesfsf'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-13 02:03:41'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-13 02:02:55'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'tewrqrw111'</span><span class="token punctuation">,</span> <span class="token string">'123313'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-13 02:03:38'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-13 02:03:20'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'test_grpc_service1'</span><span class="token punctuation">,</span> <span class="token string">'test_grpc_service1'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-15 07:49:37'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-15 07:38:43'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'test_tcp_service1'</span><span class="token punctuation">,</span> <span class="token string">'redis服务代理'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-15 07:49:35'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-15 07:46:35'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'test_http_service'</span><span class="token punctuation">,</span> <span class="token string">'测试HTTP代理'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-16 00:54:45'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-15 07:55:07'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">57</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'test_tcp_service'</span><span class="token punctuation">,</span> <span class="token string">'测试TCP代理'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-19 14:03:09'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-15 07:58:39'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">58</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'test_grpc_service'</span><span class="token punctuation">,</span> <span class="token string">'测试GRPC服务'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-21 07:20:16'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-15 07:59:46'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'test.com:8080'</span><span class="token punctuation">,</span> <span class="token string">'测试域名接入'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-18 22:54:14'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-18 20:29:13'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'test_strip_uri'</span><span class="token punctuation">,</span> <span class="token string">'测试路径接入'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-21 06:55:26'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-18 22:56:37'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">61</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'test_https_server'</span><span class="token punctuation">,</span> <span class="token string">'测试https服务'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-19 12:22:33'</span><span class="token punctuation">,</span> <span class="token string">'2020-04-19 12:17:04'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- --------------------------------------------------------</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- 表的结构 `gateway_service_load_balance`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>gateway_service_load_balance<span class="token punctuation">`</span> <span class="token punctuation">(</span>  <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'自增主键'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>service_id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'0'</span> <span class="token keyword">COMMENT</span> <span class="token string">'服务id'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>check_method<span class="token punctuation">`</span> <span class="token keyword">tinyint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'0'</span> <span class="token keyword">COMMENT</span> <span class="token string">'检查方法 0=tcpchk,检测端口是否握手成功'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>check_timeout<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'0'</span> <span class="token keyword">COMMENT</span> <span class="token string">'check超时时间,单位s'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>check_interval<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'0'</span> <span class="token keyword">COMMENT</span> <span class="token string">'检查间隔, 单位s'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>round_type<span class="token punctuation">`</span> <span class="token keyword">tinyint</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'2'</span> <span class="token keyword">COMMENT</span> <span class="token string">'轮询方式 0=random 1=round-robin 2=weight_round-robin 3=ip_hash'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>ip_list<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'ip列表'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>weight_list<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'权重列表'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>forbid_list<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span> <span class="token keyword">COMMENT</span> <span class="token string">'禁用ip列表'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>upstream_connect_timeout<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'0'</span> <span class="token keyword">COMMENT</span> <span class="token string">'建立连接超时, 单位s'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>upstream_header_timeout<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'0'</span> <span class="token keyword">COMMENT</span> <span class="token string">'获取header超时, 单位s'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>upstream_idle_timeout<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'0'</span> <span class="token keyword">COMMENT</span> <span class="token string">'链接最大空闲时间, 单位s'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>upstream_max_idle<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'0'</span> <span class="token keyword">COMMENT</span> <span class="token string">'最大空闲链接数'</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8 <span class="token keyword">COMMENT</span><span class="token operator">=</span><span class="token string">'网关负载表'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- 转存表中的数据 `gateway_service_load_balance`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token punctuation">`</span>gateway_service_load_balance<span class="token punctuation">`</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>service_id<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>check_method<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>check_timeout<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>check_interval<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>round_type<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>ip_list<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>weight_list<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>forbid_list<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>upstream_connect_timeout<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>upstream_header_timeout<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>upstream_idle_timeout<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>upstream_max_idle<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">162</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'127.0.0.1:50051'</span><span class="token punctuation">,</span> <span class="token string">'100'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">165</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'100.90.164.31:8072,100.90.163.51:8072,100.90.163.52:8072,100.90.165.32:8072'</span><span class="token punctuation">,</span> <span class="token string">'50,50,50,80'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">20000</span><span class="token punctuation">,</span> <span class="token number">20000</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">167</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'100.90.164.31:8072,100.90.163.51:8072,100.90.163.52:8072,100.90.165.32:8072'</span><span class="token punctuation">,</span> <span class="token string">'50,50,50,80'</span><span class="token punctuation">,</span> <span class="token string">'100.90.164.31:8072,100.90.163.51:8072'</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">168</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'111:111,22:111'</span><span class="token punctuation">,</span> <span class="token string">'11,11'</span><span class="token punctuation">,</span> <span class="token string">'111'</span><span class="token punctuation">,</span> <span class="token number">1111</span><span class="token punctuation">,</span> <span class="token number">111</span><span class="token punctuation">,</span> <span class="token number">222</span><span class="token punctuation">,</span> <span class="token number">333</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">169</span><span class="token punctuation">,</span> <span class="token number">41</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'111:111,22:111'</span><span class="token punctuation">,</span> <span class="token string">'11,11'</span><span class="token punctuation">,</span> <span class="token string">'111'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">170</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'111:111,22:111'</span><span class="token punctuation">,</span> <span class="token string">'11,11'</span><span class="token punctuation">,</span> <span class="token string">'111'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">171</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'111:111,22:111'</span><span class="token punctuation">,</span> <span class="token string">'11,11'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">1111</span><span class="token punctuation">,</span> <span class="token number">2222</span><span class="token punctuation">,</span> <span class="token number">333</span><span class="token punctuation">,</span> <span class="token number">444</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">172</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'127.0.0.1:8076'</span><span class="token punctuation">,</span> <span class="token string">'50'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">173</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'127.0.0.1:88'</span><span class="token punctuation">,</span> <span class="token string">'50'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">174</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'127.0.0.1:8002'</span><span class="token punctuation">,</span> <span class="token string">'50'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">175</span><span class="token punctuation">,</span> <span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'12777:11'</span><span class="token punctuation">,</span> <span class="token string">'11'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">176</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'12777:11'</span><span class="token punctuation">,</span> <span class="token string">'11'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">177</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'12777:11'</span><span class="token punctuation">,</span> <span class="token string">'11'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">178</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'127.0.0.1:8001'</span><span class="token punctuation">,</span> <span class="token string">'50'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">179</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'1212:11'</span><span class="token punctuation">,</span> <span class="token string">'50'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token punctuation">,</span> <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'1212:11'</span><span class="token punctuation">,</span> <span class="token string">'50'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">181</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'1111:11'</span><span class="token punctuation">,</span> <span class="token string">'111'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">182</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'127.0.0.1:80'</span><span class="token punctuation">,</span> <span class="token string">'50'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">183</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'127.0.0.1:81'</span><span class="token punctuation">,</span> <span class="token string">'50'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">184</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'127.0.0.1:2003,127.0.0.1:2004'</span><span class="token punctuation">,</span> <span class="token string">'50,50'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">185</span><span class="token punctuation">,</span> <span class="token number">57</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'127.0.0.1:6379'</span><span class="token punctuation">,</span> <span class="token string">'50'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">186</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'127.0.0.1:50055'</span><span class="token punctuation">,</span> <span class="token string">'50'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">187</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'127.0.0.1:2003,127.0.0.1:2004'</span><span class="token punctuation">,</span> <span class="token string">'50,50'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">188</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'127.0.0.1:2003,127.0.0.1:2004'</span><span class="token punctuation">,</span> <span class="token string">'50,50'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">189</span><span class="token punctuation">,</span> <span class="token number">61</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'127.0.0.1:3003,127.0.0.1:3004'</span><span class="token punctuation">,</span> <span class="token string">'50,50'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- --------------------------------------------------------</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- 表的结构 `gateway_service_tcp_rule`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>gateway_service_tcp_rule<span class="token punctuation">`</span> <span class="token punctuation">(</span>  <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'自增主键'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>service_id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'服务id'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>port<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'0'</span> <span class="token keyword">COMMENT</span> <span class="token string">'端口号'</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8 <span class="token keyword">COMMENT</span><span class="token operator">=</span><span class="token string">'网关路由匹配表'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- 转存表中的数据 `gateway_service_tcp_rule`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token punctuation">`</span>gateway_service_tcp_rule<span class="token punctuation">`</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>service_id<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>port<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">171</span><span class="token punctuation">,</span> <span class="token number">41</span><span class="token punctuation">,</span> <span class="token number">8002</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">172</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">8003</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">173</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">8004</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">174</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">8004</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">175</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">8001</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">176</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">8005</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">177</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">8006</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">178</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">8007</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">179</span><span class="token punctuation">,</span> <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">8008</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">8010</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">181</span><span class="token punctuation">,</span> <span class="token number">57</span><span class="token punctuation">,</span> <span class="token number">8011</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- Indexes for dumped tables</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- Indexes for table `gateway_admin`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>gateway_admin<span class="token punctuation">`</span>  <span class="token keyword">ADD</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- Indexes for table `gateway_app`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>gateway_app<span class="token punctuation">`</span>  <span class="token keyword">ADD</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- Indexes for table `gateway_service_access_control`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>gateway_service_access_control<span class="token punctuation">`</span>  <span class="token keyword">ADD</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- Indexes for table `gateway_service_grpc_rule`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>gateway_service_grpc_rule<span class="token punctuation">`</span>  <span class="token keyword">ADD</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- Indexes for table `gateway_service_http_rule`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>gateway_service_http_rule<span class="token punctuation">`</span>  <span class="token keyword">ADD</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- Indexes for table `gateway_service_info`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>gateway_service_info<span class="token punctuation">`</span>  <span class="token keyword">ADD</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- Indexes for table `gateway_service_load_balance`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>gateway_service_load_balance<span class="token punctuation">`</span>  <span class="token keyword">ADD</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- Indexes for table `gateway_service_tcp_rule`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>gateway_service_tcp_rule<span class="token punctuation">`</span>  <span class="token keyword">ADD</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- 在导出的表使用AUTO_INCREMENT</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- 使用表AUTO_INCREMENT `gateway_admin`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>gateway_admin<span class="token punctuation">`</span>  <span class="token keyword">MODIFY</span> <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">'自增id'</span><span class="token punctuation">,</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- 使用表AUTO_INCREMENT `gateway_app`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>gateway_app<span class="token punctuation">`</span>  <span class="token keyword">MODIFY</span> <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> UNSIGNED <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">'自增id'</span><span class="token punctuation">,</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">35</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- 使用表AUTO_INCREMENT `gateway_service_access_control`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>gateway_service_access_control<span class="token punctuation">`</span>  <span class="token keyword">MODIFY</span> <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">'自增主键'</span><span class="token punctuation">,</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">190</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- 使用表AUTO_INCREMENT `gateway_service_grpc_rule`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>gateway_service_grpc_rule<span class="token punctuation">`</span>  <span class="token keyword">MODIFY</span> <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">'自增主键'</span><span class="token punctuation">,</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">174</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- 使用表AUTO_INCREMENT `gateway_service_http_rule`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>gateway_service_http_rule<span class="token punctuation">`</span>  <span class="token keyword">MODIFY</span> <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">'自增主键'</span><span class="token punctuation">,</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">181</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- 使用表AUTO_INCREMENT `gateway_service_info`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>gateway_service_info<span class="token punctuation">`</span>  <span class="token keyword">MODIFY</span> <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> UNSIGNED <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">'自增主键'</span><span class="token punctuation">,</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">62</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- 使用表AUTO_INCREMENT `gateway_service_load_balance`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>gateway_service_load_balance<span class="token punctuation">`</span>  <span class="token keyword">MODIFY</span> <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">'自增主键'</span><span class="token punctuation">,</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">190</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--</span><span class="token comment" spellcheck="true">-- 使用表AUTO_INCREMENT `gateway_service_tcp_rule`</span><span class="token comment" spellcheck="true">--</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>gateway_service_tcp_rule<span class="token punctuation">`</span>  <span class="token keyword">MODIFY</span> <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">'自增主键'</span><span class="token punctuation">,</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">182</span><span class="token punctuation">;</span><span class="token keyword">COMMIT</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */</span><span class="token punctuation">;</span></code></pre><h1 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h1><p><img src="1682753711743.png" alt="1682753711743"></p><p><img src="assets/1682754380874.png" alt="1682754380874"></p>]]></content>
      
      
      <categories>
          
          <category> golang </category>
          
          <category> gateway </category>
          
          <category> 反向代理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> golang </tag>
            
            <tag> gateway </tag>
            
            <tag> 反向代理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go微服务网关 - 4.网络代理</title>
      <link href="/2023/04/30/backend/golang/go-wei-fu-wu-wang-guan/4-wang-luo-dai-li/4-wang-luo-dai-li/"/>
      <url>/2023/04/30/backend/golang/go-wei-fu-wu-wang-guan/4-wang-luo-dai-li/4-wang-luo-dai-li/</url>
      
        <content type="html"><![CDATA[<h1 id="网络代理"><a href="#网络代理" class="headerlink" title="网络代理"></a>网络代理</h1><h1 id="大纲"><a href="#大纲" class="headerlink" title="大纲"></a>大纲</h1><p><img src="assets/1682728087872.png" alt="1682728087872"></p><h1 id="代理-转发"><a href="#代理-转发" class="headerlink" title="代理!=转发"></a>代理!=转发</h1><p><img src="assets/1682728148217.png" alt="1682728148217"></p><p><img src="assets/1682728174030.png" alt="1682728174030"></p><p><img src="assets/1682728191874.png" alt="1682728191874"></p><p><img src="assets/1682728234725.png" alt="1682728234725"></p><h1 id="开发一个浏览器代理"><a href="#开发一个浏览器代理" class="headerlink" title="开发一个浏览器代理"></a>开发一个浏览器代理</h1><p><img src="assets/1682728254501.png" alt="1682728254501"></p><p><img src="assets/1682728263118.png" alt="1682728263118"></p><p><img src="assets/1682728278226.png" alt="1682728278226"></p><p><img src="assets/1682728289212.png" alt="1682728289212"></p><p><img src="assets/1682728302909.png" alt="1682728302909"></p><p><img src="assets/1682728331335.png" alt="1682728331335"><img src="assets/1682728347797.png" alt="1682728347797"><img src="assets/1682728384320.png" alt="1682728384320"></p><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span>   <span class="token string">"fmt"</span>   <span class="token string">"io"</span>   <span class="token string">"net"</span>   <span class="token string">"net/http"</span>   <span class="token string">"strings"</span><span class="token punctuation">)</span><span class="token keyword">type</span> Pxy <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>p <span class="token operator">*</span>Pxy<span class="token punctuation">)</span> <span class="token function">ServeHTTP</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>   fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"Received request %s %s %s\n"</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>Method<span class="token punctuation">,</span> r<span class="token punctuation">.</span>Host<span class="token punctuation">,</span> r<span class="token punctuation">.</span>RemoteAddr<span class="token punctuation">)</span>   transport <span class="token operator">:=</span> http<span class="token punctuation">.</span>DefaultTransport   <span class="token comment" spellcheck="true">// 浅拷贝对象,再新增属性数据 -> 不直接用r,而是拷贝,是为了防止影响后续r的使用</span>   outReq <span class="token operator">:=</span> <span class="token function">new</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span>   <span class="token operator">*</span>outReq <span class="token operator">=</span> <span class="token operator">*</span>r   <span class="token keyword">if</span> clientIP<span class="token punctuation">,</span> <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">SplitHostPort</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>RemoteAddr<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>       <span class="token keyword">if</span> prior<span class="token punctuation">,</span> ok <span class="token operator">:=</span> outReq<span class="token punctuation">.</span>Header<span class="token punctuation">[</span><span class="token string">"X-Forwarded-For"</span><span class="token punctuation">]</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>           clientIP <span class="token operator">=</span> strings<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span>prior<span class="token punctuation">,</span> <span class="token string">", "</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">", "</span> <span class="token operator">+</span> clientIP       <span class="token punctuation">}</span>       outReq<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">"X-Forwarded-For"</span><span class="token punctuation">,</span> clientIP<span class="token punctuation">)</span>   <span class="token punctuation">}</span>   <span class="token comment" spellcheck="true">// 请求下游</span>   res<span class="token punctuation">,</span> err <span class="token operator">:=</span> transport<span class="token punctuation">.</span><span class="token function">RoundTrip</span><span class="token punctuation">(</span>outReq<span class="token punctuation">)</span>   <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>       w<span class="token punctuation">.</span><span class="token function">WriteHeader</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusBadGateway<span class="token punctuation">)</span>       <span class="token keyword">return</span>   <span class="token punctuation">}</span>   <span class="token comment" spellcheck="true">// 下游请求结果返回上游</span>   <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> res<span class="token punctuation">.</span>Header <span class="token punctuation">{</span>       <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> value <span class="token operator">:=</span> <span class="token keyword">range</span> v <span class="token punctuation">{</span>           w<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> value<span class="token punctuation">)</span>       <span class="token punctuation">}</span>   <span class="token punctuation">}</span>   w<span class="token punctuation">.</span><span class="token function">WriteHeader</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>StatusCode<span class="token punctuation">)</span>   io<span class="token punctuation">.</span><span class="token function">Copy</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> res<span class="token punctuation">.</span>Body<span class="token punctuation">)</span>   res<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Serve on :8080"</span><span class="token punctuation">)</span>   http<span class="token punctuation">.</span><span class="token function">Handle</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>Pxy<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>   http<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token string">"0.0.0.0:8080"</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><blockquote><p>没啥用</p></blockquote><h1 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h1><p><img src="assets/1682729565264.png" alt="1682729565264"></p><p><img src="assets/1682729579279.png" alt="1682729579279"></p><p><img src="assets/1682729587858.png" alt="1682729587858"></p><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"bufio"</span>    <span class="token string">"log"</span>    <span class="token string">"net/http"</span>    <span class="token string">"net/url"</span><span class="token punctuation">)</span><span class="token keyword">var</span> <span class="token punctuation">(</span>    <span class="token comment" spellcheck="true">// 代理请求的地址</span>    proxy_addr <span class="token operator">=</span> <span class="token string">"http://127.0.0.1:9010"</span>    port       <span class="token operator">=</span> <span class="token string">"2002"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">handler</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 解析代理地址,并更改请求体的协议和主机</span>    proxy<span class="token punctuation">,</span> err <span class="token operator">:=</span> url<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>proxy_addr<span class="token punctuation">)</span>    r<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Scheme <span class="token operator">=</span> proxy<span class="token punctuation">.</span>Scheme    r<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Host <span class="token operator">=</span> proxy<span class="token punctuation">.</span>Host    <span class="token comment" spellcheck="true">// 请求下游</span>    transport <span class="token operator">:=</span> http<span class="token punctuation">.</span>DefaultTransport    res<span class="token punctuation">,</span> err <span class="token operator">:=</span> transport<span class="token punctuation">.</span><span class="token function">RoundTrip</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 下游请求结果返回上游</span>    <span class="token keyword">for</span> k<span class="token punctuation">,</span> vv <span class="token operator">:=</span> <span class="token keyword">range</span> res<span class="token punctuation">.</span>Header <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> vv <span class="token punctuation">{</span>            w<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">defer</span> res<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    bufio<span class="token punctuation">.</span><span class="token function">NewReader</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>Body<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">WriteTo</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    http<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> handler<span class="token punctuation">)</span>    log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Start serving on port "</span> <span class="token operator">+</span> port<span class="token punctuation">)</span>    err <span class="token operator">:=</span> http<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token string">":"</span><span class="token operator">+</span>port<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h1 id="http代理大纲"><a href="#http代理大纲" class="headerlink" title="http代理大纲"></a>http代理大纲</h1><p><img src="assets/1682730267339.png" alt="1682730267339"></p><p><img src="assets/1682730285442.png" alt="1682730285442"></p><p><img src="assets/1682730303543.png" alt="1682730303543"></p><h1 id="ReverseProxy"><a href="#ReverseProxy" class="headerlink" title="ReverseProxy"></a>ReverseProxy</h1><h2 id="功能点"><a href="#功能点" class="headerlink" title="功能点"></a>功能点</h2><p><img src="assets/1682732135274.png" alt="1682732135274"><img src="assets/1682732150217.png" alt="1682732150217"></p><p><img src="assets/1682732165079.png" alt="1682732165079"></p><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"log"</span>    <span class="token string">"net/http"</span>    <span class="token string">"net/http/httputil"</span>    <span class="token string">"net/url"</span><span class="token punctuation">)</span><span class="token keyword">var</span> addr <span class="token operator">=</span> <span class="token string">"127.0.0.1:2002"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    rs1 <span class="token operator">:=</span> <span class="token string">"http://127.0.0.1:9010"</span>    url1<span class="token punctuation">,</span> err1 <span class="token operator">:=</span> url<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>rs1<span class="token punctuation">)</span>    <span class="token keyword">if</span> err1 <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">Panicln</span><span class="token punctuation">(</span>err1<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 会自动解析请求的url(:2002/xxx) -> http://127.0.0.1:9010/xxx</span>    proxy <span class="token operator">:=</span> httputil<span class="token punctuation">.</span><span class="token function">NewSingleHostReverseProxy</span><span class="token punctuation">(</span>url1<span class="token punctuation">)</span>    log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Starting server at "</span> <span class="token operator">+</span> addr<span class="token punctuation">)</span>    log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span>addr<span class="token punctuation">,</span> proxy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><p><img src="assets/1682732429453.png" alt="会自动拼接请求的url,然后转发"></p><h2 id="更改内容"><a href="#更改内容" class="headerlink" title="更改内容"></a>更改内容</h2><p><img src="assets/1682732540041.png" alt="1682732540041"></p><p><img src="assets/1682732576794.png" alt="1682732576794"><img src="assets/1682732589978.png" alt="1682732589978">    <img src="assets/1682732595374.png" alt="1682732595374"><img src="assets/1682732664482.png" alt="1682732664482"><img src="assets/1682732727115.png" alt="拼接时斜杠的格式化"></p><p><img src="assets/1682732772790.png" alt="1682732772790"></p><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"bytes"</span>    <span class="token string">"fmt"</span>    <span class="token string">"io/ioutil"</span>    <span class="token string">"log"</span>    <span class="token string">"net/http"</span>    <span class="token string">"net/http/httputil"</span>    <span class="token string">"net/url"</span>    <span class="token string">"strings"</span><span class="token punctuation">)</span><span class="token keyword">var</span> addr <span class="token operator">=</span> <span class="token string">"127.0.0.1:2002"</span><span class="token keyword">func</span> <span class="token function">singleJoiningSlash</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>    aslash <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">HasSuffix</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">)</span>    bslash <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">HasPrefix</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">)</span>    <span class="token keyword">switch</span> <span class="token punctuation">{</span>    <span class="token keyword">case</span> aslash <span class="token operator">&amp;&amp;</span> bslash<span class="token punctuation">:</span>        <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>    <span class="token keyword">case</span> <span class="token operator">!</span>aslash <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>bslash<span class="token punctuation">:</span>        <span class="token keyword">return</span> a <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> b    <span class="token punctuation">}</span>    <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">joinURLPath</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b <span class="token operator">*</span>url<span class="token punctuation">.</span>URL<span class="token punctuation">)</span> <span class="token punctuation">(</span>path<span class="token punctuation">,</span> rawpath <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> a<span class="token punctuation">.</span>RawPath <span class="token operator">==</span> <span class="token string">""</span> <span class="token operator">&amp;&amp;</span> b<span class="token punctuation">.</span>RawPath <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">singleJoiningSlash</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>Path<span class="token punctuation">,</span> b<span class="token punctuation">.</span>Path<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">""</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// Same as singleJoiningSlash, but uses EscapedPath to determine</span>    <span class="token comment" spellcheck="true">// whether a slash should be added</span>    apath <span class="token operator">:=</span> a<span class="token punctuation">.</span><span class="token function">EscapedPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    bpath <span class="token operator">:=</span> b<span class="token punctuation">.</span><span class="token function">EscapedPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    aslash <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">HasSuffix</span><span class="token punctuation">(</span>apath<span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">)</span>    bslash <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">HasPrefix</span><span class="token punctuation">(</span>bpath<span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">)</span>    <span class="token keyword">switch</span> <span class="token punctuation">{</span>    <span class="token keyword">case</span> aslash <span class="token operator">&amp;&amp;</span> bslash<span class="token punctuation">:</span>        <span class="token keyword">return</span> a<span class="token punctuation">.</span>Path <span class="token operator">+</span> b<span class="token punctuation">.</span>Path<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> apath <span class="token operator">+</span> bpath<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>    <span class="token keyword">case</span> <span class="token operator">!</span>aslash <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>bslash<span class="token punctuation">:</span>        <span class="token keyword">return</span> a<span class="token punctuation">.</span>Path <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> b<span class="token punctuation">.</span>Path<span class="token punctuation">,</span> apath <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> bpath    <span class="token punctuation">}</span>    <span class="token keyword">return</span> a<span class="token punctuation">.</span>Path <span class="token operator">+</span> b<span class="token punctuation">.</span>Path<span class="token punctuation">,</span> apath <span class="token operator">+</span> bpath<span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">NewSingleHostReverseProxy</span><span class="token punctuation">(</span>target <span class="token operator">*</span>url<span class="token punctuation">.</span>URL<span class="token punctuation">)</span> <span class="token operator">*</span>httputil<span class="token punctuation">.</span>ReverseProxy <span class="token punctuation">{</span>    targetQuery <span class="token operator">:=</span> target<span class="token punctuation">.</span>RawQuery    director <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>req <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>        req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Scheme <span class="token operator">=</span> target<span class="token punctuation">.</span>Scheme        req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Host <span class="token operator">=</span> target<span class="token punctuation">.</span>Host        req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path<span class="token punctuation">,</span> req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>RawPath <span class="token operator">=</span> <span class="token function">joinURLPath</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> req<span class="token punctuation">.</span>URL<span class="token punctuation">)</span>        <span class="token keyword">if</span> targetQuery <span class="token operator">==</span> <span class="token string">""</span> <span class="token operator">||</span> req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>RawQuery <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">{</span>            req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>RawQuery <span class="token operator">=</span> targetQuery <span class="token operator">+</span> req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>RawQuery        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>RawQuery <span class="token operator">=</span> targetQuery <span class="token operator">+</span> <span class="token string">"&amp;"</span> <span class="token operator">+</span> req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>RawQuery        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> ok <span class="token operator">:=</span> req<span class="token punctuation">.</span>Header<span class="token punctuation">[</span><span class="token string">"User-Agent"</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// explicitly disable User-Agent so it's not set to default value</span>            req<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">"User-Agent"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// ModifyResponse -> 请求拦截</span>    modifyFunc <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>res <span class="token operator">*</span>http<span class="token punctuation">.</span>Response<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> res<span class="token punctuation">.</span>StatusCode <span class="token operator">!=</span> <span class="token number">200</span> <span class="token punctuation">{</span>                oldPayload<span class="token punctuation">,</span> err <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadAll</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>Body<span class="token punctuation">)</span>            <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 返回的如果是err,则触发errorHandler</span>                <span class="token keyword">return</span> err            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// 改写res</span>            newPayload <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">"hello "</span> <span class="token operator">+</span> <span class="token function">string</span><span class="token punctuation">(</span>oldPayload<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">// 回写</span>            res<span class="token punctuation">.</span>Body <span class="token operator">=</span> ioutil<span class="token punctuation">.</span><span class="token function">NopCloser</span><span class="token punctuation">(</span>bytes<span class="token punctuation">.</span><span class="token function">NewBuffer</span><span class="token punctuation">(</span>newPayload<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">// 内容长度也要改,因为新增了hello</span>            res<span class="token punctuation">.</span>ContentLength <span class="token operator">=</span> <span class="token function">int64</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>newPayload<span class="token punctuation">)</span><span class="token punctuation">)</span>            res<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">"Content-Length"</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Sprint</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>newPayload<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token operator">&amp;</span>httputil<span class="token punctuation">.</span>ReverseProxy<span class="token punctuation">{</span>Director<span class="token punctuation">:</span> director<span class="token punctuation">,</span> ModifyResponse<span class="token punctuation">:</span> modifyFunc<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    rs1 <span class="token operator">:=</span> <span class="token string">"http://127.0.0.1:9010"</span>    url1<span class="token punctuation">,</span> err1 <span class="token operator">:=</span> url<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>rs1<span class="token punctuation">)</span>    <span class="token keyword">if</span> err1 <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">Panicln</span><span class="token punctuation">(</span>err1<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 会自动解析请求的url(:2002/xxx) -> http://127.0.0.1:9010/xxx</span>    proxy <span class="token operator">:=</span> httputil<span class="token punctuation">.</span><span class="token function">NewSingleHostReverseProxy</span><span class="token punctuation">(</span>url1<span class="token punctuation">)</span>    log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Starting server at "</span> <span class="token operator">+</span> addr<span class="token punctuation">)</span>    log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span>addr<span class="token punctuation">,</span> proxy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><blockquote><p>好像没效果?</p></blockquote><h2 id="connection"><a href="#connection" class="headerlink" title="connection"></a>connection</h2><p><img src="assets/1682733438293.png" alt="1682733438293"><img src="assets/1682733451950.png" alt="1682733451950"></p><p><img src="assets/1682733506592.png" alt="1682733506592"></p><p><img src="assets/1682733564705.png" alt="1682733564705"><img src="assets/1682733578798.png" alt="1682733578798"><img src="assets/1682733591935.png" alt="1682733591935"></p><p><img src="assets/1682733599852.png" alt="1682733599852"></p><h2 id="特殊header"><a href="#特殊header" class="headerlink" title="特殊header"></a>特殊header</h2><p><img src="assets/1682734101283.png" alt="1682734101283"></p><p><img src="assets/1682734109282.png" alt="1682734109282"></p><p><img src="assets/1682734136451.png" alt="1682734136451"></p><h3 id="real-server-main-go"><a href="#real-server-main-go" class="headerlink" title="real_server/main.go"></a>real_server/main.go</h3><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"fmt"</span>    <span class="token string">"io"</span>    <span class="token string">"log"</span>    <span class="token string">"net/http"</span>    <span class="token string">"os"</span>    <span class="token string">"os/signal"</span>    <span class="token string">"syscall"</span>    <span class="token string">"time"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    rs1 <span class="token operator">:=</span> <span class="token operator">&amp;</span>RealServer<span class="token punctuation">{</span>Addr<span class="token punctuation">:</span> <span class="token string">"127.0.0.1:2003"</span><span class="token punctuation">}</span>    rs1<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    rs2 <span class="token operator">:=</span> <span class="token operator">&amp;</span>RealServer<span class="token punctuation">{</span>Addr<span class="token punctuation">:</span> <span class="token string">"127.0.0.1:2004"</span><span class="token punctuation">}</span>    rs2<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//监听关闭信号</span>    quit <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> os<span class="token punctuation">.</span>Signal<span class="token punctuation">)</span>    signal<span class="token punctuation">.</span><span class="token function">Notify</span><span class="token punctuation">(</span>quit<span class="token punctuation">,</span> syscall<span class="token punctuation">.</span>SIGINT<span class="token punctuation">,</span> syscall<span class="token punctuation">.</span>SIGTERM<span class="token punctuation">)</span>    <span class="token operator">&lt;-</span>quit<span class="token punctuation">}</span><span class="token keyword">type</span> RealServer <span class="token keyword">struct</span> <span class="token punctuation">{</span>    Addr <span class="token builtin">string</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>RealServer<span class="token punctuation">)</span> <span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Starting httpserver at "</span> <span class="token operator">+</span> r<span class="token punctuation">.</span>Addr<span class="token punctuation">)</span>    mux <span class="token operator">:=</span> http<span class="token punctuation">.</span><span class="token function">NewServeMux</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    mux<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>HelloHandler<span class="token punctuation">)</span>    mux<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">"/base/error"</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>ErrorHandler<span class="token punctuation">)</span>    mux<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">"/test_http_string/test_http_string/aaa"</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>TimeoutHandler<span class="token punctuation">)</span>    server <span class="token operator">:=</span> <span class="token operator">&amp;</span>http<span class="token punctuation">.</span>Server<span class="token punctuation">{</span>        Addr<span class="token punctuation">:</span>         r<span class="token punctuation">.</span>Addr<span class="token punctuation">,</span>        WriteTimeout<span class="token punctuation">:</span> time<span class="token punctuation">.</span>Second <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">,</span>        Handler<span class="token punctuation">:</span>      mux<span class="token punctuation">,</span>    <span class="token punctuation">}</span>    <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>server<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>RealServer<span class="token punctuation">)</span> <span class="token function">HelloHandler</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> req <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//127.0.0.1:8008/abc?sdsdsa=11</span>    <span class="token comment" spellcheck="true">//r.Addr=127.0.0.1:8008</span>    <span class="token comment" spellcheck="true">//req.URL.Path=/abc</span>    <span class="token comment" spellcheck="true">//fmt.Println(req.Host)</span>    upath <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"http://%s%s\n"</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>Addr<span class="token punctuation">,</span> req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path<span class="token punctuation">)</span>    realIP <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"RemoteAddr=%s,X-Forwarded-For=%v,X-Real-Ip=%v\n"</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span>RemoteAddr<span class="token punctuation">,</span> req<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">"X-Forwarded-For"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">"X-Real-Ip"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    header<span class="token operator">:=</span>fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"headers =%v\n"</span><span class="token punctuation">,</span>req<span class="token punctuation">.</span>Header<span class="token punctuation">)</span>    io<span class="token punctuation">.</span><span class="token function">WriteString</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> upath<span class="token punctuation">)</span>    io<span class="token punctuation">.</span><span class="token function">WriteString</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> realIP<span class="token punctuation">)</span>    io<span class="token punctuation">.</span><span class="token function">WriteString</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> header<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>RealServer<span class="token punctuation">)</span> <span class="token function">ErrorHandler</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> req <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>    upath <span class="token operator">:=</span> <span class="token string">"error handler"</span>    w<span class="token punctuation">.</span><span class="token function">WriteHeader</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>    io<span class="token punctuation">.</span><span class="token function">WriteString</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> upath<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>RealServer<span class="token punctuation">)</span> <span class="token function">TimeoutHandler</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> req <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>    time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token operator">*</span>time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>    upath <span class="token operator">:=</span> <span class="token string">"timeout handler"</span>    w<span class="token punctuation">.</span><span class="token function">WriteHeader</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>    io<span class="token punctuation">.</span><span class="token function">WriteString</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> upath<span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><h3 id="reverse-proxy-main-go"><a href="#reverse-proxy-main-go" class="headerlink" title="reverse_proxy/main.go"></a>reverse_proxy/main.go</h3><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"bytes"</span>    <span class="token string">"compress/gzip"</span>    <span class="token string">"io/ioutil"</span>    <span class="token string">"log"</span>    <span class="token string">"math/rand"</span>    <span class="token string">"net"</span>    <span class="token string">"net/http"</span>    <span class="token string">"net/http/httputil"</span>    <span class="token string">"net/url"</span>    <span class="token string">"regexp"</span>    <span class="token string">"strconv"</span>    <span class="token string">"strings"</span>    <span class="token string">"time"</span><span class="token punctuation">)</span><span class="token keyword">var</span> addr <span class="token operator">=</span> <span class="token string">"127.0.0.1:2002"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//rs1 := "http://www.baidu.com"</span>    rs1 <span class="token operator">:=</span> <span class="token string">"http://127.0.0.1:2003"</span>    url1<span class="token punctuation">,</span> err1 <span class="token operator">:=</span> url<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>rs1<span class="token punctuation">)</span>    <span class="token keyword">if</span> err1 <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err1<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//rs2 := "http://www.baidu.com"</span>    rs2 <span class="token operator">:=</span> <span class="token string">"http://127.0.0.1:2004"</span>    url2<span class="token punctuation">,</span> err2 <span class="token operator">:=</span> url<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>rs2<span class="token punctuation">)</span>    <span class="token keyword">if</span> err2 <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err2<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    urls <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>url<span class="token punctuation">.</span>URL<span class="token punctuation">{</span>url1<span class="token punctuation">,</span> url2<span class="token punctuation">}</span>    proxy <span class="token operator">:=</span> <span class="token function">NewMultipleHostsReverseProxy</span><span class="token punctuation">(</span>urls<span class="token punctuation">)</span>    log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Starting httpserver at "</span> <span class="token operator">+</span> addr<span class="token punctuation">)</span>    log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span>addr<span class="token punctuation">,</span> proxy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">var</span> transport <span class="token operator">=</span> <span class="token operator">&amp;</span>http<span class="token punctuation">.</span>Transport<span class="token punctuation">{</span>    DialContext<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token operator">&amp;</span>net<span class="token punctuation">.</span>Dialer<span class="token punctuation">{</span>        Timeout<span class="token punctuation">:</span>   <span class="token number">30</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//连接超时</span>        KeepAlive<span class="token punctuation">:</span> <span class="token number">30</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//长连接超时时间</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>DialContext<span class="token punctuation">,</span>    MaxIdleConns<span class="token punctuation">:</span>          <span class="token number">100</span><span class="token punctuation">,</span>              <span class="token comment" spellcheck="true">//最大空闲连接</span>    IdleConnTimeout<span class="token punctuation">:</span>       <span class="token number">90</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//空闲超时时间</span>    TLSHandshakeTimeout<span class="token punctuation">:</span>   <span class="token number">10</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//tls握手超时时间</span>    ExpectContinueTimeout<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">//100-continue 超时时间</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">NewMultipleHostsReverseProxy</span><span class="token punctuation">(</span>targets <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>url<span class="token punctuation">.</span>URL<span class="token punctuation">)</span> <span class="token operator">*</span>httputil<span class="token punctuation">.</span>ReverseProxy <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//请求协调者</span>    director <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>req <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//url_rewrite</span>        <span class="token comment" spellcheck="true">//127.0.0.1:2002/dir/abc ==> 127.0.0.1:2003/base/abc ??</span>        <span class="token comment" spellcheck="true">//127.0.0.1:2002/dir/abc ==> 127.0.0.1:2002/abc</span>        <span class="token comment" spellcheck="true">//127.0.0.1:2002/abc ==> 127.0.0.1:2003/base/abc</span>        re<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> regexp<span class="token punctuation">.</span><span class="token function">Compile</span><span class="token punctuation">(</span><span class="token string">"^/dir(.*)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token function">ReplaceAllString</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path<span class="token punctuation">,</span> <span class="token string">"$1"</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">//随机负载均衡</span>        targetIndex <span class="token operator">:=</span> rand<span class="token punctuation">.</span><span class="token function">Intn</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>targets<span class="token punctuation">)</span><span class="token punctuation">)</span>        target <span class="token operator">:=</span> targets<span class="token punctuation">[</span>targetIndex<span class="token punctuation">]</span>        targetQuery <span class="token operator">:=</span> target<span class="token punctuation">.</span>RawQuery        req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Scheme <span class="token operator">=</span> target<span class="token punctuation">.</span>Scheme        req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Host <span class="token operator">=</span> target<span class="token punctuation">.</span>Host        <span class="token comment" spellcheck="true">//todo 部分章节补充1</span>        <span class="token comment" spellcheck="true">//todo 当对域名(非内网)反向代理时需要设置此项。当作后端反向代理时不需要</span>        req<span class="token punctuation">.</span>Host <span class="token operator">=</span> target<span class="token punctuation">.</span>Host        <span class="token comment" spellcheck="true">// url地址重写：重写前：/aa 重写后：/base/aa</span>        req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path <span class="token operator">=</span> <span class="token function">singleJoiningSlash</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span>Path<span class="token punctuation">,</span> req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path<span class="token punctuation">)</span>        <span class="token keyword">if</span> targetQuery <span class="token operator">==</span> <span class="token string">""</span> <span class="token operator">||</span> req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>RawQuery <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">{</span>            req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>RawQuery <span class="token operator">=</span> targetQuery <span class="token operator">+</span> req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>RawQuery        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>RawQuery <span class="token operator">=</span> targetQuery <span class="token operator">+</span> <span class="token string">"&amp;"</span> <span class="token operator">+</span> req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>RawQuery        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> ok <span class="token operator">:=</span> req<span class="token punctuation">.</span>Header<span class="token punctuation">[</span><span class="token string">"User-Agent"</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span>            req<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">"User-Agent"</span><span class="token punctuation">,</span> <span class="token string">"user-agent"</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//只在第一代理中设置此header头</span>        <span class="token comment" spellcheck="true">//req.Header.Set("X-Real-Ip", req.RemoteAddr)</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//更改内容</span>    modifyFunc <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>resp <span class="token operator">*</span>http<span class="token punctuation">.</span>Response<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//请求以下命令：curl 'http://127.0.0.1:2002/error'</span>        <span class="token comment" spellcheck="true">//todo 部分章节功能补充2</span>        <span class="token comment" spellcheck="true">//todo 兼容websocket</span>        <span class="token keyword">if</span> strings<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">"Connection"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"Upgrade"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">nil</span>        <span class="token punctuation">}</span>        <span class="token keyword">var</span> payload <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span>        <span class="token keyword">var</span> readErr <span class="token builtin">error</span>        <span class="token comment" spellcheck="true">//todo 部分章节功能补充3</span>        <span class="token comment" spellcheck="true">//todo 兼容gzip压缩</span>        <span class="token keyword">if</span> strings<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">"Content-Encoding"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"gzip"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            gr<span class="token punctuation">,</span> err <span class="token operator">:=</span> gzip<span class="token punctuation">.</span><span class="token function">NewReader</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>Body<span class="token punctuation">)</span>            <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> err            <span class="token punctuation">}</span>            payload<span class="token punctuation">,</span> readErr <span class="token operator">=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadAll</span><span class="token punctuation">(</span>gr<span class="token punctuation">)</span>            resp<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Del</span><span class="token punctuation">(</span><span class="token string">"Content-Encoding"</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            payload<span class="token punctuation">,</span> readErr <span class="token operator">=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadAll</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>Body<span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> readErr <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> readErr        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//异常请求时设置StatusCode</span>        <span class="token keyword">if</span> resp<span class="token punctuation">.</span>StatusCode <span class="token operator">!=</span> <span class="token number">200</span> <span class="token punctuation">{</span>            payload <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">"StatusCode error:"</span> <span class="token operator">+</span> <span class="token function">string</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//todo 部分章节功能补充4</span>        <span class="token comment" spellcheck="true">//todo 因为预读了数据所以内容重新回写</span>        resp<span class="token punctuation">.</span>Body <span class="token operator">=</span> ioutil<span class="token punctuation">.</span><span class="token function">NopCloser</span><span class="token punctuation">(</span>bytes<span class="token punctuation">.</span><span class="token function">NewBuffer</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">)</span>        resp<span class="token punctuation">.</span>ContentLength <span class="token operator">=</span> <span class="token function">int64</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">)</span>        resp<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">"Content-Length"</span><span class="token punctuation">,</span> strconv<span class="token punctuation">.</span><span class="token function">FormatInt</span><span class="token punctuation">(</span><span class="token function">int64</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//错误回调 ：关闭real_server时测试，错误回调</span>    errFunc <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        http<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> <span class="token string">"ErrorHandler error:"</span><span class="token operator">+</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token operator">&amp;</span>httputil<span class="token punctuation">.</span>ReverseProxy<span class="token punctuation">{</span>        Director<span class="token punctuation">:</span>       director<span class="token punctuation">,</span>        Transport<span class="token punctuation">:</span>      transport<span class="token punctuation">,</span>        ModifyResponse<span class="token punctuation">:</span> modifyFunc<span class="token punctuation">,</span>        ErrorHandler<span class="token punctuation">:</span>   errFunc<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">singleJoiningSlash</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>    aslash <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">HasSuffix</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">)</span>    bslash <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">HasPrefix</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">)</span>    <span class="token keyword">switch</span> <span class="token punctuation">{</span>    <span class="token keyword">case</span> aslash <span class="token operator">&amp;&amp;</span> bslash<span class="token punctuation">:</span>        <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>    <span class="token keyword">case</span> <span class="token operator">!</span>aslash <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>bslash<span class="token punctuation">:</span>        <span class="token keyword">return</span> a <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> b    <span class="token punctuation">}</span>    <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">}</span></code></pre><h3 id="reverse-proxy-level1"><a href="#reverse-proxy-level1" class="headerlink" title="reverse_proxy_level1"></a>reverse_proxy_level1</h3><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"bytes"</span>    <span class="token string">"io/ioutil"</span>    <span class="token string">"log"</span>    <span class="token string">"math/rand"</span>    <span class="token string">"net"</span>    <span class="token string">"net/http"</span>    <span class="token string">"net/http/httputil"</span>    <span class="token string">"net/url"</span>    <span class="token string">"regexp"</span>    <span class="token string">"strconv"</span>    <span class="token string">"strings"</span>    <span class="token string">"time"</span><span class="token punctuation">)</span><span class="token keyword">var</span> addr <span class="token operator">=</span> <span class="token string">"127.0.0.1:2001"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    rs1 <span class="token operator">:=</span> <span class="token string">"http://127.0.0.1:2002"</span>    url1<span class="token punctuation">,</span> err1 <span class="token operator">:=</span> url<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>rs1<span class="token punctuation">)</span>    <span class="token keyword">if</span> err1 <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err1<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    urls <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>url<span class="token punctuation">.</span>URL<span class="token punctuation">{</span>url1<span class="token punctuation">}</span>    proxy <span class="token operator">:=</span> <span class="token function">NewMultipleHostsReverseProxy</span><span class="token punctuation">(</span>urls<span class="token punctuation">)</span>    log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Starting httpserver at "</span> <span class="token operator">+</span> addr<span class="token punctuation">)</span>    log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span>addr<span class="token punctuation">,</span> proxy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">var</span> transport <span class="token operator">=</span> <span class="token operator">&amp;</span>http<span class="token punctuation">.</span>Transport<span class="token punctuation">{</span>    DialContext<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token operator">&amp;</span>net<span class="token punctuation">.</span>Dialer<span class="token punctuation">{</span>        Timeout<span class="token punctuation">:</span>   <span class="token number">30</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//连接超时</span>        KeepAlive<span class="token punctuation">:</span> <span class="token number">30</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//长连接超时时间</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>DialContext<span class="token punctuation">,</span>    MaxIdleConns<span class="token punctuation">:</span>          <span class="token number">100</span><span class="token punctuation">,</span>              <span class="token comment" spellcheck="true">//最大空闲连接</span>    IdleConnTimeout<span class="token punctuation">:</span>       <span class="token number">90</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//空闲超时时间</span>    TLSHandshakeTimeout<span class="token punctuation">:</span>   <span class="token number">10</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//tls握手超时时间</span>    ExpectContinueTimeout<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">//100-continue 超时时间</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">NewMultipleHostsReverseProxy</span><span class="token punctuation">(</span>targets <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>url<span class="token punctuation">.</span>URL<span class="token punctuation">)</span> <span class="token operator">*</span>httputil<span class="token punctuation">.</span>ReverseProxy <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//请求协调者</span>    director <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>req <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//url_rewrite</span>        <span class="token comment" spellcheck="true">//127.0.0.1:2002/dir/abc ==> 127.0.0.1:2003/base/abc ??</span>        <span class="token comment" spellcheck="true">//127.0.0.1:2002/dir/abc ==> 127.0.0.1:2002/abc</span>        <span class="token comment" spellcheck="true">//127.0.0.1:2002/abc ==> 127.0.0.1:2003/base/abc</span>        re<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> regexp<span class="token punctuation">.</span><span class="token function">Compile</span><span class="token punctuation">(</span><span class="token string">"^/dir(.*)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token function">ReplaceAllString</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path<span class="token punctuation">,</span> <span class="token string">"$1"</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">//随机负载均衡</span>        targetIndex <span class="token operator">:=</span> rand<span class="token punctuation">.</span><span class="token function">Intn</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>targets<span class="token punctuation">)</span><span class="token punctuation">)</span>        target <span class="token operator">:=</span> targets<span class="token punctuation">[</span>targetIndex<span class="token punctuation">]</span>        targetQuery <span class="token operator">:=</span> target<span class="token punctuation">.</span>RawQuery        req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Scheme <span class="token operator">=</span> target<span class="token punctuation">.</span>Scheme        req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Host <span class="token operator">=</span> target<span class="token punctuation">.</span>Host        <span class="token comment" spellcheck="true">// url地址重写：重写前：/aa 重写后：/base/aa</span>        req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path <span class="token operator">=</span> <span class="token function">singleJoiningSlash</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span>Path<span class="token punctuation">,</span> req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path<span class="token punctuation">)</span>        <span class="token keyword">if</span> targetQuery <span class="token operator">==</span> <span class="token string">""</span> <span class="token operator">||</span> req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>RawQuery <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">{</span>            req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>RawQuery <span class="token operator">=</span> targetQuery <span class="token operator">+</span> req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>RawQuery        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>RawQuery <span class="token operator">=</span> targetQuery <span class="token operator">+</span> <span class="token string">"&amp;"</span> <span class="token operator">+</span> req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>RawQuery        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> ok <span class="token operator">:=</span> req<span class="token punctuation">.</span>Header<span class="token punctuation">[</span><span class="token string">"User-Agent"</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span>            req<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">"User-Agent"</span><span class="token punctuation">,</span> <span class="token string">"user-agent"</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//只在第一代理中设置此header头</span>        req<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">"X-Real-Ip"</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span>RemoteAddr<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//更改内容</span>    modifyFunc <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>resp <span class="token operator">*</span>http<span class="token punctuation">.</span>Response<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//请求以下命令：curl 'http://127.0.0.1:2002/error'</span>        <span class="token keyword">if</span> resp<span class="token punctuation">.</span>StatusCode <span class="token operator">!=</span> <span class="token number">200</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//获取内容</span>            oldPayload<span class="token punctuation">,</span> err <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadAll</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>Body<span class="token punctuation">)</span>            <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> err            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//追加内容</span>            newPayload <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">"StatusCode error:"</span> <span class="token operator">+</span> <span class="token function">string</span><span class="token punctuation">(</span>oldPayload<span class="token punctuation">)</span><span class="token punctuation">)</span>            resp<span class="token punctuation">.</span>Body <span class="token operator">=</span> ioutil<span class="token punctuation">.</span><span class="token function">NopCloser</span><span class="token punctuation">(</span>bytes<span class="token punctuation">.</span><span class="token function">NewBuffer</span><span class="token punctuation">(</span>newPayload<span class="token punctuation">)</span><span class="token punctuation">)</span>            resp<span class="token punctuation">.</span>ContentLength <span class="token operator">=</span> <span class="token function">int64</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>newPayload<span class="token punctuation">)</span><span class="token punctuation">)</span>            resp<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">"Content-Length"</span><span class="token punctuation">,</span> strconv<span class="token punctuation">.</span><span class="token function">FormatInt</span><span class="token punctuation">(</span><span class="token function">int64</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>newPayload<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//错误回调 ：关闭real_server时测试，错误回调</span>    errFunc <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        http<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> <span class="token string">"ErrorHandler error:"</span><span class="token operator">+</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token operator">&amp;</span>httputil<span class="token punctuation">.</span>ReverseProxy<span class="token punctuation">{</span>        Director<span class="token punctuation">:</span>       director<span class="token punctuation">,</span>        Transport<span class="token punctuation">:</span>      transport<span class="token punctuation">,</span>        ModifyResponse<span class="token punctuation">:</span> modifyFunc<span class="token punctuation">,</span>        ErrorHandler<span class="token punctuation">:</span>   errFunc<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">singleJoiningSlash</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>    aslash <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">HasSuffix</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">)</span>    bslash <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">HasPrefix</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">)</span>    <span class="token keyword">switch</span> <span class="token punctuation">{</span>    <span class="token keyword">case</span> aslash <span class="token operator">&amp;&amp;</span> bslash<span class="token punctuation">:</span>        <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>    <span class="token keyword">case</span> <span class="token operator">!</span>aslash <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>bslash<span class="token punctuation">:</span>        <span class="token keyword">return</span> a <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> b    <span class="token punctuation">}</span>    <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">}</span></code></pre><h2 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h2><p><img src="./assets/1682734814260.png" alt="1682734814260"></p><p><img src="./assets/1682734777676.png" alt="1682734777676"></p><p><img src="./assets/1682734787746.png" alt="1682734787746"></p><p><img src="./assets/1682734804608.png" alt="1682734804608"></p><p><img src="./assets/1682734828906.png" alt="1682734828906"></p><p><img src="./assets/1682734860217.png" alt="1682734860217"> </p><h2 id="拓展功能"><a href="#拓展功能" class="headerlink" title="拓展功能"></a>拓展功能</h2><p><img src="./assets/1682735296935.png" alt="1682735296935"></p><h3 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h3><p><img src="./assets/1682735310243.png" alt="1682735310243"></p><h4 id="随机负载"><a href="#随机负载" class="headerlink" title="随机负载"></a>随机负载</h4><blockquote><p>random.go</p></blockquote><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> load_balance<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"errors"</span>    <span class="token string">"math/rand"</span><span class="token punctuation">)</span><span class="token keyword">type</span> RandomBalance <span class="token keyword">struct</span> <span class="token punctuation">{</span>    curIndex <span class="token builtin">int</span>    rss      <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span>    <span class="token comment" spellcheck="true">// 观察主体 -> 服务发现</span>    <span class="token comment" spellcheck="true">// conf LoadBalanceConf</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>RandomBalance<span class="token punctuation">)</span> <span class="token function">Add</span><span class="token punctuation">(</span>params <span class="token operator">...</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"param len 1 at least required"</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    addr <span class="token operator">:=</span> params<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    r<span class="token punctuation">.</span>rss <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>rss<span class="token punctuation">,</span> addr<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>RandomBalance<span class="token punctuation">)</span> <span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span><span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>rss<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">""</span>    <span class="token punctuation">}</span>    r<span class="token punctuation">.</span>curIndex<span class="token operator">=</span>rand<span class="token punctuation">.</span><span class="token function">Intn</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>rss<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> r<span class="token punctuation">.</span>rss<span class="token punctuation">[</span>r<span class="token punctuation">.</span>curIndex<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>RandomBalance<span class="token punctuation">)</span> <span class="token function">Get</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> r<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token boolean">nil</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// func (r *RandomBalance) SetConf(conf LoadBalanceConf){</span><span class="token comment" spellcheck="true">// }</span></code></pre><blockquote><p>random_test.go</p></blockquote><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> load_balance<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"fmt"</span>    <span class="token string">"testing"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">TestRandomBalance</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span><span class="token punctuation">{</span>    rb<span class="token operator">:=</span><span class="token operator">&amp;</span>RandomBalance<span class="token punctuation">{</span><span class="token punctuation">}</span>    rb<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:2003"</span><span class="token punctuation">)</span>    rb<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:2004"</span><span class="token punctuation">)</span>    rb<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:2005"</span><span class="token punctuation">)</span>    rb<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:2006"</span><span class="token punctuation">)</span>    rb<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:2007"</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><h4 id="轮询负载"><a href="#轮询负载" class="headerlink" title="轮询负载"></a>轮询负载</h4><p>![1682736631388](../Learn Go Programming by Building 11 Projects – Full Course/assets/1682736631388.png)</p><blockquote><p>round_robin.go</p></blockquote><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> load_balance<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"errors"</span> <span class="token punctuation">)</span><span class="token keyword">type</span> RoundRobinBalance <span class="token keyword">struct</span> <span class="token punctuation">{</span>    curIndex <span class="token builtin">int</span>    rss      <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span>    <span class="token comment" spellcheck="true">// 观察主体 -> 服务发现</span>    <span class="token comment" spellcheck="true">// conf LoadBalanceConf</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>RoundRobinBalance<span class="token punctuation">)</span> <span class="token function">Add</span><span class="token punctuation">(</span>params <span class="token operator">...</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"param len 1 at least required"</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    addr <span class="token operator">:=</span> params<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    r<span class="token punctuation">.</span>rss <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>rss<span class="token punctuation">,</span> addr<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>RoundRobinBalance<span class="token punctuation">)</span> <span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>rss<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">""</span>    <span class="token punctuation">}</span>    lens <span class="token operator">:=</span> <span class="token function">len</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>rss<span class="token punctuation">)</span>    <span class="token keyword">if</span> r<span class="token punctuation">.</span>curIndex <span class="token operator">>=</span> lens <span class="token punctuation">{</span>        r<span class="token punctuation">.</span>curIndex <span class="token operator">=</span> <span class="token number">0</span>    <span class="token punctuation">}</span>    curAddr <span class="token operator">:=</span> r<span class="token punctuation">.</span>rss<span class="token punctuation">[</span>r<span class="token punctuation">.</span>curIndex<span class="token punctuation">]</span>    r<span class="token punctuation">.</span>curIndex <span class="token operator">=</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span>curIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> lens    <span class="token keyword">return</span> curAddr<span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>RoundRobinBalance<span class="token punctuation">)</span> <span class="token function">Get</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> r<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// func (r *RoundRobinBalance) SetConf(conf LoadBalanceConf){</span><span class="token comment" spellcheck="true">// }</span></code></pre><blockquote><p>round_robin_test.go</p></blockquote><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> load_balance<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"fmt"</span>    <span class="token string">"testing"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">TestRoundRobinBalance</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span><span class="token punctuation">{</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"start TestRoundRobinBalance"</span><span class="token punctuation">)</span>    rb<span class="token operator">:=</span><span class="token operator">&amp;</span>RoundRobinBalance<span class="token punctuation">{</span><span class="token punctuation">}</span>    rb<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:2003"</span><span class="token punctuation">)</span>    rb<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:2004"</span><span class="token punctuation">)</span>    rb<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:2005"</span><span class="token punctuation">)</span>    rb<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:2006"</span><span class="token punctuation">)</span>    rb<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:2007"</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><h4 id="加权轮询"><a href="#加权轮询" class="headerlink" title="加权轮询"></a>加权轮询</h4><blockquote><p>权重越高, 出现频率越高, 如果节点出现故障, 有效权重就降低</p></blockquote><p><img src="./assets/1682737758215.png" alt="1682737758215"></p><p><img src="./assets/1682737797159.png" alt="1682737797159"></p><blockquote><p>a-&gt;4+4-9=-1-&gt;b-&gt;6+3-9=0-&gt;c-&gt;…</p></blockquote><p><img src="./assets/1682737935553.png" alt="a->4+4-9=-1->b->6+3-9=0->c->..."></p><p><img src="./assets/1682737948298.png" alt="1682737948298"></p><blockquote><p>weight_round_robin.go</p></blockquote><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> load_balance<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"errors"</span>    <span class="token string">"strconv"</span><span class="token punctuation">)</span><span class="token keyword">type</span> WeightRoundRobinBalance <span class="token keyword">struct</span> <span class="token punctuation">{</span>    curIndex <span class="token builtin">int</span>    rss      <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>WeightNode    rsw      <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token comment" spellcheck="true">// 权重</span>    <span class="token comment" spellcheck="true">// 观察主体 -> 服务发现</span>    <span class="token comment" spellcheck="true">// conf LoadBalanceConf</span><span class="token punctuation">}</span><span class="token keyword">type</span> WeightNode <span class="token keyword">struct</span> <span class="token punctuation">{</span>    addr            <span class="token builtin">string</span>    weight          <span class="token builtin">int</span> <span class="token comment" spellcheck="true">// 权重</span>    currentWeight   <span class="token builtin">int</span> <span class="token comment" spellcheck="true">// 当前权重</span>    effectiveWeight <span class="token builtin">int</span> <span class="token comment" spellcheck="true">// 有效权重</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// params: [addr,weight]</span><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>WeightRoundRobinBalance<span class="token punctuation">)</span> <span class="token function">Add</span><span class="token punctuation">(</span>params <span class="token operator">...</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">2</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"param len 2 at least required"</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    parInt<span class="token punctuation">,</span> err <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">ParseInt</span><span class="token punctuation">(</span>params<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> err    <span class="token punctuation">}</span>    node <span class="token operator">:=</span> <span class="token operator">&amp;</span>WeightNode<span class="token punctuation">{</span>addr<span class="token punctuation">:</span> params<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> weight<span class="token punctuation">:</span> <span class="token function">int</span><span class="token punctuation">(</span>parInt<span class="token punctuation">)</span><span class="token punctuation">}</span>    node<span class="token punctuation">.</span>effectiveWeight <span class="token operator">=</span> node<span class="token punctuation">.</span>weight    r<span class="token punctuation">.</span>rss <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>rss<span class="token punctuation">,</span> node<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>WeightRoundRobinBalance<span class="token punctuation">)</span> <span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>    total <span class="token operator">:=</span> <span class="token number">0</span>    <span class="token keyword">var</span> best <span class="token operator">*</span>WeightNode    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>rss<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>        w <span class="token operator">:=</span> r<span class="token punctuation">.</span>rss<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        <span class="token comment" spellcheck="true">// 统计有效权重之和</span>        total <span class="token operator">+=</span> w<span class="token punctuation">.</span>effectiveWeight        <span class="token comment" spellcheck="true">// 变更节点临时权重为节点临时权重+有效权重</span>        w<span class="token punctuation">.</span>currentWeight <span class="token operator">+=</span> w<span class="token punctuation">.</span>effectiveWeight        <span class="token comment" spellcheck="true">// 有效权重默认与权重相同,通讯异常时-1,成功+1</span>        <span class="token comment" spellcheck="true">// todo</span>        <span class="token keyword">if</span> w<span class="token punctuation">.</span>effectiveWeight <span class="token operator">&lt;</span> w<span class="token punctuation">.</span>weight <span class="token punctuation">{</span>            w<span class="token punctuation">.</span>effectiveWeight<span class="token operator">++</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 选择当前临时权重最大的节点</span>        <span class="token keyword">if</span> best <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token operator">||</span> w<span class="token punctuation">.</span>currentWeight <span class="token operator">></span> best<span class="token punctuation">.</span>currentWeight <span class="token punctuation">{</span>            best <span class="token operator">=</span> w        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> best <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">""</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 变更临时权重为 临时权重-有效权重总和</span>    best<span class="token punctuation">.</span>currentWeight <span class="token operator">-=</span> total    <span class="token keyword">return</span> best<span class="token punctuation">.</span>addr<span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>WeightRoundRobinBalance<span class="token punctuation">)</span> <span class="token function">Get</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> r<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// func (r *WeightRoundRobinBalance) SetConf(conf LoadBalanceConf){</span><span class="token comment" spellcheck="true">// }</span></code></pre><blockquote><p>weight_round_robin_test.go</p></blockquote><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> load_balance<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"fmt"</span>    <span class="token string">"testing"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">TestWeightRoundRobinBalance</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"start TestWeightRoundRobinBalance"</span><span class="token punctuation">)</span>    rb <span class="token operator">:=</span> <span class="token operator">&amp;</span>WeightRoundRobinBalance<span class="token punctuation">{</span><span class="token punctuation">}</span>    rb<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:2003"</span><span class="token punctuation">,</span> <span class="token string">"10"</span><span class="token punctuation">)</span>    rb<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:2004"</span><span class="token punctuation">,</span> <span class="token string">"20"</span><span class="token punctuation">)</span>    rb<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:2005"</span><span class="token punctuation">,</span> <span class="token string">"40"</span><span class="token punctuation">)</span>      fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><h4 id="一致性hash负载"><a href="#一致性hash负载" class="headerlink" title="一致性hash负载"></a>一致性hash负载</h4><p><img src="./assets/1682739225696.png" alt="1682739225696"></p><p><img src="./assets/1682739232851.png" alt="1682739232851"></p><p><img src="./assets/1682739279971.png" alt="1682739279971"></p><p><img src="./assets/1682739312180.png" alt="1682739312180"></p><p><img src="./assets/1682739322190.png" alt="1682739322190">\</p><p><img src="./assets/1682739348382.png" alt="1682739348382"></p><blockquote><p>consistent_hash.go</p></blockquote><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> load_balance<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"fmt"</span>    <span class="token string">"testing"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">TestConsistentHashBalance</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"start TestConsistentHashBalance"</span><span class="token punctuation">)</span>    rb <span class="token operator">:=</span> <span class="token function">NewConsistentHashBalance</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span>    rb<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:2003"</span><span class="token punctuation">)</span>    rb<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:2004"</span><span class="token punctuation">)</span>    rb<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:2005"</span><span class="token punctuation">)</span>    rb<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:2006"</span><span class="token punctuation">)</span>    rb<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:2007"</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// url hash</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1:2002/base/getinfo"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1:2002/base/error"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1:2002/base/getinfo"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1:2002/base/changepwd"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// ip hash</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">"192.168.0.1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>rb<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><blockquote><p>consistent_hash_test.go</p></blockquote><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> load_balance<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"errors"</span>    <span class="token string">"hash/crc32"</span>    <span class="token string">"sort"</span>    <span class="token string">"strconv"</span>    <span class="token string">"sync"</span><span class="token punctuation">)</span><span class="token keyword">type</span> Hash <span class="token keyword">func</span><span class="token punctuation">(</span>data <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token builtin">uint32</span><span class="token keyword">type</span> UInt32Slice <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">uint32</span><span class="token keyword">func</span> <span class="token punctuation">(</span>s UInt32Slice<span class="token punctuation">)</span> <span class="token function">Len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>s UInt32Slice<span class="token punctuation">)</span> <span class="token function">Less</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>s UInt32Slice<span class="token punctuation">)</span> <span class="token function">Swap</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token keyword">type</span> ConsistentHashBalance <span class="token keyword">struct</span> <span class="token punctuation">{</span>    mux      sync<span class="token punctuation">.</span>RWMutex    hash     Hash              <span class="token comment" spellcheck="true">// 求hash的函数</span>    replicas <span class="token builtin">int</span>               <span class="token comment" spellcheck="true">// 复制因子</span>    keys     UInt32Slice       <span class="token comment" spellcheck="true">// 已排序的节点hash切片</span>    hashMap  <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">uint32</span><span class="token punctuation">]</span><span class="token builtin">string</span> <span class="token comment" spellcheck="true">// 节点hash和key的map,k:hash,v:key</span>    <span class="token comment" spellcheck="true">// 观察主体 -> 服务发现</span>    <span class="token comment" spellcheck="true">// conf LoadBalanceConf</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">NewConsistentHashBalance</span><span class="token punctuation">(</span>replicas <span class="token builtin">int</span><span class="token punctuation">,</span> fn Hash<span class="token punctuation">)</span> <span class="token operator">*</span>ConsistentHashBalance <span class="token punctuation">{</span>    m <span class="token operator">:=</span> <span class="token operator">&amp;</span>ConsistentHashBalance<span class="token punctuation">{</span>        replicas<span class="token punctuation">:</span> replicas<span class="token punctuation">,</span>        hash<span class="token punctuation">:</span>     fn<span class="token punctuation">,</span>        hashMap<span class="token punctuation">:</span>  <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">uint32</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> m<span class="token punctuation">.</span>hash <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 最多32位,保证是2^32-1环</span>        m<span class="token punctuation">.</span>hash <span class="token operator">=</span> crc32<span class="token punctuation">.</span>ChecksumIEEE    <span class="token punctuation">}</span>    <span class="token keyword">return</span> m<span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 添加缓存节点,参数为节点key,如ip</span><span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>ConsistentHashBalance<span class="token punctuation">)</span> <span class="token function">Add</span><span class="token punctuation">(</span>params <span class="token operator">...</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"param len 1 least"</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    addr <span class="token operator">:=</span> params<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    c<span class="token punctuation">.</span>mux<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">defer</span> c<span class="token punctuation">.</span>mux<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 结合复制因子计算所有虚拟节点的hash值,并存入m.keys中,同时在m.hashMap中保存哈希值和key的映射</span>    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> c<span class="token punctuation">.</span>replicas<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>        hash <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">hash</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>strconv<span class="token punctuation">.</span><span class="token function">Itoa</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">+</span> addr<span class="token punctuation">)</span><span class="token punctuation">)</span>        c<span class="token punctuation">.</span>keys <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>keys<span class="token punctuation">,</span> hash<span class="token punctuation">)</span>        c<span class="token punctuation">.</span>hashMap<span class="token punctuation">[</span>hash<span class="token punctuation">]</span> <span class="token operator">=</span> addr    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 对所有虚拟节点的哈希值进行排序,方便二分查找</span>    sort<span class="token punctuation">.</span><span class="token function">Sort</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>keys<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>ConsistentHashBalance<span class="token punctuation">)</span> <span class="token function">IsEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">len</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>keys<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 根据给定对象获取最靠近它的那个节点</span><span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>ConsistentHashBalance<span class="token punctuation">)</span> <span class="token function">Get</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> c<span class="token punctuation">.</span><span class="token function">IsEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">,</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"node is empty"</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    hash <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">hash</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 通过二分查找获取最优节点,第一个"服务器hash"值>':"数据(key)hash值"的就是"服务器节点"</span>    idx <span class="token operator">:=</span> sort<span class="token punctuation">.</span><span class="token function">Search</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>keys<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>i <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> c<span class="token punctuation">.</span>keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">>=</span> hash <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 如果查找结果 > 服务器节点哈希数组的最大索引,表示此时该对象哈希值位于最后一个节点之前,那么放入第一个节点中</span>    <span class="token keyword">if</span> idx <span class="token operator">==</span> <span class="token function">len</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>keys<span class="token punctuation">)</span> <span class="token punctuation">{</span>        idx <span class="token operator">=</span> <span class="token number">0</span>    <span class="token punctuation">}</span>    c<span class="token punctuation">.</span>mux<span class="token punctuation">.</span><span class="token function">RLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">defer</span> c<span class="token punctuation">.</span>mux<span class="token punctuation">.</span><span class="token function">RUnlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> c<span class="token punctuation">.</span>hashMap<span class="token punctuation">[</span>c<span class="token punctuation">.</span>keys<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// func (c *ConsistentHashBalance) SetConf(conf LoadBalanceConf){</span><span class="token comment" spellcheck="true">//     c.conf=conf</span><span class="token comment" spellcheck="true">// }</span><span class="token comment" spellcheck="true">// func (c *ConsistentHashBalance) Update(){</span><span class="token comment" spellcheck="true">// }</span></code></pre><h3 id="反向代理-负载均衡"><a href="#反向代理-负载均衡" class="headerlink" title="反向代理+负载均衡"></a>反向代理+负载均衡</h3><p><img src="./assets/1682751217801.png" alt="1682751217801"></p><p><img src="./assets/1682751228908.png" alt="1682751228908"></p><p><img src="./assets/1682751237814.png" alt="1682751237814"></p><p><img src="./assets/1682752230173.png" alt="1682752230173"></p><p><img src="./assets/1682753107058.png" alt="1682753107058"></p><blockquote><p>interface.go</p></blockquote><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> load_balance<span class="token keyword">type</span> LoadBalance <span class="token keyword">interface</span> <span class="token punctuation">{</span>    <span class="token function">Add</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span>    <span class="token function">Get</span><span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// todo 后期补充服务发现</span>    <span class="token comment" spellcheck="true">// Update()</span><span class="token punctuation">}</span></code></pre><blockquote><p>factory.go</p></blockquote><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> load_balance<span class="token keyword">type</span> LbType <span class="token builtin">int</span><span class="token keyword">const</span> <span class="token punctuation">(</span>    LbRandom LbType <span class="token operator">=</span> <span class="token boolean">iota</span>    LbRoundRobin    LbWeightRoundRobin    LbConsistentHash<span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">LoadBalanceFactory</span><span class="token punctuation">(</span>lbType LbType<span class="token punctuation">)</span> LoadBalance <span class="token punctuation">{</span>    <span class="token keyword">switch</span> lbType <span class="token punctuation">{</span>    <span class="token keyword">case</span> LbRandom<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token operator">&amp;</span>RandomBalance<span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token keyword">case</span> LbConsistentHash<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token function">NewConsistentHashBalance</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span>    <span class="token keyword">case</span> LbRoundRobin<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token operator">&amp;</span>RoundRobinBalance<span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token keyword">case</span> LbWeightRoundRobin<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token operator">&amp;</span>WeightRoundRobinBalance<span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token keyword">default</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token operator">&amp;</span>RandomBalance<span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><blockquote><p>main.go</p></blockquote><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"bytes"</span>    <span class="token string">"io/ioutil"</span>    <span class="token string">"load_balance"</span>    <span class="token string">"log"</span>    <span class="token string">"net"</span>    <span class="token string">"net/http"</span>    <span class="token string">"net/http/httputil"</span>    <span class="token string">"net/url"</span>    <span class="token string">"strconv"</span>    <span class="token string">"strings"</span>    <span class="token string">"time"</span><span class="token punctuation">)</span><span class="token keyword">var</span> addr <span class="token operator">=</span> <span class="token string">"127.0.0.1:2001"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    rb <span class="token operator">:=</span> load_balance<span class="token punctuation">.</span><span class="token function">LoadBalanceFactory</span><span class="token punctuation">(</span>load_balance<span class="token punctuation">.</span>LbRandom<span class="token punctuation">)</span>    rb<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1:2010"</span><span class="token punctuation">)</span>    rb<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1:9010"</span><span class="token punctuation">)</span>     <span class="token comment" spellcheck="true">// if err := rb.Add("http://127.0.0.1:2010", "20"); err != nil {</span>    <span class="token comment" spellcheck="true">//     log.Panicln(err)</span>    <span class="token comment" spellcheck="true">// }</span>    <span class="token comment" spellcheck="true">// if err := rb.Add("http://127.0.0.1:9010", "10"); err != nil {</span>    <span class="token comment" spellcheck="true">//     log.Panicln(err)</span>    <span class="token comment" spellcheck="true">// }</span>    proxy <span class="token operator">:=</span> <span class="token function">NewMultipleHostsReverseProxy</span><span class="token punctuation">(</span>rb<span class="token punctuation">)</span>    log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Starting httpserver at "</span> <span class="token operator">+</span> addr<span class="token punctuation">)</span>    log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span>addr<span class="token punctuation">,</span> proxy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">var</span> transport <span class="token operator">=</span> <span class="token operator">&amp;</span>http<span class="token punctuation">.</span>Transport<span class="token punctuation">{</span>    DialContext<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token operator">&amp;</span>net<span class="token punctuation">.</span>Dialer<span class="token punctuation">{</span>        Timeout<span class="token punctuation">:</span>   <span class="token number">30</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//连接超时</span>        KeepAlive<span class="token punctuation">:</span> <span class="token number">30</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//长连接超时时间</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>DialContext<span class="token punctuation">,</span>    MaxIdleConns<span class="token punctuation">:</span>          <span class="token number">100</span><span class="token punctuation">,</span>              <span class="token comment" spellcheck="true">//最大空闲连接</span>    IdleConnTimeout<span class="token punctuation">:</span>       <span class="token number">90</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//空闲超时时间</span>    TLSHandshakeTimeout<span class="token punctuation">:</span>   <span class="token number">10</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//tls握手超时时间</span>    ExpectContinueTimeout<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">//100-continue 超时时间</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">NewMultipleHostsReverseProxy</span><span class="token punctuation">(</span>lb load_balance<span class="token punctuation">.</span>LoadBalance<span class="token punctuation">)</span> <span class="token operator">*</span>httputil<span class="token punctuation">.</span>ReverseProxy <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//请求协调者</span>    director <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>req <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>        nextAddr<span class="token punctuation">,</span> err <span class="token operator">:=</span> lb<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>RemoteAddr<span class="token punctuation">)</span>        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token string">"get next addr fail"</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        target<span class="token punctuation">,</span> err <span class="token operator">:=</span> url<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>nextAddr<span class="token punctuation">)</span>        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>        <span class="token punctuation">}</span>        targetQuery <span class="token operator">:=</span> target<span class="token punctuation">.</span>RawQuery        req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Scheme <span class="token operator">=</span> target<span class="token punctuation">.</span>Scheme        req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Host <span class="token operator">=</span> target<span class="token punctuation">.</span>Host        req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path <span class="token operator">=</span> <span class="token function">singleJoiningSlash</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span>Path<span class="token punctuation">,</span> req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path<span class="token punctuation">)</span>        <span class="token keyword">if</span> targetQuery <span class="token operator">==</span> <span class="token string">""</span> <span class="token operator">||</span> req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>RawQuery <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">{</span>            req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>RawQuery <span class="token operator">=</span> targetQuery <span class="token operator">+</span> req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>RawQuery        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>RawQuery <span class="token operator">=</span> targetQuery <span class="token operator">+</span> <span class="token string">"&amp;"</span> <span class="token operator">+</span> req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>RawQuery        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> ok <span class="token operator">:=</span> req<span class="token punctuation">.</span>Header<span class="token punctuation">[</span><span class="token string">"User-Agent"</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span>            req<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">"User-Agent"</span><span class="token punctuation">,</span> <span class="token string">"user-agent"</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//更改内容</span>    modifyFunc <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>resp <span class="token operator">*</span>http<span class="token punctuation">.</span>Response<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//请求以下命令：curl 'http://127.0.0.1:2002/error'</span>        <span class="token keyword">if</span> resp<span class="token punctuation">.</span>StatusCode <span class="token operator">!=</span> <span class="token number">200</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//获取内容</span>            oldPayload<span class="token punctuation">,</span> err <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadAll</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>Body<span class="token punctuation">)</span>            <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> err            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//追加内容</span>            newPayload <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">"StatusCode error:"</span> <span class="token operator">+</span> <span class="token function">string</span><span class="token punctuation">(</span>oldPayload<span class="token punctuation">)</span><span class="token punctuation">)</span>            resp<span class="token punctuation">.</span>Body <span class="token operator">=</span> ioutil<span class="token punctuation">.</span><span class="token function">NopCloser</span><span class="token punctuation">(</span>bytes<span class="token punctuation">.</span><span class="token function">NewBuffer</span><span class="token punctuation">(</span>newPayload<span class="token punctuation">)</span><span class="token punctuation">)</span>            resp<span class="token punctuation">.</span>ContentLength <span class="token operator">=</span> <span class="token function">int64</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>newPayload<span class="token punctuation">)</span><span class="token punctuation">)</span>            resp<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">"Content-Length"</span><span class="token punctuation">,</span> strconv<span class="token punctuation">.</span><span class="token function">FormatInt</span><span class="token punctuation">(</span><span class="token function">int64</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>newPayload<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">nil</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//错误回调 ：关闭real_server时测试，错误回调</span>    errFunc <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        http<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> <span class="token string">"ErrorHandler error:"</span><span class="token operator">+</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token operator">&amp;</span>httputil<span class="token punctuation">.</span>ReverseProxy<span class="token punctuation">{</span>        Director<span class="token punctuation">:</span>       director<span class="token punctuation">,</span>        Transport<span class="token punctuation">:</span>      transport<span class="token punctuation">,</span>        ModifyResponse<span class="token punctuation">:</span> modifyFunc<span class="token punctuation">,</span>        ErrorHandler<span class="token punctuation">:</span>   errFunc<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">singleJoiningSlash</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>    aslash <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">HasSuffix</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">)</span>    bslash <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">HasPrefix</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">)</span>    <span class="token keyword">switch</span> <span class="token punctuation">{</span>    <span class="token keyword">case</span> aslash <span class="token operator">&amp;&amp;</span> bslash<span class="token punctuation">:</span>        <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>    <span class="token keyword">case</span> <span class="token operator">!</span>aslash <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>bslash<span class="token punctuation">:</span>        <span class="token keyword">return</span> a <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> b    <span class="token punctuation">}</span>    <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">}</span></code></pre><p><img src="./assets/1682753210847.png" alt="1682753210847"></p>]]></content>
      
      
      <categories>
          
          <category> golang </category>
          
          <category> gateway </category>
          
          <category> 反向代理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> golang </tag>
            
            <tag> gateway </tag>
            
            <tag> 反向代理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/28/backend/golang/learn-go-programming-by-building-11-projects-full-course/4/simple-slackbot-to-calculate-age/"/>
      <url>/2023/04/28/backend/golang/learn-go-programming-by-building-11-projects-full-course/4/simple-slackbot-to-calculate-age/</url>
      
        <content type="html"><![CDATA[<h1 id="4-Simple-SlackBot-To-Calculate-Age"><a href="#4-Simple-SlackBot-To-Calculate-Age" class="headerlink" title="4-Simple SlackBot To Calculate Age"></a>4-Simple SlackBot To Calculate Age</h1><h1 id="init"><a href="#init" class="headerlink" title="init"></a>init</h1><p><img src="1682687895664.png" alt="1682687895664"></p><p><img src="1682687922085.png" alt="1682687922085"></p><p><img src="1682689572362.png" alt="1682689572362"><br><img src="1682689589992.png" alt="1682689589992"></p><p><img src="1682689639307.png" alt="1682689639307"><br><img src="1682689701355.png" alt="1682689701355"></p><p><img src="1682689842080.png" alt="1682689842080"></p><p><img src="1682689837306.png" alt="1682689837306"></p><p><img src="1682689913148.png" alt="1682689913148"> </p><p><img src="1682689934678.png" alt="1682689934678"></p><pre class=" language-go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"context"</span>    <span class="token string">"fmt"</span>    <span class="token string">"github.com/shomali11/slacker"</span>    <span class="token string">"log"</span>    <span class="token string">"os"</span>    <span class="token string">"strconv"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">printCommandEvents</span><span class="token punctuation">(</span>analyticsChannle <span class="token operator">&lt;-</span><span class="token keyword">chan</span> <span class="token operator">*</span>slacker<span class="token punctuation">.</span>CommandEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">for</span> event <span class="token operator">:=</span> <span class="token keyword">range</span> analyticsChannle <span class="token punctuation">{</span>        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Command Evenets"</span><span class="token punctuation">)</span>        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>Timestamp<span class="token punctuation">)</span>        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>Command<span class="token punctuation">)</span>        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>Parameters<span class="token punctuation">)</span>        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>Event<span class="token punctuation">)</span>        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    os<span class="token punctuation">.</span><span class="token function">Setenv</span><span class="token punctuation">(</span><span class="token string">"SLACK_BOT_TOKEN"</span><span class="token punctuation">,</span> <span class="token string">"xoxb-5197737830801-5185338014034-TFTAQS8qJWW1zueZRBukI81O"</span><span class="token punctuation">)</span>    os<span class="token punctuation">.</span><span class="token function">Setenv</span><span class="token punctuation">(</span><span class="token string">"SLACK_APP_TOKEN"</span><span class="token punctuation">,</span> <span class="token string">"xapp-1-A055F3LAFQS-5187782968548-f901916532b72eb33481e9069b6d92d119c99e986368619c084528246e4d94c4"</span><span class="token punctuation">)</span>    bot <span class="token operator">:=</span> slacker<span class="token punctuation">.</span><span class="token function">NewClient</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span><span class="token function">Getenv</span><span class="token punctuation">(</span><span class="token string">"SLACK_BOT_TOKEN"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span><span class="token function">Getenv</span><span class="token punctuation">(</span><span class="token string">"SLACK_APP_TOKEN"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">go</span> <span class="token function">printCommandEvents</span><span class="token punctuation">(</span>bot<span class="token punctuation">.</span><span class="token function">CommandEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    bot<span class="token punctuation">.</span><span class="token function">Command</span><span class="token punctuation">(</span><span class="token string">"my bot is &lt;year>"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>slacker<span class="token punctuation">.</span>CommandDefinition<span class="token punctuation">{</span>        Description<span class="token punctuation">:</span> <span class="token string">"yob calculator"</span><span class="token punctuation">,</span>        Examples<span class="token punctuation">:</span>    <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">"my yot is 2020"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>        Handler<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span>botCtx slacker<span class="token punctuation">.</span>BotContext<span class="token punctuation">,</span> request slacker<span class="token punctuation">.</span>Request<span class="token punctuation">,</span> response slacker<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">)</span> <span class="token punctuation">{</span>            year <span class="token operator">:=</span> request<span class="token punctuation">.</span><span class="token function">Param</span><span class="token punctuation">(</span><span class="token string">"year"</span><span class="token punctuation">)</span>            yob<span class="token punctuation">,</span> err <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span>year<span class="token punctuation">)</span>            <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>                <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>            <span class="token punctuation">}</span>            age <span class="token operator">:=</span> <span class="token number">2021</span> <span class="token operator">-</span> yob            r <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"age is %d"</span><span class="token punctuation">,</span> age<span class="token punctuation">)</span>            response<span class="token punctuation">.</span><span class="token function">Reply</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    ctx<span class="token punctuation">,</span> cancel <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">WithCancel</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">defer</span> <span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    err <span class="token operator">:=</span> bot<span class="token punctuation">.</span><span class="token function">Listen</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><blockquote><p>没啥用</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>udemy-java微服务-googlecloud</title>
      <link href="/2023/03/02/backend/java/udemy-java-wei-fu-wu-googlecloud/udemy-java-wei-fu-wu-googlecloud/udemy-java-wei-fu-wu-googlecloud/"/>
      <url>/2023/03/02/backend/java/udemy-java-wei-fu-wu-googlecloud/udemy-java-wei-fu-wu-googlecloud/udemy-java-wei-fu-wu-googlecloud/</url>
      
        <content type="html"><![CDATA[<h1 id="introduction"><a href="#introduction" class="headerlink" title="introduction"></a>introduction</h1><p><img src="img_3.png" alt="img_3.png"><br><img src="img.png" alt="干净(clean)的六边形架构"><img src="img_1.png" alt="kafka"><img src="img_2.png" alt="将使用kafka实现saga模式"><img src="img_4.png" alt="outbox实现一致性,发布订阅"><br><img src="img_5.png" alt="img_5.png"></p><ul><li>springboot微服务</li><li>六边形架构</li><li>DDD 领域驱动</li><li>kfk</li><li>SAGA(事务)</li><li>OutBox</li><li>CQRS</li><li>k8s 自动化部署,容器编排 </li><li>google cloud &amp; google kubernetes engine(GKE) </li></ul>]]></content>
      
      
      <categories>
          
          <category> micro </category>
          
          <category> 后端 </category>
          
          <category> java </category>
          
          <category> 微服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> micro </tag>
            
            <tag> 微服务 </tag>
            
            <tag> 后端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>udemy-micro-node</title>
      <link href="/2023/03/02/backend/udemy-micro-node/udemy-micro-node/udemy-micro-node/"/>
      <url>/2023/03/02/backend/udemy-micro-node/udemy-micro-node/udemy-micro-node/</url>
      
        <content type="html"><![CDATA[<h1 id="01-Fundamental-Ideas-Around-Microservices"><a href="#01-Fundamental-Ideas-Around-Microservices" class="headerlink" title="01 Fundamental Ideas Around Microservices"></a>01 Fundamental Ideas Around Microservices</h1><h2 id="what-is-microservices"><a href="#what-is-microservices" class="headerlink" title="what is microservices"></a>what is microservices</h2><p><img src="img.png" alt="微服务架构"><img src="img_1.png" alt="单体"><img src="img_2.png" alt="单个微服务应用"><img src="img_3.png" alt="img_3.png"></p><h2 id="data-in-microservices"><a href="#data-in-microservices" class="headerlink" title="data in microservices"></a>data in microservices</h2><p><img src="img_4.png" alt="微服务之间的数据管理"><img src="img_5.png" alt="img_5.png"><br><img src="img_6.png" alt="不要让一个服务直接访问另一个服务的数据库"></p><h3 id="两个重点-1-每个服务有自己的数据库-如果必要-2-不能直接访问别的应用的数据库"><a href="#两个重点-1-每个服务有自己的数据库-如果必要-2-不能直接访问别的应用的数据库" class="headerlink" title="两个重点: 1,每个服务有自己的数据库(如果必要);2,不能直接访问别的应用的数据库"></a>两个重点: 1,每个服务有自己的数据库(如果必要);2,不能直接访问别的应用的数据库</h3><p><img src="img_7.png" alt="img_7.png"><img src="img_8.png" alt="为什么每个应用单独一个数据库"></p><ol><li>所有应用共享数据库,则数据库的扩展变得很难,压力更大</li><li>如果可以访问别的应用的数据库,则服务之间耦合,无法做到微服务的子应用独立运行,一旦崩溃,所有耦合的应用都会一起崩溃</li><li>不同团队开发微服务的不同子服务,如果直接访问他应用的数据库,获取的数据的格式和使用方式会失去规范(团队间需要额外沟通)</li></ol>]]></content>
      
      
      <categories>
          
          <category> node </category>
          
          <category> 前端 </category>
          
          <category> micro </category>
          
          <category> 微服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node </tag>
            
            <tag> 前端 </tag>
            
            <tag> micro </tag>
            
            <tag> 微服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>udemy-threejs</title>
      <link href="/2023/02/26/frontend/udemy-threejs/udemy-threejs/udemy-threejs/"/>
      <url>/2023/02/26/frontend/udemy-threejs/udemy-threejs/udemy-threejs/</url>
      
        <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p><img src="img.png" alt="他用的是git base终端"></p><h2 id="安装vs-git-ts"><a href="#安装vs-git-ts" class="headerlink" title="安装vs,git,ts"></a>安装vs,git,ts</h2><pre class=" language-shell"><code class="language-shell"># 建议使用最新版ts,其他包的types定义才能兼容npm i -g typescript </code></pre><p><img src="img_1.png" alt="视频里使用的npm版本是6(node14?),我的是8,不知道会不会有问题"><br><img src="img_2.png" alt="tsc -v查看版本"></p><h1 id="ts部分"><a href="#ts部分" class="headerlink" title="ts部分"></a>ts部分</h1><h2 id="foo-ts-编译"><a href="#foo-ts-编译" class="headerlink" title="foo.ts 编译"></a>foo.ts 编译</h2><p><img src="img_3.png" alt="tsc就是ts文件编译器"></p><h3 id="编译生成js"><a href="#编译生成js" class="headerlink" title="编译生成js"></a>编译生成js</h3><pre class=" language-ts"><code class="language-ts"><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span>bar<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token string">"hello"</span> <span class="token operator">+</span> bar<span class="token punctuation">}</span><span class="token keyword">let</span> baz <span class="token operator">=</span> <span class="token string">'abc'</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">foo</span><span class="token punctuation">(</span>baz<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre><pre class=" language-shell"><code class="language-shell"># 编译tsc foo.ts</code></pre><p><img src="img_4.png" alt="报错是因为同时打开的文件里都有声明同一个变量(foo.js和foo.ts),在vscode里关掉一个就行"><br><img src="img_5.png" alt="img_5.png"><br><img src="img_6.png" alt="变量名由来"></p><h2 id="类型注释"><a href="#类型注释" class="headerlink" title="类型注释"></a>类型注释</h2><pre class=" language-ts"><code class="language-ts"><span class="token comment" spellcheck="true">// 声明为字符串类型</span><span class="token comment" spellcheck="true">// function foo(bar: string) {</span><span class="token comment" spellcheck="true">// 声明为指定字符</span><span class="token comment" spellcheck="true">// function foo(bar: 'bus' | 'car') {</span><span class="token comment" spellcheck="true">// 声明为指定字符或数字</span><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span>bar<span class="token punctuation">:</span> <span class="token string">'bus'</span> <span class="token operator">|</span> <span class="token string">'car'</span> <span class="token operator">|</span> <span class="token keyword">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token string">"hello"</span> <span class="token operator">+</span> bar<span class="token punctuation">}</span><span class="token keyword">let</span> baz <span class="token operator">=</span> <span class="token string">'abc'</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token string">'bus'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </code></pre><h2 id="自定义类型"><a href="#自定义类型" class="headerlink" title="自定义类型"></a>自定义类型</h2><pre class=" language-ts"><code class="language-ts"><span class="token comment" spellcheck="true">// 自定义类型</span><span class="token comment" spellcheck="true">// interface Quux {</span><span class="token comment" spellcheck="true">//     quuz: string</span><span class="token comment" spellcheck="true">//     corge: number</span><span class="token comment" spellcheck="true">// }</span><span class="token comment" spellcheck="true">// type和interface基本一致 </span>type Quux <span class="token operator">=</span> <span class="token punctuation">{</span>  quuz<span class="token punctuation">:</span> <span class="token keyword">string</span>  corge<span class="token punctuation">:</span> <span class="token keyword">number</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 声明为自定义类型</span><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span>bar<span class="token punctuation">:</span> Quux<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// return "hello" + bar</span>  <span class="token keyword">return</span> <span class="token string">"hello   "</span> <span class="token operator">+</span> bar<span class="token punctuation">.</span>corge <span class="token operator">+</span> <span class="token string">"  "</span> <span class="token operator">+</span> bar<span class="token punctuation">.</span>quuz<span class="token punctuation">}</span><span class="token keyword">let</span> baz <span class="token operator">=</span> <span class="token punctuation">{</span>  quuz<span class="token punctuation">:</span> <span class="token string">'abc'</span><span class="token punctuation">,</span>  corge<span class="token punctuation">:</span> <span class="token number">123</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 声明是哪种对象</span><span class="token keyword">let</span> baz1<span class="token punctuation">:</span> Quux <span class="token operator">=</span> <span class="token punctuation">{</span>  quuz<span class="token punctuation">:</span> <span class="token string">'abc1'</span><span class="token punctuation">,</span>  corge<span class="token punctuation">:</span> <span class="token number">1231</span><span class="token punctuation">}</span><span class="token keyword">let</span> baz2 <span class="token operator">=</span> <span class="token operator">&lt;</span>Quux<span class="token operator">></span><span class="token punctuation">{</span>  quuz<span class="token punctuation">:</span> <span class="token string">'abc2'</span><span class="token punctuation">,</span>  corge<span class="token punctuation">:</span> <span class="token number">1232</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">foo</span><span class="token punctuation">(</span>baz<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">foo</span><span class="token punctuation">(</span>baz1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">foo</span><span class="token punctuation">(</span>baz2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre><h3 id="type和interface的区别"><a href="#type和interface的区别" class="headerlink" title="type和interface的区别"></a>type和interface的区别</h3><h4 id="鼠标悬停时-type显示的信息更详细"><a href="#鼠标悬停时-type显示的信息更详细" class="headerlink" title="鼠标悬停时,type显示的信息更详细"></a>鼠标悬停时,type显示的信息更详细</h4><p><img src="img_7.png" alt="type"><br><img src="img_8.png" alt="interface"></p><h4 id="interface可以把多个地方的定义合并-type不行"><a href="#interface可以把多个地方的定义合并-type不行" class="headerlink" title="interface可以把多个地方的定义合并,type不行"></a>interface可以把多个地方的定义合并,type不行</h4><p> <img src="img_9.png" alt="img_9.png"><br><img src="img_10.png" alt="img_10.png"> </p><h2 id="class"><a href="#class" class="headerlink" title="class"></a>class</h2><pre class=" language-ts"><code class="language-ts"><span class="token comment" spellcheck="true">// type和interface基本一致 </span>type Quux <span class="token operator">=</span> <span class="token punctuation">{</span>    quuz<span class="token punctuation">:</span> <span class="token keyword">string</span>    corge<span class="token punctuation">:</span> <span class="token keyword">number</span><span class="token punctuation">}</span> <span class="token keyword">class</span> <span class="token class-name">Grault</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> graply<span class="token punctuation">:</span> <span class="token keyword">string</span>    <span class="token keyword">constructor</span><span class="token punctuation">(</span>quux<span class="token punctuation">:</span> Quux<span class="token punctuation">,</span> waldo<span class="token punctuation">:</span> <span class="token keyword">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>graply <span class="token operator">=</span> quux<span class="token punctuation">.</span>quuz <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> quux<span class="token punctuation">.</span>corge <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> waldo    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">getGrapply</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>graply    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">let</span> baz <span class="token operator">=</span> <span class="token punctuation">{</span>    quuz<span class="token punctuation">:</span> <span class="token string">'abc'</span><span class="token punctuation">,</span>    corge<span class="token punctuation">:</span> <span class="token number">123</span><span class="token punctuation">}</span><span class="token keyword">let</span> fred<span class="token punctuation">:</span> Grault <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Grault</span><span class="token punctuation">(</span>baz<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fred<span class="token punctuation">.</span><span class="token function">getGrapply</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> fred<span class="token punctuation">.</span><span class="token function">getGrapply</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Ts Crash Course<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><img src="img_11.png" alt="img_11.png"></p><h1 id="threejs-1"><a href="#threejs-1" class="headerlink" title="threejs-1"></a>threejs-1</h1><p><img src="img_12.png" alt="img_12.png"></p><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p><img src="img_13.png" alt="img_13.png"></p><pre class=" language-shell"><code class="language-shell">npm i three or yarn add threeor pnpm i three</code></pre><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>client.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h3><p><img src="img_14.png" alt="img_14.png"></p><h2 id="新增文件"><a href="#新增文件" class="headerlink" title="新增文件"></a>新增文件</h2><pre class=" language-shell"><code class="language-shell">pnpm i @types/node pnpm i express @types/express# ts编译server文件夹下的文件tsc -p src/server# 启动servernode ./dist/server/server.js# ts编译clienttsc -p ./src/client</code></pre><h3 id="src-client"><a href="#src-client" class="headerlink" title="src/client/"></a>src/client/</h3><pre class=" language-json5"><code class="language-json5">// src\server\tsconfig.json{    "compilerOptions": {        "target": "ES2019",        "module": "commonjs",        "outDir": "../../dist/server",        "sourceMap": true,        "esModuleInterop": true    },    "include": [        "**/*.ts"    ]}</code></pre><pre class=" language-json5"><code class="language-json5">// src\client\tsconfig.json{  "compilerOptions": {    // threejs官方支持es6    "target": "ES6",    "module": "ES6",    "outDir": "../../dist/client",    // 引入类型定义,在我们安装的threejs里    "baseUrl": ".",    "paths": {        // 指定/build/three.module.js的文件路径        "/build/three.module.js": [            "../../node_module/three/build/three.module.js"        ]    },    "moduleResolution": "node"  },  "include": [    "**/*.ts"  ]}</code></pre><pre class=" language-ts"><code class="language-ts"><span class="token comment" spellcheck="true">// src\server\server.ts</span><span class="token keyword">import</span> http <span class="token keyword">from</span> <span class="token string">'http'</span><span class="token keyword">import</span> path <span class="token keyword">from</span> <span class="token string">'path'</span><span class="token keyword">import</span> express <span class="token keyword">from</span> <span class="token string">'express'</span><span class="token keyword">const</span> port<span class="token punctuation">:</span> <span class="token keyword">number</span> <span class="token operator">=</span> <span class="token number">3000</span><span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token punctuation">{</span>  <span class="token keyword">private</span> server<span class="token punctuation">:</span> http<span class="token punctuation">.</span>Server  <span class="token keyword">private</span> port<span class="token punctuation">:</span> <span class="token keyword">number</span>  <span class="token keyword">constructor</span><span class="token punctuation">(</span>port<span class="token punctuation">:</span> <span class="token keyword">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>port <span class="token operator">=</span> port    <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token keyword">static</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'../client'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">'/build/three.module.js'</span><span class="token punctuation">,</span> express<span class="token punctuation">.</span><span class="token keyword">static</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>            __dirname<span class="token punctuation">,</span> <span class="token string">'../../node_modules/three/build/three.module.js'</span>    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>server <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">http<span class="token punctuation">.</span>Server</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token keyword">public</span> <span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>port<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`Server listening on port </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>port<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">new</span> <span class="token class-name">App</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> </code></pre><pre class=" language-ts"><code class="language-ts"><span class="token comment" spellcheck="true">// src\client\client.ts   </span><span class="token comment" spellcheck="true">// @ts-ignore</span><span class="token keyword">import</span> <span class="token operator">*</span> as THREE <span class="token keyword">from</span> <span class="token string">'/build/three.module.js'</span><span class="token keyword">const</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Scene</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> camera <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>PerspectiveCamera</span><span class="token punctuation">(</span>        <span class="token number">75</span><span class="token punctuation">,</span>        window<span class="token punctuation">.</span>innerWidth <span class="token operator">/</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">,</span>        <span class="token number">0.1</span><span class="token punctuation">,</span>        <span class="token number">1000</span><span class="token punctuation">)</span>camera<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">2</span><span class="token keyword">const</span> renderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>WebGLRenderer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>renderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">,</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>renderer<span class="token punctuation">.</span>domElement<span class="token punctuation">)</span><span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BoxGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  color<span class="token punctuation">:</span> <span class="token number">0x00ff00</span><span class="token punctuation">,</span>  wireframe<span class="token punctuation">:</span> <span class="token keyword">true</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">const</span> cube <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>geometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">)</span>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'resize'</span><span class="token punctuation">,</span> onWindowResize<span class="token punctuation">,</span> <span class="token keyword">false</span><span class="token punctuation">)</span><span class="token keyword">function</span> <span class="token function">onWindowResize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  camera<span class="token punctuation">.</span>aspect <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth <span class="token operator">/</span> window<span class="token punctuation">.</span>innerHeight  camera<span class="token punctuation">.</span><span class="token function">updateProjectionMatrix</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  renderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">,</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>animate<span class="token punctuation">)</span>  cube<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>x <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">0.01</span>  cube<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>y <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">0.01</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  renderer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">,</span> camera<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="img_15.png" alt="img_15.png"><br><img src="img_16.png" alt="img_16.png"><br><img src="img_17.png" alt="img_17.png"></p><h2 id="添加拖动控制"><a href="#添加拖动控制" class="headerlink" title="添加拖动控制"></a>添加拖动控制</h2><pre class=" language-ts"><code class="language-ts"><span class="token comment" spellcheck="true">// src\client\client.ts   </span><span class="token comment" spellcheck="true">// @ts-ignore</span><span class="token keyword">import</span> <span class="token operator">*</span> as THREE <span class="token keyword">from</span> <span class="token string">'/build/three.module.js'</span><span class="token comment" spellcheck="true">// 用于控制的js </span><span class="token keyword">import</span> <span class="token punctuation">{</span> OrbitControls <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'/jsm/controls/OrbitControls'</span><span class="token comment" spellcheck="true">// ... </span><span class="token comment" spellcheck="true">// 添加control</span><span class="token keyword">const</span> controls <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrbitControls</span><span class="token punctuation">(</span>camera<span class="token punctuation">,</span> renderer<span class="token punctuation">.</span>domElement<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// ... </span><span class="token keyword">function</span> <span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>animate<span class="token punctuation">)</span>    cube<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>x <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">0.01</span>    cube<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>y <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">0.01</span>    <span class="token comment" spellcheck="true">// 添加control</span>    controls<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// ...</span></code></pre><pre class=" language-ts"><code class="language-ts"><span class="token comment" spellcheck="true">// src\server\server.ts</span><span class="token keyword">import</span> http <span class="token keyword">from</span> <span class="token string">'http'</span><span class="token keyword">import</span> path <span class="token keyword">from</span> <span class="token string">'path'</span><span class="token keyword">import</span> express <span class="token keyword">from</span> <span class="token string">'express'</span><span class="token keyword">const</span> port<span class="token punctuation">:</span> <span class="token keyword">number</span> <span class="token operator">=</span> <span class="token number">3000</span><span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> server<span class="token punctuation">:</span> http<span class="token punctuation">.</span>Server    <span class="token keyword">private</span> port<span class="token punctuation">:</span> <span class="token keyword">number</span>    <span class="token keyword">constructor</span><span class="token punctuation">(</span>port<span class="token punctuation">:</span> <span class="token keyword">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>port <span class="token operator">=</span> port        <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token keyword">static</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'../client'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">'/build/three.module.js'</span><span class="token punctuation">,</span> express<span class="token punctuation">.</span><span class="token keyword">static</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>            __dirname<span class="token punctuation">,</span> <span class="token string">'../../node_modules/three/build/three.module.js'</span>        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">'/jsm/controls/OrbitControls'</span><span class="token punctuation">,</span> express<span class="token punctuation">.</span><span class="token keyword">static</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>            __dirname<span class="token punctuation">,</span> <span class="token string">'../../node_modules/three/examples/jsm/controls/OrbitControls.js'</span>        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token keyword">this</span><span class="token punctuation">.</span>server <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">http<span class="token punctuation">.</span>Server</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// </span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">new</span> <span class="token class-name">App</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> </code></pre><p><img src="img_18.png" alt="现在可以通过鼠标拖拽来拖动画面了"></p><h2 id="监听ts变化-自动编译"><a href="#监听ts变化-自动编译" class="headerlink" title="监听ts变化,自动编译"></a>监听ts变化,自动编译</h2><pre class=" language-shell"><code class="language-shell"># ts编译server文件夹下的文件tsc -p src/server -w # ts编译clienttsc -p ./src/client -w# 监听server.jsnpm i nodemon --save-devnodemon ./dist/server/server.js # 安装concurrentlynpm i concurrently --save-dev</code></pre><h3 id="使用concurrently来同时运行"><a href="#使用concurrently来同时运行" class="headerlink" title="使用concurrently来同时运行"></a>使用concurrently来同时运行</h3><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"dev"</span><span class="token operator">:</span> <span class="token string">"concurrently -k \"tsc -p ./src/server -w\" \"tsc -p ./src/client -w\" \"nodemon ./dist/server/server.js\""</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><img src="img_19.png" alt="并发执行命令"></p><h1 id="scene-camera-and-renderer"><a href="#scene-camera-and-renderer" class="headerlink" title="scene,camera and renderer"></a>scene,camera and renderer</h1><p><img src="img_20.png" alt="场景/相机/渲染器"><br><img src="img_21.png" alt="img_21.png"></p><h2 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h2><h3 id="设置背景"><a href="#设置背景" class="headerlink" title="设置背景"></a>设置背景</h3><p><img src="img_22.png" alt="设置画布背景色"></p><h3 id="设置渲染大小"><a href="#设置渲染大小" class="headerlink" title="设置渲染大小"></a>设置渲染大小</h3><p><img src="img_24.png" alt="img_24.png"><br><img src="img_23.png" alt="img_23.png"></p><h3 id="自定义渲染位置"><a href="#自定义渲染位置" class="headerlink" title="自定义渲染位置"></a>自定义渲染位置</h3><p><img src="img_26.png" alt="img_26.png"><br><img src="img_25.png" alt="img_25.png"></p><h3 id="渲染三视图"><a href="#渲染三视图" class="headerlink" title="渲染三视图"></a>渲染三视图</h3><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector"><span class="token class">.c</span> </span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c1<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c2<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c3<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c4<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>client.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><img src="img_29.png" alt="相机"> </p><pre class=" language-ts"><code class="language-ts"><span class="token comment" spellcheck="true">// src\client\client.ts  </span><span class="token comment" spellcheck="true">// import * as THREE from 'three'</span><span class="token comment" spellcheck="true">// @ts-ignore</span><span class="token keyword">import</span> <span class="token operator">*</span> as THREE <span class="token keyword">from</span> <span class="token string">'/build/three.module.js'</span><span class="token comment" spellcheck="true">// 用于控制的js</span><span class="token comment" spellcheck="true">// @ts-ignore</span><span class="token comment" spellcheck="true">// import { OrbitControls } from 'three/example/jsm/controls/OrbitControls'</span><span class="token keyword">import</span> <span class="token punctuation">{</span> OrbitControls <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'/jsm/controls/OrbitControls'</span><span class="token keyword">const</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Scene</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 设置背景</span><span class="token comment" spellcheck="true">// scene.background = new THREE.Color(0x00ddd0b)</span><span class="token keyword">const</span> camera1<span class="token punctuation">:</span> THREE<span class="token punctuation">.</span>PerspectiveCamera <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>PerspectiveCamera</span><span class="token punctuation">(</span>    <span class="token number">75</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 视野</span>    <span class="token comment" spellcheck="true">// window.innerWidth / window.innerHeight, // 纵横比 </span>    <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 纵横比 </span>    <span class="token comment" spellcheck="true">// 2, // 近平面</span>    <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 近平面</span>    <span class="token number">10</span>  <span class="token comment" spellcheck="true">// 远平面</span>    <span class="token comment" spellcheck="true">// 1000 // 远平面</span><span class="token punctuation">)</span><span class="token keyword">const</span> camera2<span class="token punctuation">:</span> THREE<span class="token punctuation">.</span>OrthographicCamera <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>OrthographicCamera</span><span class="token punctuation">(</span>    <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token keyword">const</span> camera3<span class="token punctuation">:</span> THREE<span class="token punctuation">.</span>OrthographicCamera <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>OrthographicCamera</span><span class="token punctuation">(</span>    <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token keyword">const</span> camera4<span class="token punctuation">:</span> THREE<span class="token punctuation">.</span>OrthographicCamera <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>OrthographicCamera</span><span class="token punctuation">(</span>    <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 相机的位置</span>camera1<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">2</span>camera2<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">2</span><span class="token comment" spellcheck="true">// 看向y轴</span>camera2<span class="token punctuation">.</span><span class="token function">lookAt</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>camera3<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">2</span>camera4<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">2</span>camera4<span class="token punctuation">.</span><span class="token function">lookAt</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 获得我们自己定义在html上定义的canvas</span><span class="token keyword">const</span> canvas1<span class="token punctuation">:</span> HTMLCanvasElement <span class="token operator">=</span> <span class="token operator">&lt;</span>HTMLCanvasElement<span class="token operator">></span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"c1"</span><span class="token punctuation">)</span><span class="token keyword">const</span> canvas2<span class="token punctuation">:</span> HTMLCanvasElement <span class="token operator">=</span> <span class="token operator">&lt;</span>HTMLCanvasElement<span class="token operator">></span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"c2"</span><span class="token punctuation">)</span><span class="token keyword">const</span> canvas3<span class="token punctuation">:</span> HTMLCanvasElement <span class="token operator">=</span> <span class="token operator">&lt;</span>HTMLCanvasElement<span class="token operator">></span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"c3"</span><span class="token punctuation">)</span><span class="token keyword">const</span> canvas4<span class="token punctuation">:</span> HTMLCanvasElement <span class="token operator">=</span> <span class="token operator">&lt;</span>HTMLCanvasElement<span class="token operator">></span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"c4"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 默认渲染器</span><span class="token keyword">const</span> renderer1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>WebGLRenderer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 渲染到画布</span>    canvas<span class="token punctuation">:</span> canvas1<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 渲染的区域大小</span><span class="token comment" spellcheck="true">// renderer.setSize(window.innerWidth, window.innerHeight)</span>renderer1<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token keyword">const</span> renderer2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>WebGLRenderer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 渲染到画布</span>    canvas<span class="token punctuation">:</span> canvas2<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span>renderer2<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token keyword">const</span> renderer3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>WebGLRenderer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 渲染到画布</span>    canvas<span class="token punctuation">:</span> canvas3<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span>renderer3<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token keyword">const</span> renderer4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>WebGLRenderer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 渲染到画布</span>    canvas<span class="token punctuation">:</span> canvas4<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span>renderer4<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 将渲染器放入html</span><span class="token comment" spellcheck="true">// document.body.appendChild(renderer.domElement)</span><span class="token comment" spellcheck="true">// 添加control</span><span class="token keyword">const</span> controls <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrbitControls</span><span class="token punctuation">(</span>camera1<span class="token punctuation">,</span> renderer1<span class="token punctuation">.</span>domElement<span class="token punctuation">)</span><span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BoxGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    color<span class="token punctuation">:</span> <span class="token number">0x00ff00</span><span class="token punctuation">,</span>    wireframe<span class="token punctuation">:</span> <span class="token keyword">true</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">const</span> cube <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>geometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">)</span><span class="token keyword">function</span> <span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>animate<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 旋转动画 </span>    <span class="token comment" spellcheck="true">// cube.rotation.x += 0.01 </span>    cube<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>y <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">0.01</span>    <span class="token comment" spellcheck="true">// 添加control</span>    controls<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    renderer1<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">,</span> camera1<span class="token punctuation">)</span>    renderer2<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">,</span> camera2<span class="token punctuation">)</span>    renderer3<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">,</span> camera3<span class="token punctuation">)</span>    renderer4<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">,</span> camera4<span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="img_30.png" alt="img_30.png"></p><h1 id="animation-loop"><a href="#animation-loop" class="headerlink" title="animation loop"></a>animation loop</h1><h2 id="去掉动画代码"><a href="#去掉动画代码" class="headerlink" title="去掉动画代码"></a>去掉动画代码</h2><pre class=" language-ts"><code class="language-ts"><span class="token comment" spellcheck="true">// src\client\client.ts  </span><span class="token comment" spellcheck="true">// import * as THREE from 'three'</span><span class="token comment" spellcheck="true">// @ts-ignore</span><span class="token keyword">import</span> <span class="token operator">*</span> as THREE <span class="token keyword">from</span> <span class="token string">'/build/three.module.js'</span><span class="token comment" spellcheck="true">// 用于控制的js</span><span class="token comment" spellcheck="true">// @ts-ignore</span><span class="token comment" spellcheck="true">// import { OrbitControls } from 'three/example/jsm/controls/OrbitControls'</span><span class="token keyword">import</span> <span class="token punctuation">{</span> OrbitControls <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'/jsm/controls/OrbitControls'</span><span class="token keyword">const</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Scene</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 设置背景</span><span class="token comment" spellcheck="true">// scene.background = new THREE.Color(0x00ddd0b)</span><span class="token keyword">const</span> camera<span class="token punctuation">:</span> THREE<span class="token punctuation">.</span>PerspectiveCamera <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>PerspectiveCamera</span><span class="token punctuation">(</span>    <span class="token number">75</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 视野</span>    <span class="token comment" spellcheck="true">// window.innerWidth / window.innerHeight, // 纵横比 </span>    window<span class="token punctuation">.</span>innerWidth <span class="token operator">/</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 纵横比 </span>    <span class="token comment" spellcheck="true">// 2, // 近平面</span>    <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 近平面</span>    <span class="token number">10</span>  <span class="token comment" spellcheck="true">// 远平面</span>    <span class="token comment" spellcheck="true">// 1000 // 远平面</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 相机的位置</span>camera<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">2</span><span class="token comment" spellcheck="true">// 获得我们自己定义在html上定义的canvas</span><span class="token keyword">const</span> canvas<span class="token punctuation">:</span> HTMLCanvasElement <span class="token operator">=</span> <span class="token operator">&lt;</span>HTMLCanvasElement<span class="token operator">></span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"c1"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 默认渲染器</span><span class="token keyword">const</span> renderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>WebGLRenderer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 渲染到画布</span>    canvas<span class="token punctuation">:</span> canvas<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 渲染的区域大小</span>renderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">,</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 添加control</span><span class="token keyword">const</span> controls <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrbitControls</span><span class="token punctuation">(</span>camera<span class="token punctuation">,</span> renderer<span class="token punctuation">.</span>domElement<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 当control被改变(鼠标拖动),渲染图像的变化,但是此时视口大小的变化不会让图像刷新 </span>controls<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'change'</span><span class="token punctuation">,</span> render<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 视口大小改变,重新渲染</span>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'resize'</span><span class="token punctuation">,</span> onWindowResize<span class="token punctuation">,</span> <span class="token keyword">false</span><span class="token punctuation">)</span><span class="token keyword">function</span> <span class="token function">onWindowResize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    camera<span class="token punctuation">.</span>aspect <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth <span class="token operator">/</span> window<span class="token punctuation">.</span>innerHeight    camera<span class="token punctuation">.</span><span class="token function">updateProjectionMatrix</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    renderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">,</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span>    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BoxGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    color<span class="token punctuation">:</span> <span class="token number">0x00ff00</span><span class="token punctuation">,</span>    wireframe<span class="token punctuation">:</span> <span class="token keyword">true</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">const</span> cube <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>geometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">)</span><span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    renderer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">,</span> camera<span class="token punctuation">)</span><span class="token punctuation">}</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="img_31.png" alt="这段代码开启一个动画循环"><br><img src="img_32.png" alt="index.html"></p><h1 id="左上角的帧率显示"><a href="#左上角的帧率显示" class="headerlink" title="左上角的帧率显示"></a>左上角的帧率显示</h1><p><img src="img_33.png" alt="将使用的库"></p><pre class=" language-ts"><code class="language-ts"><span class="token comment" spellcheck="true">// src\client\client.ts   </span><span class="token comment" spellcheck="true">// @ts-ignore</span><span class="token keyword">import</span> <span class="token operator">*</span> as THREE <span class="token keyword">from</span> <span class="token string">'/build/three.module.js'</span><span class="token comment" spellcheck="true">// 用于控制的js</span><span class="token comment" spellcheck="true">// @ts-ignore </span><span class="token keyword">import</span> <span class="token punctuation">{</span> OrbitControls <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'/jsm/controls/OrbitControls'</span><span class="token comment" spellcheck="true">// @ts-ignore </span><span class="token keyword">import</span> Stats <span class="token keyword">from</span> <span class="token string">'/jsm/libs/stats.module'</span><span class="token keyword">const</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Scene</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 设置背景</span><span class="token comment" spellcheck="true">// scene.background = new THREE.Color(0x00ddd0b)</span><span class="token keyword">const</span> camera<span class="token punctuation">:</span> THREE<span class="token punctuation">.</span>PerspectiveCamera <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>PerspectiveCamera</span><span class="token punctuation">(</span>    <span class="token number">75</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 视野</span>    <span class="token comment" spellcheck="true">// window.innerWidth / window.innerHeight, // 纵横比 </span>    window<span class="token punctuation">.</span>innerWidth <span class="token operator">/</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 纵横比 </span>    <span class="token comment" spellcheck="true">// 2, // 近平面</span>    <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 近平面</span>    <span class="token number">10</span>  <span class="token comment" spellcheck="true">// 远平面</span>    <span class="token comment" spellcheck="true">// 1000 // 远平面</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 相机的位置</span>camera<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">2</span><span class="token comment" spellcheck="true">// 获得我们自己定义在html上定义的canvas</span><span class="token keyword">const</span> canvas<span class="token punctuation">:</span> HTMLCanvasElement <span class="token operator">=</span> <span class="token operator">&lt;</span>HTMLCanvasElement<span class="token operator">></span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"c1"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 默认渲染器</span><span class="token keyword">const</span> renderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>WebGLRenderer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 渲染到画布</span>    canvas<span class="token punctuation">:</span> canvas<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 渲染的区域大小</span>renderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">,</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 添加control</span><span class="token keyword">const</span> controls <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrbitControls</span><span class="token punctuation">(</span>camera<span class="token punctuation">,</span> renderer<span class="token punctuation">.</span>domElement<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 当control被改变(鼠标拖动),渲染图像的变化,但是此时视口大小的变化不会让图像刷新 </span>controls<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'change'</span><span class="token punctuation">,</span> render<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 视口大小改变,重新渲染</span>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'resize'</span><span class="token punctuation">,</span> onWindowResize<span class="token punctuation">,</span> <span class="token keyword">false</span><span class="token punctuation">)</span><span class="token keyword">function</span> <span class="token function">onWindowResize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    camera<span class="token punctuation">.</span>aspect <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth <span class="token operator">/</span> window<span class="token punctuation">.</span>innerHeight    camera<span class="token punctuation">.</span><span class="token function">updateProjectionMatrix</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    renderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">,</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span>    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BoxGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    color<span class="token punctuation">:</span> <span class="token number">0x00ff00</span><span class="token punctuation">,</span>    wireframe<span class="token punctuation">:</span> <span class="token keyword">true</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">const</span> cube <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>geometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">)</span><span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 更新统计面板方式2,每次重新渲染就统计一次</span>    <span class="token comment" spellcheck="true">// 实现更细粒度的统计监控</span>    <span class="token comment" spellcheck="true">// stats.begin()</span>    renderer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">,</span> camera<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// stats.end()</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// render()</span><span class="token comment" spellcheck="true">// 添加左上角小状态栏(统计面板)</span><span class="token keyword">const</span> stats <span class="token operator">=</span> <span class="token function">Stats</span><span class="token punctuation">(</span><span class="token punctuation">)</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>stats<span class="token punctuation">.</span>dom<span class="token punctuation">)</span><span class="token keyword">function</span> <span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>animate<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 旋转动画 </span>    <span class="token comment" spellcheck="true">// cube.rotation.x += 0.01</span>    <span class="token comment" spellcheck="true">// cube.rotation.y += 0.01</span>    <span class="token comment" spellcheck="true">// // 添加control</span>    <span class="token comment" spellcheck="true">// controls.update()</span>    <span class="token comment" spellcheck="true">// render()</span>    <span class="token comment" spellcheck="true">// 更新统计面板</span>    stats<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><pre class=" language-ts"><code class="language-ts">        <span class="token comment" spellcheck="true">// server.ts</span>        app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">'/jsm/libs/stats.module'</span><span class="token punctuation">,</span> express<span class="token punctuation">.</span><span class="token keyword">static</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>            __dirname<span class="token punctuation">,</span> <span class="token string">'../../node_modules/three/examples/jsm/libs/stats.module.js'</span>        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> </code></pre><p><img src="img_34.png" alt="img_34.png"></p><h1 id="右上角添加选项界面"><a href="#右上角添加选项界面" class="headerlink" title="右上角添加选项界面"></a>右上角添加选项界面</h1><p><img src="img_35.png" alt="将使用的库"><img src="img_36.png" alt="我没有改(好像是自带),这个是从@types/dat.gui复制到libs然后改名"></p><pre class=" language-shell"><code class="language-shell">npm i @types/dat.gui</code></pre><pre class=" language-ts"><code class="language-ts"><span class="token comment" spellcheck="true">// src\client\client.ts   </span><span class="token comment" spellcheck="true">// @ts-ignore</span><span class="token keyword">import</span> <span class="token operator">*</span> as THREE <span class="token keyword">from</span> <span class="token string">'/build/three.module.js'</span><span class="token comment" spellcheck="true">// 用于控制的js</span><span class="token comment" spellcheck="true">// @ts-ignore </span><span class="token keyword">import</span> <span class="token punctuation">{</span> OrbitControls <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'/jsm/controls/OrbitControls'</span><span class="token comment" spellcheck="true">// @ts-ignore </span><span class="token keyword">import</span> Stats <span class="token keyword">from</span> <span class="token string">'/jsm/libs/stats.module'</span><span class="token comment" spellcheck="true">// @ts-ignore </span><span class="token keyword">import</span> <span class="token punctuation">{</span> GUI <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'/jsm/libs/dat.gui.module'</span><span class="token keyword">const</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Scene</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 设置背景</span><span class="token comment" spellcheck="true">// scene.background = new THREE.Color(0x00ddd0b)</span><span class="token keyword">const</span> camera<span class="token punctuation">:</span> THREE<span class="token punctuation">.</span>PerspectiveCamera <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>PerspectiveCamera</span><span class="token punctuation">(</span>    <span class="token number">75</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 视野</span>    <span class="token comment" spellcheck="true">// window.innerWidth / window.innerHeight, // 纵横比 </span>    window<span class="token punctuation">.</span>innerWidth <span class="token operator">/</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 纵横比 </span>    <span class="token comment" spellcheck="true">// 2, // 近平面</span>    <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 近平面</span>    <span class="token number">10</span>  <span class="token comment" spellcheck="true">// 远平面</span>    <span class="token comment" spellcheck="true">// 1000 // 远平面</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 相机的位置</span>camera<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">2</span><span class="token comment" spellcheck="true">// 获得我们自己定义在html上定义的canvas</span><span class="token keyword">const</span> canvas<span class="token punctuation">:</span> HTMLCanvasElement <span class="token operator">=</span> <span class="token operator">&lt;</span>HTMLCanvasElement<span class="token operator">></span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"c1"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 默认渲染器</span><span class="token keyword">const</span> renderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>WebGLRenderer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 渲染到画布</span>    canvas<span class="token punctuation">:</span> canvas<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 渲染的区域大小</span>renderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">,</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 添加control</span><span class="token keyword">const</span> controls <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrbitControls</span><span class="token punctuation">(</span>camera<span class="token punctuation">,</span> renderer<span class="token punctuation">.</span>domElement<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 当control被改变(鼠标拖动),渲染图像的变化,但是此时视口大小的变化不会让图像刷新 </span>controls<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'change'</span><span class="token punctuation">,</span> render<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 视口大小改变,重新渲染</span>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'resize'</span><span class="token punctuation">,</span> onWindowResize<span class="token punctuation">,</span> <span class="token keyword">false</span><span class="token punctuation">)</span><span class="token keyword">function</span> <span class="token function">onWindowResize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    camera<span class="token punctuation">.</span>aspect <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth <span class="token operator">/</span> window<span class="token punctuation">.</span>innerHeight    camera<span class="token punctuation">.</span><span class="token function">updateProjectionMatrix</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    renderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">,</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span>    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BoxGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    color<span class="token punctuation">:</span> <span class="token number">0x00ff00</span><span class="token punctuation">,</span>    wireframe<span class="token punctuation">:</span> <span class="token keyword">true</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">const</span> cube <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>geometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">)</span><span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 更新统计面板方式2,每次重新渲染就统计一次</span>    <span class="token comment" spellcheck="true">// 实现更细粒度的统计监控</span>    <span class="token comment" spellcheck="true">// stats.begin()</span>    renderer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">,</span> camera<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// stats.end()</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 添加左上角小状态栏(统计面板)</span><span class="token keyword">const</span> stats <span class="token operator">=</span> <span class="token function">Stats</span><span class="token punctuation">(</span><span class="token punctuation">)</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>stats<span class="token punctuation">.</span>dom<span class="token punctuation">)</span><span class="token keyword">const</span> gui <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 创建组</span><span class="token keyword">const</span> cubeFolder <span class="token operator">=</span> gui<span class="token punctuation">.</span><span class="token function">addFolder</span><span class="token punctuation">(</span><span class="token string">"Cube"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 添加对物体的x轴旋转的控制,范围是一圈(0-180°)</span><span class="token comment" spellcheck="true">// 0.01代表显示的数值精度</span><span class="token comment" spellcheck="true">// gui.add(cube.rotation, "x", 0, Math.PI * 2,0.01)</span><span class="token comment" spellcheck="true">// gui.add(cube.rotation, "y", 0, Math.PI * 2,0.01)</span><span class="token comment" spellcheck="true">// gui.add(cube.rotation, "z", 0, Math.PI * 2,0.01)</span><span class="token comment" spellcheck="true">// 添加到组</span>cubeFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">.</span>rotation<span class="token punctuation">,</span> <span class="token string">"x"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span>PI <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">)</span>cubeFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">.</span>rotation<span class="token punctuation">,</span> <span class="token string">"y"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span>PI <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">)</span>cubeFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">.</span>rotation<span class="token punctuation">,</span> <span class="token string">"z"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span>PI <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">)</span>cubeFolder<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 打开</span><span class="token comment" spellcheck="true">// 调整摄像机的组</span><span class="token keyword">const</span> cameraFolder <span class="token operator">=</span> gui<span class="token punctuation">.</span><span class="token function">addFolder</span><span class="token punctuation">(</span><span class="token string">"Camera"</span><span class="token punctuation">)</span>cameraFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>camera<span class="token punctuation">.</span>position<span class="token punctuation">,</span> <span class="token string">"x"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">)</span>cameraFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>camera<span class="token punctuation">.</span>position<span class="token punctuation">,</span> <span class="token string">"y"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">)</span>cameraFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>camera<span class="token punctuation">.</span>position<span class="token punctuation">,</span> <span class="token string">"z"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">)</span>cameraFolder<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">function</span> <span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>animate<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 旋转动画 </span>    <span class="token comment" spellcheck="true">// cube.rotation.x += 0.01</span>    <span class="token comment" spellcheck="true">// cube.rotation.y += 0.01</span>    <span class="token comment" spellcheck="true">// // 添加control</span>    controls<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 这个不开,gui没用</span>    <span class="token comment" spellcheck="true">// 更新统计面板</span>    stats<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="img_37.png" alt="img_37.png"></p><h1 id="object3D"><a href="#object3D" class="headerlink" title="object3D"></a>object3D</h1><pre class=" language-ts"><code class="language-ts"><span class="token comment" spellcheck="true">// src\client\client.ts   </span><span class="token comment" spellcheck="true">// @ts-ignore</span><span class="token keyword">import</span> <span class="token operator">*</span> as THREE <span class="token keyword">from</span> <span class="token string">'/build/three.module.js'</span><span class="token comment" spellcheck="true">// 用于控制的js</span><span class="token comment" spellcheck="true">// @ts-ignore </span><span class="token keyword">import</span> <span class="token punctuation">{</span> OrbitControls <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'/jsm/controls/OrbitControls'</span><span class="token comment" spellcheck="true">// @ts-ignore </span><span class="token keyword">import</span> Stats <span class="token keyword">from</span> <span class="token string">'/jsm/libs/stats.module'</span><span class="token comment" spellcheck="true">// @ts-ignore </span><span class="token keyword">import</span> <span class="token punctuation">{</span> GUI <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'/jsm/libs/dat.gui.module'</span><span class="token keyword">const</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Scene</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 坐标轴</span><span class="token keyword">var</span> axesHelper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>AxesHelper</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>axesHelper<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 设置背景</span><span class="token comment" spellcheck="true">// scene.background = new THREE.Color(0x00ddd0b)</span><span class="token keyword">const</span> camera<span class="token punctuation">:</span> THREE<span class="token punctuation">.</span>PerspectiveCamera <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>PerspectiveCamera</span><span class="token punctuation">(</span>    <span class="token number">75</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 视野</span>    <span class="token comment" spellcheck="true">// window.innerWidth / window.innerHeight, // 纵横比 </span>    window<span class="token punctuation">.</span>innerWidth <span class="token operator">/</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 纵横比 </span>    <span class="token comment" spellcheck="true">// 2, // 近平面</span>    <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 近平面</span>    <span class="token number">10</span>  <span class="token comment" spellcheck="true">// 远平面</span>    <span class="token comment" spellcheck="true">// 1000 // 远平面</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 相机的位置</span>camera<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">2</span><span class="token comment" spellcheck="true">// 获得我们自己定义在html上定义的canvas</span><span class="token keyword">const</span> canvas<span class="token punctuation">:</span> HTMLCanvasElement <span class="token operator">=</span> <span class="token operator">&lt;</span>HTMLCanvasElement<span class="token operator">></span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"c1"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 默认渲染器</span><span class="token keyword">const</span> renderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>WebGLRenderer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 渲染到画布</span>    canvas<span class="token punctuation">:</span> canvas<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 渲染的区域大小</span>renderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">,</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 添加control</span><span class="token keyword">const</span> controls <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrbitControls</span><span class="token punctuation">(</span>camera<span class="token punctuation">,</span> renderer<span class="token punctuation">.</span>domElement<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 当control被改变(鼠标拖动),渲染图像的变化,但是此时视口大小的变化不会让图像刷新 </span>controls<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'change'</span><span class="token punctuation">,</span> render<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 视口大小改变,重新渲染</span>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'resize'</span><span class="token punctuation">,</span> onWindowResize<span class="token punctuation">,</span> <span class="token keyword">false</span><span class="token punctuation">)</span><span class="token keyword">function</span> <span class="token function">onWindowResize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    camera<span class="token punctuation">.</span>aspect <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth <span class="token operator">/</span> window<span class="token punctuation">.</span>innerHeight    camera<span class="token punctuation">.</span><span class="token function">updateProjectionMatrix</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    renderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">,</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span>    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BoxGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    color<span class="token punctuation">:</span> <span class="token number">0x00ff00</span><span class="token punctuation">,</span>    wireframe<span class="token punctuation">:</span> <span class="token keyword">true</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">const</span> cube <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>geometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">)</span><span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 更新统计面板方式2,每次重新渲染就统计一次</span>    <span class="token comment" spellcheck="true">// 实现更细粒度的统计监控</span>    <span class="token comment" spellcheck="true">// stats.begin()</span>    renderer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">,</span> camera<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// stats.end()</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 添加左上角小状态栏(统计面板)</span><span class="token keyword">const</span> stats <span class="token operator">=</span> <span class="token function">Stats</span><span class="token punctuation">(</span><span class="token punctuation">)</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>stats<span class="token punctuation">.</span>dom<span class="token punctuation">)</span><span class="token keyword">const</span> gui <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 创建组</span><span class="token keyword">const</span> cubeFolder <span class="token operator">=</span> gui<span class="token punctuation">.</span><span class="token function">addFolder</span><span class="token punctuation">(</span><span class="token string">"Cube"</span><span class="token punctuation">)</span><span class="token keyword">const</span> cubeRotationFolder <span class="token operator">=</span> cubeFolder<span class="token punctuation">.</span><span class="token function">addFolder</span><span class="token punctuation">(</span><span class="token string">"Rotation"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 添加到组</span>cubeRotationFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">.</span>rotation<span class="token punctuation">,</span> <span class="token string">"x"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span>PI <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">)</span>cubeRotationFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">.</span>rotation<span class="token punctuation">,</span> <span class="token string">"y"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span>PI <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">)</span>cubeRotationFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">.</span>rotation<span class="token punctuation">,</span> <span class="token string">"z"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span>PI <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// cubeRotationFolder.open() // 打开 </span><span class="token keyword">const</span> cubePositonFolder <span class="token operator">=</span> cubeFolder<span class="token punctuation">.</span><span class="token function">addFolder</span><span class="token punctuation">(</span><span class="token string">"Position"</span><span class="token punctuation">)</span>cubePositonFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">.</span>position<span class="token punctuation">,</span> <span class="token string">"x"</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>cubePositonFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">.</span>position<span class="token punctuation">,</span> <span class="token string">"y"</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>cubePositonFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">.</span>position<span class="token punctuation">,</span> <span class="token string">"z"</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// cubePositonFolder.open()</span><span class="token keyword">const</span> cubeScaleFolder <span class="token operator">=</span> cubeFolder<span class="token punctuation">.</span><span class="token function">addFolder</span><span class="token punctuation">(</span><span class="token string">"Scale"</span><span class="token punctuation">)</span>cubeScaleFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">.</span>scale<span class="token punctuation">,</span> <span class="token string">"x"</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span>cubeScaleFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">.</span>scale<span class="token punctuation">,</span> <span class="token string">"y"</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span>cubeScaleFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">.</span>scale<span class="token punctuation">,</span> <span class="token string">"z"</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// cubeScaleFolder.open()  </span>cubeFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">,</span> <span class="token string">"visible"</span><span class="token punctuation">,</span> <span class="token keyword">true</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 物体是否可见</span>cubeFolder<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">function</span> <span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>animate<span class="token punctuation">)</span>     <span class="token comment" spellcheck="true">// // 添加control </span>    controls<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 这个不开,gui没用</span>    <span class="token comment" spellcheck="true">// 更新统计面板</span>    stats<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="img_38.png" alt="img_38.png"></p><h1 id="geometries-几何"><a href="#geometries-几何" class="headerlink" title="geometries 几何"></a>geometries 几何</h1><p><img src="img_39.png" alt="object3D改变的是变换矩阵,而本体没变"></p><pre class=" language-ts"><code class="language-ts"><span class="token comment" spellcheck="true">// src\client\client.ts   </span><span class="token comment" spellcheck="true">// @ts-ignore</span><span class="token keyword">import</span> <span class="token operator">*</span> as THREE <span class="token keyword">from</span> <span class="token string">'/build/three.module.js'</span><span class="token comment" spellcheck="true">// 用于控制的js</span><span class="token comment" spellcheck="true">// @ts-ignore </span><span class="token keyword">import</span> <span class="token punctuation">{</span> OrbitControls <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'/jsm/controls/OrbitControls'</span><span class="token comment" spellcheck="true">// @ts-ignore </span><span class="token keyword">import</span> Stats <span class="token keyword">from</span> <span class="token string">'/jsm/libs/stats.module'</span><span class="token comment" spellcheck="true">// @ts-ignore </span><span class="token keyword">import</span> <span class="token punctuation">{</span> GUI <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'/jsm/libs/dat.gui.module'</span><span class="token keyword">const</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Scene</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 坐标轴</span><span class="token keyword">var</span> axesHelper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>AxesHelper</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>axesHelper<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 设置背景</span><span class="token comment" spellcheck="true">// scene.background = new THREE.Color(0x00ddd0b)</span><span class="token keyword">const</span> camera<span class="token punctuation">:</span> THREE<span class="token punctuation">.</span>PerspectiveCamera <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>PerspectiveCamera</span><span class="token punctuation">(</span>    <span class="token number">75</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 视野</span>    <span class="token comment" spellcheck="true">// window.innerWidth / window.innerHeight, // 纵横比 </span>    window<span class="token punctuation">.</span>innerWidth <span class="token operator">/</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 纵横比 </span>    <span class="token comment" spellcheck="true">// 2, // 近平面</span>    <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 近平面</span>    <span class="token number">10</span>  <span class="token comment" spellcheck="true">// 远平面</span>    <span class="token comment" spellcheck="true">// 1000 // 远平面</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 相机的位置</span>camera<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">2</span><span class="token comment" spellcheck="true">// 获得我们自己定义在html上定义的canvas</span><span class="token keyword">const</span> canvas<span class="token punctuation">:</span> HTMLCanvasElement <span class="token operator">=</span> <span class="token operator">&lt;</span>HTMLCanvasElement<span class="token operator">></span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"c1"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 默认渲染器</span><span class="token keyword">const</span> renderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>WebGLRenderer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 渲染到画布</span>    canvas<span class="token punctuation">:</span> canvas<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 渲染的区域大小</span>renderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">,</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 添加control</span><span class="token keyword">const</span> controls <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrbitControls</span><span class="token punctuation">(</span>camera<span class="token punctuation">,</span> renderer<span class="token punctuation">.</span>domElement<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 当control被改变(鼠标拖动),渲染图像的变化,但是此时视口大小的变化不会让图像刷新 </span>controls<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'change'</span><span class="token punctuation">,</span> render<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 视口大小改变,重新渲染</span>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'resize'</span><span class="token punctuation">,</span> onWindowResize<span class="token punctuation">,</span> <span class="token keyword">false</span><span class="token punctuation">)</span><span class="token keyword">function</span> <span class="token function">onWindowResize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    camera<span class="token punctuation">.</span>aspect <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth <span class="token operator">/</span> window<span class="token punctuation">.</span>innerHeight    camera<span class="token punctuation">.</span><span class="token function">updateProjectionMatrix</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    renderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">,</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span>    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// const geometry = new THREE.BoxGeometry(1,2,3,4,5,6)</span><span class="token comment" spellcheck="true">// 还有带buffer的几何</span><span class="token keyword">const</span> boxGeometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BoxGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> sphereGeometry<span class="token punctuation">:</span> THREE<span class="token punctuation">.</span>SphereGeometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>SphereGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> icosahedronGeometry<span class="token punctuation">:</span> THREE<span class="token punctuation">.</span>IcosahedronGeometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>IcosahedronGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// console.dir(geometry)</span><span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    color<span class="token punctuation">:</span> <span class="token number">0x00ff00</span><span class="token punctuation">,</span>    wireframe<span class="token punctuation">:</span> <span class="token keyword">true</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">const</span> cube<span class="token punctuation">:</span> THREE<span class="token punctuation">.</span>Mesh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>boxGeometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span>cube<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">5</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">)</span><span class="token keyword">const</span> sphere<span class="token punctuation">:</span> THREE<span class="token punctuation">.</span>Mesh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>sphereGeometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span>sphere<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">5</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>sphere<span class="token punctuation">)</span><span class="token keyword">const</span> icosahedron<span class="token punctuation">:</span> THREE<span class="token punctuation">.</span>Mesh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>icosahedronGeometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>icosahedron<span class="token punctuation">)</span><span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 更新统计面板方式2,每次重新渲染就统计一次</span>    <span class="token comment" spellcheck="true">// 实现更细粒度的统计监控</span>    <span class="token comment" spellcheck="true">// stats.begin()</span>    renderer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">,</span> camera<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// stats.end()</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 添加左上角小状态栏(统计面板)</span><span class="token keyword">const</span> stats <span class="token operator">=</span> <span class="token function">Stats</span><span class="token punctuation">(</span><span class="token punctuation">)</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>stats<span class="token punctuation">.</span>dom<span class="token punctuation">)</span><span class="token keyword">const</span> gui <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 创建组</span><span class="token keyword">const</span> cubeFolder <span class="token operator">=</span> gui<span class="token punctuation">.</span><span class="token function">addFolder</span><span class="token punctuation">(</span><span class="token string">"Cube"</span><span class="token punctuation">)</span><span class="token keyword">const</span> cubeRotationFolder <span class="token operator">=</span> cubeFolder<span class="token punctuation">.</span><span class="token function">addFolder</span><span class="token punctuation">(</span><span class="token string">"Rotation"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 添加对物体的x轴旋转的控制,范围是一圈(0-180°)</span><span class="token comment" spellcheck="true">// 0.01代表显示的数值精度</span><span class="token comment" spellcheck="true">// gui.add(cube.rotation, "x", 0, Math.PI * 2,0.01)</span><span class="token comment" spellcheck="true">// gui.add(cube.rotation, "y", 0, Math.PI * 2,0.01)</span><span class="token comment" spellcheck="true">// gui.add(cube.rotation, "z", 0, Math.PI * 2,0.01)</span><span class="token comment" spellcheck="true">// 添加到组</span>cubeRotationFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">.</span>rotation<span class="token punctuation">,</span> <span class="token string">"x"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span>PI <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">)</span>cubeRotationFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">.</span>rotation<span class="token punctuation">,</span> <span class="token string">"y"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span>PI <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">)</span>cubeRotationFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">.</span>rotation<span class="token punctuation">,</span> <span class="token string">"z"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span>PI <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// cubeRotationFolder.open() // 打开 </span><span class="token keyword">const</span> cubePositonFolder <span class="token operator">=</span> cubeFolder<span class="token punctuation">.</span><span class="token function">addFolder</span><span class="token punctuation">(</span><span class="token string">"Position"</span><span class="token punctuation">)</span>cubePositonFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">.</span>position<span class="token punctuation">,</span> <span class="token string">"x"</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>cubePositonFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">.</span>position<span class="token punctuation">,</span> <span class="token string">"y"</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>cubePositonFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">.</span>position<span class="token punctuation">,</span> <span class="token string">"z"</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// cubePositonFolder.open()</span><span class="token keyword">const</span> cubeScaleFolder <span class="token operator">=</span> cubeFolder<span class="token punctuation">.</span><span class="token function">addFolder</span><span class="token punctuation">(</span><span class="token string">"Scale"</span><span class="token punctuation">)</span>cubeScaleFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">.</span>scale<span class="token punctuation">,</span> <span class="token string">"x"</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onFinishChange</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span>cube<span class="token punctuation">.</span>geometry<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>cubeScaleFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">.</span>scale<span class="token punctuation">,</span> <span class="token string">"y"</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span>cubeScaleFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">.</span>scale<span class="token punctuation">,</span> <span class="token string">"z"</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// cubeScaleFolder.open()  </span>cubeFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">,</span> <span class="token string">"visible"</span><span class="token punctuation">,</span> <span class="token keyword">true</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 物体是否可见</span>cubeFolder<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> cubeData <span class="token operator">=</span> <span class="token punctuation">{</span>    width<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    height<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    depth<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// segments就是各个轴的层数</span>    widthSegments<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    heightSegments<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    depthSegments<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token keyword">const</span> cubePropertiesFolder <span class="token operator">=</span> cubeFolder<span class="token punctuation">.</span><span class="token function">addFolder</span><span class="token punctuation">(</span><span class="token string">"Properties"</span><span class="token punctuation">)</span>cubePropertiesFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cubeData<span class="token punctuation">,</span> <span class="token string">'width'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>regenerateBoxGeometry<span class="token punctuation">)</span>cubePropertiesFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cubeData<span class="token punctuation">,</span> <span class="token string">'height'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>regenerateBoxGeometry<span class="token punctuation">)</span>cubePropertiesFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cubeData<span class="token punctuation">,</span> <span class="token string">'depth'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>regenerateBoxGeometry<span class="token punctuation">)</span>cubePropertiesFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cubeData<span class="token punctuation">,</span> <span class="token string">'widthSegments'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>regenerateBoxGeometry<span class="token punctuation">)</span>cubePropertiesFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cubeData<span class="token punctuation">,</span> <span class="token string">'heightSegments'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>regenerateBoxGeometry<span class="token punctuation">)</span>cubePropertiesFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cubeData<span class="token punctuation">,</span> <span class="token string">'depthSegments'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>regenerateBoxGeometry<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 重新渲染几何体</span><span class="token keyword">function</span> <span class="token function">regenerateBoxGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> newGeometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BoxGeometry</span><span class="token punctuation">(</span>        cubeData<span class="token punctuation">.</span>width<span class="token punctuation">,</span> cubeData<span class="token punctuation">.</span>height<span class="token punctuation">,</span> cubeData<span class="token punctuation">.</span>depth<span class="token punctuation">,</span> cubeData<span class="token punctuation">.</span>widthSegments<span class="token punctuation">,</span> cubeData<span class="token punctuation">.</span>heightSegments<span class="token punctuation">,</span> cubeData<span class="token punctuation">.</span>depthSegments<span class="token punctuation">,</span>    <span class="token punctuation">)</span>    cube<span class="token punctuation">.</span>geometry<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    cube<span class="token punctuation">.</span>geometry <span class="token operator">=</span> newGeometry<span class="token punctuation">}</span><span class="token keyword">const</span> sphereData <span class="token operator">=</span> <span class="token punctuation">{</span>    radius<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    widthSegments<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span>    heightSegments<span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span>    phiStart<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    phiLength<span class="token punctuation">:</span> Math<span class="token punctuation">.</span>PI <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span>    thetaStart<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    thetaLength<span class="token punctuation">:</span> Math<span class="token punctuation">.</span>PI<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token keyword">const</span> sphereFolder <span class="token operator">=</span> gui<span class="token punctuation">.</span><span class="token function">addFolder</span><span class="token punctuation">(</span><span class="token string">"Sphere"</span><span class="token punctuation">)</span><span class="token keyword">const</span> spherePropertiesFolder <span class="token operator">=</span> sphereFolder<span class="token punctuation">.</span><span class="token function">addFolder</span><span class="token punctuation">(</span><span class="token string">"Properties"</span><span class="token punctuation">)</span>spherePropertiesFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>sphereData<span class="token punctuation">,</span> <span class="token string">'radius'</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>regenerateSphereGeometry<span class="token punctuation">)</span>spherePropertiesFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>sphereData<span class="token punctuation">,</span> <span class="token string">'widthSegments'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>regenerateSphereGeometry<span class="token punctuation">)</span>spherePropertiesFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>sphereData<span class="token punctuation">,</span> <span class="token string">'heightSegments'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>regenerateSphereGeometry<span class="token punctuation">)</span>spherePropertiesFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>sphereData<span class="token punctuation">,</span> <span class="token string">'phiStart'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span>PI <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>regenerateSphereGeometry<span class="token punctuation">)</span>spherePropertiesFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>sphereData<span class="token punctuation">,</span> <span class="token string">'phiLength'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span>PI <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>regenerateSphereGeometry<span class="token punctuation">)</span>spherePropertiesFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>sphereData<span class="token punctuation">,</span> <span class="token string">'thetaStart'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span>PI<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>regenerateSphereGeometry<span class="token punctuation">)</span>spherePropertiesFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>sphereData<span class="token punctuation">,</span> <span class="token string">'thetaLength'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span>PI<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>regenerateSphereGeometry<span class="token punctuation">)</span>sphereFolder<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 重新渲染几何体</span><span class="token keyword">function</span> <span class="token function">regenerateSphereGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> newGeometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>SphereGeometry</span><span class="token punctuation">(</span>        sphereData<span class="token punctuation">.</span>radius<span class="token punctuation">,</span> sphereData<span class="token punctuation">.</span>widthSegments<span class="token punctuation">,</span> sphereData<span class="token punctuation">.</span>heightSegments<span class="token punctuation">,</span>        sphereData<span class="token punctuation">.</span>phiStart<span class="token punctuation">,</span> sphereData<span class="token punctuation">.</span>phiLength<span class="token punctuation">,</span> sphereData<span class="token punctuation">.</span>thetaStart<span class="token punctuation">,</span> sphereData<span class="token punctuation">.</span>thetaLength<span class="token punctuation">,</span>    <span class="token punctuation">)</span>    sphere<span class="token punctuation">.</span>geometry<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    sphere<span class="token punctuation">.</span>geometry <span class="token operator">=</span> newGeometry<span class="token punctuation">}</span><span class="token keyword">const</span> icosahedronData <span class="token operator">=</span> <span class="token punctuation">{</span>    radius<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    detail<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token keyword">const</span> icosahedronFolder <span class="token operator">=</span> gui<span class="token punctuation">.</span><span class="token function">addFolder</span><span class="token punctuation">(</span><span class="token string">"Icosahedron"</span><span class="token punctuation">)</span><span class="token keyword">const</span> icosahedronPropertiesFolder <span class="token operator">=</span> icosahedronFolder<span class="token punctuation">.</span><span class="token function">addFolder</span><span class="token punctuation">(</span><span class="token string">"Properties"</span><span class="token punctuation">)</span>icosahedronPropertiesFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>icosahedronData<span class="token punctuation">,</span> <span class="token string">'radius'</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>regenerateIcosahedronGeometry<span class="token punctuation">)</span>icosahedronPropertiesFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>icosahedronData<span class="token punctuation">,</span> <span class="token string">'detail'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">step</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>regenerateIcosahedronGeometry<span class="token punctuation">)</span>icosahedronFolder<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 重新渲染几何体</span><span class="token keyword">function</span> <span class="token function">regenerateIcosahedronGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> newGeometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>IcosahedronGeometry</span><span class="token punctuation">(</span>        icosahedronData<span class="token punctuation">.</span>radius<span class="token punctuation">,</span> icosahedronData<span class="token punctuation">.</span>detail    <span class="token punctuation">)</span>    icosahedron<span class="token punctuation">.</span>geometry<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    icosahedron<span class="token punctuation">.</span>geometry <span class="token operator">=</span> newGeometry<span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>animate<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 旋转动画 </span>    <span class="token comment" spellcheck="true">// cube.rotation.x += 0.01</span>    <span class="token comment" spellcheck="true">// cube.rotation.y += 0.01</span>    <span class="token comment" spellcheck="true">// // 添加control </span>    controls<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 这个不开,gui没用</span>    <span class="token comment" spellcheck="true">// 可以看出properties的方式改变属性,左侧框(代表变换矩阵)没有改变</span>    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"debug1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token string">"Matrix\n"</span> <span class="token operator">+</span> cube<span class="token punctuation">.</span>matrix<span class="token punctuation">.</span>elements<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/,/g</span><span class="token punctuation">,</span> <span class="token string">"\n"</span><span class="token punctuation">,</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 更新统计面板</span>    stats<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="img_40.png" alt="img_40.png"></p><h1 id="materials-材质"><a href="#materials-材质" class="headerlink" title="materials 材质"></a>materials 材质</h1><pre class=" language-ts"><code class="language-ts"><span class="token comment" spellcheck="true">// @ts-ignore</span><span class="token keyword">import</span> <span class="token operator">*</span> as THREE <span class="token keyword">from</span> <span class="token string">'/build/three.module.js'</span><span class="token comment" spellcheck="true">// 用于控制的js</span><span class="token comment" spellcheck="true">// @ts-ignore </span><span class="token keyword">import</span> <span class="token punctuation">{</span> OrbitControls <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'/jsm/controls/OrbitControls'</span><span class="token comment" spellcheck="true">// @ts-ignore </span><span class="token keyword">import</span> Stats <span class="token keyword">from</span> <span class="token string">'/jsm/libs/stats.module'</span><span class="token comment" spellcheck="true">// @ts-ignore </span><span class="token keyword">import</span> <span class="token punctuation">{</span> GUI <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'/jsm/libs/dat.gui.module'</span><span class="token keyword">const</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Scene</span><span class="token punctuation">(</span><span class="token punctuation">)</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>AxesHelper</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">const</span> camera <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>PerspectiveCamera</span><span class="token punctuation">(</span>    <span class="token number">75</span><span class="token punctuation">,</span>    window<span class="token punctuation">.</span>innerWidth <span class="token operator">/</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">,</span>    <span class="token number">0.1</span><span class="token punctuation">,</span>    <span class="token number">1000</span><span class="token punctuation">)</span>camera<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">3</span><span class="token keyword">const</span> renderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>WebGLRenderer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>renderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">,</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>renderer<span class="token punctuation">.</span>domElement<span class="token punctuation">)</span><span class="token keyword">new</span> <span class="token class-name">OrbitControls</span><span class="token punctuation">(</span>camera<span class="token punctuation">,</span> renderer<span class="token punctuation">.</span>domElement<span class="token punctuation">)</span><span class="token keyword">const</span> boxGeometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BoxGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> sphereGeometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>SphereGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> icosahedronGeometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>IcosahedronGeometry</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">const</span> planeGeometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>PlaneGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> torusKnotGeometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>TorusKnotGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// const material = new THREE.MeshBasicMaterial({</span><span class="token comment" spellcheck="true">//     // color: 0x00ff00,</span><span class="token comment" spellcheck="true">//     // wireframe: true,</span><span class="token comment" spellcheck="true">// })</span><span class="token keyword">const</span> material<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshNormalMaterial</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> cube <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>boxGeometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span>cube<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">5</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">)</span><span class="token keyword">const</span> sphere <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>sphereGeometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span>sphere<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">3</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>sphere<span class="token punctuation">)</span><span class="token keyword">const</span> icosahedron <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>icosahedronGeometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span>icosahedron<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>icosahedron<span class="token punctuation">)</span><span class="token keyword">const</span> plane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>planeGeometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span>plane<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>plane<span class="token punctuation">)</span><span class="token keyword">const</span> torusKnot <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>torusKnotGeometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span>torusKnot<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">5</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>torusKnot<span class="token punctuation">)</span>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'resize'</span><span class="token punctuation">,</span> onWindowResize<span class="token punctuation">,</span> <span class="token keyword">false</span><span class="token punctuation">)</span><span class="token keyword">function</span> <span class="token function">onWindowResize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    camera<span class="token punctuation">.</span>aspect <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth <span class="token operator">/</span> window<span class="token punctuation">.</span>innerHeight    camera<span class="token punctuation">.</span><span class="token function">updateProjectionMatrix</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    renderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">,</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span>    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">const</span> stats <span class="token operator">=</span> <span class="token function">Stats</span><span class="token punctuation">(</span><span class="token punctuation">)</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>stats<span class="token punctuation">.</span>dom<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// const options = {</span><span class="token comment" spellcheck="true">//     side: {</span><span class="token comment" spellcheck="true">//         "FrontSide": THREE.FrontSide,</span><span class="token comment" spellcheck="true">//         "BackSide": THREE.BackSide,</span><span class="token comment" spellcheck="true">//         "DoubleSide": THREE.DoubleSide,</span><span class="token comment" spellcheck="true">//     }</span><span class="token comment" spellcheck="true">// }</span><span class="token keyword">const</span> gui <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> materialFolder <span class="token operator">=</span> gui<span class="token punctuation">.</span><span class="token function">addFolder</span><span class="token punctuation">(</span><span class="token string">'THREE.Material'</span><span class="token punctuation">)</span>materialFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>material<span class="token punctuation">,</span> <span class="token string">'transparent'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> material<span class="token punctuation">.</span>needsUpdate <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">)</span>materialFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>material<span class="token punctuation">,</span> <span class="token string">'opacity'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">)</span>materialFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>material<span class="token punctuation">,</span> <span class="token string">'depthTest'</span><span class="token punctuation">)</span>materialFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>material<span class="token punctuation">,</span> <span class="token string">'depthWrite'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// materialFolder.add(material, 'alphaTest', 0, 1, 0.01).onChange(() => updateMaterial())</span><span class="token comment" spellcheck="true">// materialFolder.add(material, 'visible')</span><span class="token comment" spellcheck="true">// materialFolder.add(material, 'side', options.side).onChange(() => updateMaterial())</span>materialFolder<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// function updateMaterial() {</span><span class="token comment" spellcheck="true">//     material.side = Number(material.side)</span><span class="token comment" spellcheck="true">//     material.needsUpdate = true</span><span class="token comment" spellcheck="true">// }</span><span class="token keyword">function</span> <span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>animate<span class="token punctuation">)</span>    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    stats<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    renderer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">,</span> camera<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h1 id="description"><a href="#description" class="headerlink" title="description"></a>description</h1><p><img src="img_41.png" alt="img_41.png"></p><pre class=" language-ts//"><code class="language-ts//">// @ts-ignoreimport * as THREE from '/build/three.module.js'// 用于控制的js// @ts-ignore import { OrbitControls } from '/jsm/controls/OrbitControls'// @ts-ignore import Stats from '/jsm/libs/stats.module'// @ts-ignore import { GUI } from '/jsm/libs/dat.gui.module'const scene = new THREE.Scene()scene.add(new THREE.AxesHelper(5))const camera = new THREE.PerspectiveCamera(    75,    window.innerWidth / window.innerHeight,    0.1,    1000)camera.position.z = 3const renderer = new THREE.WebGLRenderer()renderer.setSize(window.innerWidth, window.innerHeight)document.body.appendChild(renderer.domElement)new OrbitControls(camera, renderer.domElement)const boxGeometry = new THREE.BoxGeometry()const sphereGeometry = new THREE.SphereGeometry()const icosahedronGeometry = new THREE.IcosahedronGeometry(1, 0)const planeGeometry = new THREE.PlaneGeometry()const torusKnotGeometry = new THREE.TorusKnotGeometry()const material = new THREE.MeshBasicMaterial() //{ color: 0x00ff00, wireframe: true })const texture = new THREE.TextureLoader().load("img/grid.png")material.map = textureconst envTexture = new THREE.CubeTextureLoader().load(["img/px_50.png", "img/nx_50.png", "img/py_50.png", "img/ny_50.png", "img/pz_50.png", "img/nz_50.png"])envTexture.mapping = THREE.CubeReflectionMapping// envTexture.mapping = THREE.CubeRefractionMappingmaterial.envMap = envTextureconst cube = new THREE.Mesh(boxGeometry, material)cube.position.x = 5scene.add(cube)const sphere = new THREE.Mesh(sphereGeometry, material)sphere.position.x = 3scene.add(sphere)const icosahedron = new THREE.Mesh(icosahedronGeometry, material)icosahedron.position.x = 0scene.add(icosahedron)const plane = new THREE.Mesh(planeGeometry, material)plane.position.x = -2scene.add(plane)const torusKnot = new THREE.Mesh(torusKnotGeometry, material)torusKnot.position.x = -5scene.add(torusKnot)window.addEventListener('resize', onWindowResize, false)function onWindowResize() {    camera.aspect = window.innerWidth / window.innerHeight    camera.updateProjectionMatrix()    renderer.setSize(window.innerWidth, window.innerHeight)    render()}const stats = Stats()document.body.appendChild(stats.dom)const options = {    side: {        FrontSide: THREE.FrontSide,        BackSide: THREE.BackSide,        DoubleSide: THREE.DoubleSide,    },    combine: {        MultiplyOperation: THREE.MultiplyOperation,        MixOperation: THREE.MixOperation,        AddOperation: THREE.AddOperation,    },}const gui = new GUI()const materialFolder = gui.addFolder('THREE.Material')materialFolder.add(material, 'transparent').onChange(() => material.needsUpdate = true)materialFolder.add(material, 'opacity', 0, 1, 0.01)materialFolder.add(material, 'depthTest')materialFolder.add(material, 'depthWrite')materialFolder    .add(material, 'alphaTest', 0, 1, 0.01)    .onChange(() => updateMaterial())materialFolder.add(material, 'visible')materialFolder    .add(material, 'side', options.side)    .onChange(() => updateMaterial())materialFolder.open()const data = {    color: material.color.getHex(),}const meshBasicMaterialFolder = gui.addFolder('THREE.MeshBasicMaterial')meshBasicMaterialFolder.addColor(data, 'color').onChange(() => { material.color.setHex(Number(data.color.toString().replace('#', '0x'))) })meshBasicMaterialFolder.add(material, 'wireframe')meshBasicMaterialFolder.add(material, 'wireframeLinewidth', 0, 10)meshBasicMaterialFolder.add(material, 'combine', options.combine).onChange(() => updateMaterial())meshBasicMaterialFolder.add(material, 'reflectivity', 0, 1)meshBasicMaterialFolder.add(material, 'refractionRatio', 0, 1)meshBasicMaterialFolder.open()function updateMaterial() {    material.side = Number(material.side)    material.combine = Number(material.combine)    material.needsUpdate = true}function animate() {    requestAnimationFrame(animate)    render()    stats.update()} function render() {    renderer.render(scene, camera)}animate()</code></pre><p><img src="img_42.png" alt="img_42.png"></p><h1 id="meshNormalMaterial"><a href="#meshNormalMaterial" class="headerlink" title="meshNormalMaterial"></a>meshNormalMaterial</h1><p>适用于项目一开始,还没有确定材质的时候<br><img src="img_43.png" alt="img_43.png"></p><pre class=" language-ts"><code class="language-ts"><span class="token comment" spellcheck="true">// src\client\client.ts   </span><span class="token comment" spellcheck="true">// @ts-ignore</span><span class="token keyword">import</span> <span class="token operator">*</span> as THREE <span class="token keyword">from</span> <span class="token string">'/build/three.module.js'</span><span class="token comment" spellcheck="true">// 用于控制的js</span><span class="token comment" spellcheck="true">// @ts-ignore </span><span class="token keyword">import</span> <span class="token punctuation">{</span> OrbitControls <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'/jsm/controls/OrbitControls'</span><span class="token comment" spellcheck="true">// @ts-ignore </span><span class="token keyword">import</span> Stats <span class="token keyword">from</span> <span class="token string">'/jsm/libs/stats.module'</span><span class="token comment" spellcheck="true">// @ts-ignore </span><span class="token keyword">import</span> <span class="token punctuation">{</span> GUI <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'/jsm/libs/dat.gui.module'</span>  <span class="token keyword">const</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Scene</span><span class="token punctuation">(</span><span class="token punctuation">)</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>AxesHelper</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">const</span> camera <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>PerspectiveCamera</span><span class="token punctuation">(</span>    <span class="token number">75</span><span class="token punctuation">,</span>    window<span class="token punctuation">.</span>innerWidth <span class="token operator">/</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">,</span>    <span class="token number">0.1</span><span class="token punctuation">,</span>    <span class="token number">1000</span><span class="token punctuation">)</span>camera<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">3</span><span class="token keyword">const</span> renderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>WebGLRenderer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>renderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">,</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>renderer<span class="token punctuation">.</span>domElement<span class="token punctuation">)</span><span class="token keyword">new</span> <span class="token class-name">OrbitControls</span><span class="token punctuation">(</span>camera<span class="token punctuation">,</span> renderer<span class="token punctuation">.</span>domElement<span class="token punctuation">)</span><span class="token keyword">const</span> boxGeometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BoxGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> sphereGeometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>SphereGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> icosahedronGeometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>IcosahedronGeometry</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">const</span> planeGeometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>PlaneGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> torusKnotGeometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>TorusKnotGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshNormalMaterial</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> cube <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>boxGeometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span>cube<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">5</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">)</span><span class="token keyword">const</span> sphere <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>sphereGeometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span>sphere<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">3</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>sphere<span class="token punctuation">)</span><span class="token keyword">const</span> icosahedron <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>icosahedronGeometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span>icosahedron<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>icosahedron<span class="token punctuation">)</span><span class="token keyword">const</span> plane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>planeGeometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span>plane<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>plane<span class="token punctuation">)</span><span class="token keyword">const</span> torusKnot <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>torusKnotGeometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span>torusKnot<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">5</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>torusKnot<span class="token punctuation">)</span>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'resize'</span><span class="token punctuation">,</span> onWindowResize<span class="token punctuation">,</span> <span class="token keyword">false</span><span class="token punctuation">)</span><span class="token keyword">function</span> <span class="token function">onWindowResize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    camera<span class="token punctuation">.</span>aspect <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth <span class="token operator">/</span> window<span class="token punctuation">.</span>innerHeight    camera<span class="token punctuation">.</span><span class="token function">updateProjectionMatrix</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    renderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">,</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span>    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">const</span> stats <span class="token operator">=</span> <span class="token function">Stats</span><span class="token punctuation">(</span><span class="token punctuation">)</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>stats<span class="token punctuation">.</span>dom<span class="token punctuation">)</span><span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>    side<span class="token punctuation">:</span> <span class="token punctuation">{</span>        FrontSide<span class="token punctuation">:</span> THREE<span class="token punctuation">.</span>FrontSide<span class="token punctuation">,</span>        BackSide<span class="token punctuation">:</span> THREE<span class="token punctuation">.</span>BackSide<span class="token punctuation">,</span>        DoubleSide<span class="token punctuation">:</span> THREE<span class="token punctuation">.</span>DoubleSide<span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token keyword">const</span> gui <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> materialFolder <span class="token operator">=</span> gui<span class="token punctuation">.</span><span class="token function">addFolder</span><span class="token punctuation">(</span><span class="token string">'THREE.Material'</span><span class="token punctuation">)</span>materialFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>material<span class="token punctuation">,</span> <span class="token string">'transparent'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> material<span class="token punctuation">.</span>needsUpdate <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">)</span>materialFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>material<span class="token punctuation">,</span> <span class="token string">'opacity'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">)</span>materialFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>material<span class="token punctuation">,</span> <span class="token string">'depthTest'</span><span class="token punctuation">)</span>materialFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>material<span class="token punctuation">,</span> <span class="token string">'depthWrite'</span><span class="token punctuation">)</span>materialFolder    <span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>material<span class="token punctuation">,</span> <span class="token string">'alphaTest'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">updateMaterial</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>materialFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>material<span class="token punctuation">,</span> <span class="token string">'visible'</span><span class="token punctuation">)</span>materialFolder    <span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>material<span class="token punctuation">,</span> <span class="token string">'side'</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span>side<span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">updateMaterial</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>materialFolder<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> meshNormalMaterialFolder <span class="token operator">=</span> gui<span class="token punctuation">.</span><span class="token function">addFolder</span><span class="token punctuation">(</span><span class="token string">'THREE.MeshNormalMaterial'</span><span class="token punctuation">)</span>meshNormalMaterialFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>material<span class="token punctuation">,</span> <span class="token string">'wireframe'</span><span class="token punctuation">)</span>meshNormalMaterialFolder    <span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>material<span class="token punctuation">,</span> <span class="token string">'flatShading'</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">updateMaterial</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>meshNormalMaterialFolder<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">function</span> <span class="token function">updateMaterial</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    material<span class="token punctuation">.</span>side <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>material<span class="token punctuation">.</span>side<span class="token punctuation">)</span>    material<span class="token punctuation">.</span>needsUpdate <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>animate<span class="token punctuation">)</span>    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    stats<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    renderer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">,</span> camera<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h1 id="meshLambertMaterial"><a href="#meshLambertMaterial" class="headerlink" title="meshLambertMaterial"></a>meshLambertMaterial</h1><p><img src="img_44.png" alt="需要照明才能显现"><br><img src="img_45.png" alt="img_45.png"></p><pre class=" language-ts"><code class="language-ts"><span class="token comment" spellcheck="true">// src\client\client.ts   </span><span class="token comment" spellcheck="true">// @ts-ignore</span><span class="token keyword">import</span> <span class="token operator">*</span> as THREE <span class="token keyword">from</span> <span class="token string">'/build/three.module.js'</span><span class="token comment" spellcheck="true">// 用于控制的js</span><span class="token comment" spellcheck="true">// @ts-ignore </span><span class="token keyword">import</span> <span class="token punctuation">{</span> OrbitControls <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'/jsm/controls/OrbitControls'</span><span class="token comment" spellcheck="true">// @ts-ignore </span><span class="token keyword">import</span> Stats <span class="token keyword">from</span> <span class="token string">'/jsm/libs/stats.module'</span><span class="token comment" spellcheck="true">// @ts-ignore </span><span class="token keyword">import</span> <span class="token punctuation">{</span> GUI <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'/jsm/libs/dat.gui.module'</span><span class="token keyword">const</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Scene</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//scene.background = new THREE.Color(0xff0000)</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>AxesHelper</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 灯光</span><span class="token keyword">const</span> light <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>PointLight</span><span class="token punctuation">(</span><span class="token number">0xffffff</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>light<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>light<span class="token punctuation">)</span><span class="token keyword">const</span> camera <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>PerspectiveCamera</span><span class="token punctuation">(</span>    <span class="token number">75</span><span class="token punctuation">,</span>    window<span class="token punctuation">.</span>innerWidth <span class="token operator">/</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">,</span>    <span class="token number">0.1</span><span class="token punctuation">,</span>    <span class="token number">1000</span><span class="token punctuation">)</span>camera<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">3</span><span class="token keyword">const</span> renderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>WebGLRenderer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>renderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">,</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>renderer<span class="token punctuation">.</span>domElement<span class="token punctuation">)</span><span class="token keyword">new</span> <span class="token class-name">OrbitControls</span><span class="token punctuation">(</span>camera<span class="token punctuation">,</span> renderer<span class="token punctuation">.</span>domElement<span class="token punctuation">)</span><span class="token keyword">const</span> boxGeometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BoxGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> sphereGeometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>SphereGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> icosahedronGeometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>IcosahedronGeometry</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">const</span> planeGeometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>PlaneGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> torusKnotGeometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>TorusKnotGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshLambertMaterial</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// const texture = new THREE.TextureLoader().load("img/grid.png")</span><span class="token comment" spellcheck="true">// material.map = texture</span><span class="token comment" spellcheck="true">// const envTexture = new THREE.CubeTextureLoader().load(["img/px_50.png", "img/nx_50.png", "img/py_50.png", "img/ny_50.png", "img/pz_50.png", "img/nz_50.png"])</span><span class="token comment" spellcheck="true">// //envTexture.mapping = THREE.CubeReflectionMapping</span><span class="token comment" spellcheck="true">// envTexture.mapping = THREE.CubeRefractionMapping</span><span class="token comment" spellcheck="true">// material.envMap = envTexture</span><span class="token keyword">const</span> cube <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>boxGeometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span>cube<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">5</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">)</span><span class="token keyword">const</span> sphere <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>sphereGeometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span>sphere<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">3</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>sphere<span class="token punctuation">)</span><span class="token keyword">const</span> icosahedron <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>icosahedronGeometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span>icosahedron<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>icosahedron<span class="token punctuation">)</span><span class="token keyword">const</span> plane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>planeGeometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span>plane<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>plane<span class="token punctuation">)</span><span class="token keyword">const</span> torusKnot <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>torusKnotGeometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span>torusKnot<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">5</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>torusKnot<span class="token punctuation">)</span>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'resize'</span><span class="token punctuation">,</span> onWindowResize<span class="token punctuation">,</span> <span class="token keyword">false</span><span class="token punctuation">)</span><span class="token keyword">function</span> <span class="token function">onWindowResize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    camera<span class="token punctuation">.</span>aspect <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth <span class="token operator">/</span> window<span class="token punctuation">.</span>innerHeight    camera<span class="token punctuation">.</span><span class="token function">updateProjectionMatrix</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    renderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">,</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span>    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">const</span> stats <span class="token operator">=</span> <span class="token function">Stats</span><span class="token punctuation">(</span><span class="token punctuation">)</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>stats<span class="token punctuation">.</span>dom<span class="token punctuation">)</span><span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>    side<span class="token punctuation">:</span> <span class="token punctuation">{</span>        FrontSide<span class="token punctuation">:</span> THREE<span class="token punctuation">.</span>FrontSide<span class="token punctuation">,</span>        BackSide<span class="token punctuation">:</span> THREE<span class="token punctuation">.</span>BackSide<span class="token punctuation">,</span>        DoubleSide<span class="token punctuation">:</span> THREE<span class="token punctuation">.</span>DoubleSide<span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    combine<span class="token punctuation">:</span> <span class="token punctuation">{</span>        MultiplyOperation<span class="token punctuation">:</span> THREE<span class="token punctuation">.</span>MultiplyOperation<span class="token punctuation">,</span>        MixOperation<span class="token punctuation">:</span> THREE<span class="token punctuation">.</span>MixOperation<span class="token punctuation">,</span>        AddOperation<span class="token punctuation">:</span> THREE<span class="token punctuation">.</span>AddOperation<span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token keyword">const</span> gui <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> materialFolder <span class="token operator">=</span> gui<span class="token punctuation">.</span><span class="token function">addFolder</span><span class="token punctuation">(</span><span class="token string">'THREE.Material'</span><span class="token punctuation">)</span>materialFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>material<span class="token punctuation">,</span> <span class="token string">'transparent'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> material<span class="token punctuation">.</span>needsUpdate <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">)</span>materialFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>material<span class="token punctuation">,</span> <span class="token string">'opacity'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">)</span>materialFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>material<span class="token punctuation">,</span> <span class="token string">'depthTest'</span><span class="token punctuation">)</span>materialFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>material<span class="token punctuation">,</span> <span class="token string">'depthWrite'</span><span class="token punctuation">)</span>materialFolder    <span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>material<span class="token punctuation">,</span> <span class="token string">'alphaTest'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">updateMaterial</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>materialFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>material<span class="token punctuation">,</span> <span class="token string">'visible'</span><span class="token punctuation">)</span>materialFolder    <span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>material<span class="token punctuation">,</span> <span class="token string">'side'</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span>side<span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">updateMaterial</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>materialFolder<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>    color<span class="token punctuation">:</span> material<span class="token punctuation">.</span>color<span class="token punctuation">.</span><span class="token function">getHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">//emissive: material.emissive.getHex(),</span><span class="token punctuation">}</span><span class="token keyword">const</span> meshLambertMaterialFolder <span class="token operator">=</span> gui<span class="token punctuation">.</span><span class="token function">addFolder</span><span class="token punctuation">(</span><span class="token string">'THREE.MeshLambertMaterial'</span><span class="token punctuation">)</span>meshLambertMaterialFolder<span class="token punctuation">.</span><span class="token function">addColor</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token string">'color'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    material<span class="token punctuation">.</span>color<span class="token punctuation">.</span><span class="token function">setHex</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>color<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'#'</span><span class="token punctuation">,</span> <span class="token string">'0x'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//meshLambertMaterialFolder.addColor(data, 'emissive').onChange(() => { material.emissive.setHex(Number(data.emissive.toString().replace('#', '0x'))) })</span>meshLambertMaterialFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>material<span class="token punctuation">,</span> <span class="token string">'wireframe'</span><span class="token punctuation">)</span>meshLambertMaterialFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>material<span class="token punctuation">,</span> <span class="token string">'wireframeLinewidth'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//meshLambertMaterialFolder.add(material, 'flatShading').onChange(() => updateMaterial())</span>meshLambertMaterialFolder    <span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>material<span class="token punctuation">,</span> <span class="token string">'combine'</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span>combine<span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">updateMaterial</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>meshLambertMaterialFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>material<span class="token punctuation">,</span> <span class="token string">'reflectivity'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>meshLambertMaterialFolder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>material<span class="token punctuation">,</span> <span class="token string">'refractionRatio'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>meshLambertMaterialFolder<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">function</span> <span class="token function">updateMaterial</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    material<span class="token punctuation">.</span>side <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>material<span class="token punctuation">.</span>side<span class="token punctuation">)</span>    material<span class="token punctuation">.</span>combine <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>material<span class="token punctuation">.</span>combine<span class="token punctuation">)</span>    material<span class="token punctuation">.</span>needsUpdate <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>animate<span class="token punctuation">)</span>    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    stats<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    renderer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">,</span> camera<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="img_46.png" alt="img_46.png"></p>]]></content>
      
      
      <categories>
          
          <category> 可视化 </category>
          
          <category> threejs </category>
          
          <category> 高阶 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> 高阶 </tag>
            
            <tag> 可视化 </tag>
            
            <tag> threejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript深度指南</title>
      <link href="/2023/02/14/backend/javascript-shen-du-zhi-nan/javascript-shen-du-zhi-nan/javascript-shen-du-zhi-nan/"/>
      <url>/2023/02/14/backend/javascript-shen-du-zhi-nan/javascript-shen-du-zhi-nan/javascript-shen-du-zhi-nan/</url>
      
        <content type="html"><![CDATA[<h1 id="发展史-ECMA-编程语言-js相关-变量-js值"><a href="#发展史-ECMA-编程语言-js相关-变量-js值" class="headerlink" title="发展史,ECMA,编程语言,js相关,变量,js值"></a>发展史,ECMA,编程语言,js相关,变量,js值</h1><blockquote><p>开篇语: 解决问题的能力不仅仅在于经验(或知识深度?),也在于知识的储备(知识广度)<br>前端开发框架知识只是小部分,更多是js基础与高级部分!</p></blockquote><h2 id="发展史"><a href="#发展史" class="headerlink" title="发展史"></a>发展史</h2><h3 id="五大主流浏览器-有自己研发的内核"><a href="#五大主流浏览器-有自己研发的内核" class="headerlink" title="五大主流浏览器(有自己研发的内核)"></a>五大主流浏览器(有自己研发的内核)</h3><p><img src="img.png" alt="img.png"></p><h3 id="浏览器历史-js诞生"><a href="#浏览器历史-js诞生" class="headerlink" title="浏览器历史,js诞生"></a>浏览器历史,js诞生</h3><p><img src="img_1.png" alt="img_1.png"><br><img src="img_2.png" alt="img_2.png"><br><img src="img_3.png" alt="img_3.png"><br><img src="img_4.png" alt="img_4.png"></p><h2 id="ECMA-European-Computer-Manufactures-Association-欧洲计算机制造联合会"><a href="#ECMA-European-Computer-Manufactures-Association-欧洲计算机制造联合会" class="headerlink" title="ECMA (European Computer Manufactures Association) 欧洲计算机制造联合会"></a>ECMA (European Computer Manufactures Association) 欧洲计算机制造联合会</h2>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
          <category> javascript </category>
          
          <category> 高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> javascript </tag>
            
            <tag> 高级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>udemy Advanced CSS and Sass - 高级 CSS 和 Sass</title>
      <link href="/2023/02/12/frontend/udemy-css-gao-ji/udemy-css-gao-ji/udemy-css-gao-ji/"/>
      <url>/2023/02/12/frontend/udemy-css-gao-ji/udemy-css-gao-ji/udemy-css-gao-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="课程大纲"><a href="#课程大纲" class="headerlink" title="课程大纲"></a>课程大纲</h1><p><img src="img.png" alt="img.png"></p><h1 id="开发工具-vscode-google"><a href="#开发工具-vscode-google" class="headerlink" title="开发工具 vscode + google"></a>开发工具 vscode + google</h1><p><img src="img_1.png" alt="img_1.png"></p><h1 id="项目1-Natours-一家提供自然之旅的虚构公司"><a href="#项目1-Natours-一家提供自然之旅的虚构公司" class="headerlink" title="项目1: Natours 一家提供自然之旅的虚构公司"></a>项目1: Natours 一家提供自然之旅的虚构公司</h1><h2 id="项目演示"><a href="#项目演示" class="headerlink" title="项目演示"></a>项目演示</h2><p><img src="img_3.png" alt="img_3.png"><br><img src="img_4.png" alt="img_4.png"><br><img src="img_5.png" alt="img_5.png"><br><img src="img_6.png" alt="img_6.png"><br><img src="img_7.png" alt="img_7.png"><br><img src="img_8.png" alt="背景视频"><br><img src="img_9.png" alt="img_9.png"><br><img src="img_10.png" alt="img_10.png"></p><h2 id="初始工程"><a href="#初始工程" class="headerlink" title="初始工程"></a>初始工程</h2><p><img src="img_11.png" alt="img_11.png"></p><h3 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h3><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!doctype html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span>          <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, user-scalable<span class="token punctuation">=</span>no, initial-scale<span class="token punctuation">=</span>1.0, maximum-scale<span class="token punctuation">=</span>1.0, minimum-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ie<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--google字体--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://fonts.googleapis.com/css?family<span class="token punctuation">=</span>Lato:100,300,400,700,900<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>css/style.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--网站标题栏的小图标--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>shortcut icon<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>image/png<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/favicon.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Natours | Exciting tours for adventurous people<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="building-the-header-p1"><a href="#building-the-header-p1" class="headerlink" title="building the header p1"></a>building the header p1</h2><h3 id="本章知识点"><a href="#本章知识点" class="headerlink" title="本章知识点"></a>本章知识点</h3><ul><li>使用通用选择器进行基本重置的最好方式</li><li>如何设置项目范围的字体定义</li><li>如何使用clip-path(剪辑路径?)剪辑元素的某个部分</li></ul><p><img src="img_12.png" alt="img_12.png"><br><img src="img_13.png" alt="元素剪辑的定位"><br><img src="img_14.png" alt="元素剪辑可视化网站"></p><h3 id="index-html-1"><a href="#index-html-1" class="headerlink" title="index.html"></a>index.html</h3><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!doctype html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span>          <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, user-scalable<span class="token punctuation">=</span>no, initial-scale<span class="token punctuation">=</span>1.0, maximum-scale<span class="token punctuation">=</span>1.0, minimum-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ie<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--google字体,数字表示粗细--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://fonts.googleapis.com/css?family<span class="token punctuation">=</span>Lato:100,300,400,700,900<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>css/style.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--网站标题栏的小图标--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>shortcut icon<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>image/png<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/favicon.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Natours | Exciting tours for adventurous people<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        Some text...    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="style-css"><a href="#style-css" class="headerlink" title="style.css"></a>style.css</h3><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*品牌色COLORS:Light green: #7ed56fMedium green: #55c57aDark green: #28b485*/</span><span class="token comment" spellcheck="true">/* basic reset */</span><span class="token comment" spellcheck="true">/*    重置样式是为了让样式在不同浏览器都保持一致    但是如今的浏览器兼容性越来越好,所以重置已经不是必须的了*/</span><span class="token selector">* </span><span class="token punctuation">{</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*改变盒子模型,以便不再添加边框和填充到总宽度和总高度*/</span>    <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*    字体相关的写在body,why    因为字体的属性通常是遗传/继承的,所以加在body来使之遗传,    比通用选择器里给每个元素(父子都有)添加来得高效*/</span><span class="token selector">body </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*        sans-serif是无衬线字体        lato是谷歌的字体    */</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"Lato"</span>, sans-serif<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">400</span><span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">16</span>px<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* 比预定义行高高1.7倍 */</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">1.7</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#777</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* 四边的留白 */</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* basic reset end */</span><span class="token selector"><span class="token class">.header</span> </span><span class="token punctuation">{</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">95</span>vh<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*        linear-gradient: 线性渐变        to right bottom: 向右下角渐变        rgba: 最后一个数值是透明度     */</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>            to right bottom,            <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">126</span>, <span class="token number">213</span>, <span class="token number">111</span>, <span class="token number">0.8</span><span class="token punctuation">)</span>,            <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">40</span>, <span class="token number">180</span>, <span class="token number">133</span>, <span class="token number">0.8</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span>,    <span class="token url">url("../img/hero.jpg")</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* cover: 不论宽度如何改变,都会适应 */</span>    <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* 背景缩放时顶部不会被裁剪,而是下半部分被裁剪 */</span>    <span class="token property">background-position</span><span class="token punctuation">:</span> top<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*        剪辑图片的右下角        polygon: 四个参数对应顺时针的四角,参数指定该点相对于左上角的顶点的距离    */</span>    <span class="token comment" spellcheck="true">/*clip-path: polygon(0 0,50% 15%,100% 200px,0 100%);*/</span>    <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">polygon</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token number">0</span>, <span class="token number">100%</span> <span class="token number">0</span>, <span class="token number">100%</span> <span class="token number">75</span>vh, <span class="token number">0</span> <span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><img src="img_15.png" alt="测试"></p><h2 id="building-the-header-p2"><a href="#building-the-header-p2" class="headerlink" title="building the header p2"></a>building the header p2</h2><h3 id="本章知识点-1"><a href="#本章知识点-1" class="headerlink" title="本章知识点"></a>本章知识点</h3><ul><li>通过transform,top,left来使任何元素居中<br><img src="img_16.png" alt="img_16.png"><h3 id="index-html-2"><a href="#index-html-2" class="headerlink" title="index.html"></a>index.html</h3><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!doctype html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  ......<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!--设置背景的一个好的方式: 定义一个容器,设置容器背景,然后调整容器定位--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>logo-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!--alt: 描述seo,搜索引擎优化,并且图片无法加载时作为填充文本--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./img/logo-white.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Logo<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>logo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-primary-main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Outdoors<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-primary-sub<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>is where life happens<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="style-css-1"><a href="#style-css-1" class="headerlink" title="style.css"></a>style.css</h3>```css<br>/* …… */</li></ul><p>.text-box {<br>    position: absolute;<br>    /<em>移动父元素的50%</em>/<br>    /<em>top: 50%;</em>/<br>    top: 40%;<br>    left: 50%;<br>    /<em>移动自身的-50%,回到正中位置</em>/<br>    /<em>这里的50%不是基于父元素,而是基于元素本身</em>/<br>    transform: translate(-50%,-50%);<br>}</p><p>.heading-primary {<br>    color: #fff;<br>    /* 字母转大写 */<br>    text-transform: uppercase;<br>}</p><p>.heading-primary-main {<br>    /<em>块元素会占一整行,可以把另一个span挤下去</em>/<br>    display: block;<br>    font-size: 60px;<br>    font-weight: 400;<br>    /<em>字间距</em>/<br>    letter-spacing: 35px;<br>}</p><p>.heading-primary-sub {<br>    display: block;<br>    font-size: 20px;<br>    font-weight: 700;<br>    letter-spacing: 17.4px;<br>}</p><pre><code>![效果](img_17.png)## creating cool css animations &gt; 实现标题的进入动画 ### 本章知识点- 使用关键帧规则和动画属性创建动画![img_18.png](img_18.png)![img_19.png](img_19.png)### style.css```css/*品牌色COLORS:Light green: #7ed56fMedium green: #55c57aDark green: #28b485*//*    ......*/.logo-box:hover .logo {    /*        要父元素的hover+子元素选择器才行        如果是子元素选择器:hover,则每次hover,子元素移开(动画),此时又失去hover,则会一直在原点频闪    */    animation: moveInRight 1s ease-out;}.text-box {    ......}.heading-primary {    color: #fff;    /* 字母转大写 */    text-transform: uppercase;    /*        背部可见性        解决动画的震动(原理不明)    */    backface-visibility: hidden;}.heading-primary-main {    /*块元素会占一整行,可以把另一个span挤下去*/    display: block;    font-size: 60px;    font-weight: 400;    /*字间距*/    letter-spacing: 35px;    /*指定要执行的动画的名称*/    animation-name: moveInLeft;    /*动画执行时间*/    animation-duration: 1s;    /**        动画计时函数        ease-in: 越来越快        ease-out(缓出): 越来越慢        ease-in-out/linear/step-start/step-end        支持自定义     */    animation-timing-function: ease-out;    /*动画重复次数*/    /*animation-iteration-count: 3;*/    /*动画延迟时间(会等待x秒再开始动画)*/    /*animation-delay: 3s; */}.heading-primary-sub {    display: block;    font-size: 20px;    font-weight: 700;    letter-spacing: 17.4px;    animation: moveInRight 1s ease-out;}/* 从左侧移动 *//* 为了浏览器优化,最好只对两个属性进行动画 */@keyframes moveInLeft {    /*初始状态*/    0% {        opacity: 0;        /*初始位置是执行动画的元素的-100px*/        transform: translateX(-100px);    }    80% {        /*执行到80%,此时到原元素位置的右侧20px*/        transform: translateX(10px);    }    /*结束状态*/    100% {        /*最后回到元素的初始位置*/        transform: translate(0);    }}/* 从右侧移动 */@keyframes moveInRight {    /*初始状态*/    0% {        opacity: 0;        /*初始位置是执行动画的元素的100px*/        transform: translateX(100px);    }    80% {        /*执行到80%,此时到原元素位置的左侧20px*/        transform: translateX(-10px);    }    /*结束状态*/    100% {        /*最后回到元素的初始位置*/        transform: translate(0);    }}</code></pre><h3 id="index-html-3"><a href="#index-html-3" class="headerlink" title="index.html"></a>index.html</h3><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!doctype html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span>          <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, user-scalable<span class="token punctuation">=</span>no, initial-scale<span class="token punctuation">=</span>1.0, maximum-scale<span class="token punctuation">=</span>1.0, minimum-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ie<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--google字体,数字表示粗细--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://fonts.googleapis.com/css?family<span class="token punctuation">=</span>Lato:100,300,400,700,900<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>css/style.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--网站标题栏的小图标--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>shortcut icon<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>image/png<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/favicon.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Natours | Exciting tours for adventurous people<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--设置背景的一个好的方式: 定义一个容器,设置容器背景,然后调整容器定位--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>logo-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--alt: 描述seo,搜索引擎优化,并且图片无法加载时作为填充文本--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./img/logo-white.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Logo<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>logo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-primary-main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Outdoors<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-primary-sub<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>is where life happens<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="Building-a-Complex-Animation-Button-p1"><a href="#Building-a-Complex-Animation-Button-p1" class="headerlink" title="Building a Complex Animation Button p1"></a>Building a Complex Animation Button p1</h2><h3 id="本章知识点-2"><a href="#本章知识点-2" class="headerlink" title="本章知识点"></a>本章知识点</h3><ul><li>什么是伪元素和伪类</li><li>如何以及为什么使用::after</li><li>通过过渡属性构建创意的悬停动画效果<br><img src="img_20.png" alt="img_20.png"><h3 id="index-html-4"><a href="#index-html-4" class="headerlink" title="index.html"></a>index.html</h3><img src="img_21.png" alt="img_21.png"><h3 id="style-css-2"><a href="#style-css-2" class="headerlink" title="style.css"></a>style.css</h3>```css<br>/* …… */<br>.text-box {<br>  position: absolute;<br>  /<em>移动父元素的50%</em>/<br>  /<em>top: 50%;</em>/<br>  top: 40%;<br>  left: 50%;<br>  /<em>移动自身的-50%,回到正中位置</em>/<br>  /<em>这里的50%不是基于父元素,而是基于元素本身</em>/<br>  transform: translate(-50%, -50%);<br>  /<em>文本/行内块对齐</em>/<br>  text-align: center;<br>}</li></ul><p>.heading-primary {<br>    color: #fff;<br>    /* 字母转大写 <em>/<br>    text-transform: uppercase;<br>    /</em><br>        背部可见性<br>        解决动画的震动(原理不明)<br>    */<br>    backface-visibility: hidden;<br>    margin-bottom: 60px;</p><p>/* …… */</p><p>/<em>可以通过分别设置两个伪类来实现点击前后的不同效果</em>/<br>/<em>:link是链接伪类,此时尚未被点击</em>/<br>/<em>:visited是已被点击的状态(已被访问的链接)(访问状态)</em>/<br>.btn:link,<br>.btn:visited {<br>    /<em>转大写字母</em>/<br>    text-transform: uppercase;<br>    /<em>取消a默认下划线</em>/<br>    text-decoration: none;<br>    /<em>padding可以撑开a元素</em>/<br>    padding: 15px 40px;<br>    /<em>防止挡住其他元素,并且行内元素被视为文字,可以使用文字居中</em>/<br>    display: inline-block;<br>    border-radius: 100px;<br>    /<em>过渡属性动画,比帧动画简单</em>/<br>    /<em>该属性作用于该选择器的所有属性</em>/<br>    transition: all .2s;<br>}</p><p>/<em>hover y=3 active(点击) y=-1 则点击时实际是从3到1,实现了按钮按下的效果</em>/<br>.btn:hover {<br>    /<em>向上移动</em>/<br>    transform: translateY(-3px);<br>    /<em>阴影</em>/<br>    /<em>参数1: x轴阴影位置; 参数2: y轴阴影位置; 参数3: 模糊度; 参数4: 颜色</em>/<br>    /<em>y轴向下10px的阴影</em>/<br>    box-shadow: 0 10px 20px rgba(0, 0, 0, .2);<br>}</p><p>/<em>被激活(单击或触发事件)时</em>/<br>.btn:active {<br>    transform: translateY(-1px);<br>    /<em>减少y轴的阴影面积,以及模糊度,给人一种向上按下的视觉效果</em>/<br>    box-shadow: 0 5px 10px rgba(0, 0, 0, .2);<br>}</p><p>.btn-white {<br>    background-color: #fff;<br>    color: #777;<br>}</p><pre><code>### 效果![升起](img_22.png)![按下](img_23.png)## Building a Complex Animation Button p2### 本章内容: 当第一次悬停于按钮上时,按钮会有一个冲击波(扩散到无限大的淡影)### index.html![btn添加一个class](img_24.png)### style.css```css/*......*//*可以通过分别设置两个伪类来实现点击前后的不同效果*//*:link是链接伪类,此时尚未被点击*//*:visited是已被点击的状态(已被访问的链接)(访问状态)*/.btn:link,.btn:visited {    /*......*/    position: relative;}/*基本被视为(此处为btn的)子元素*//*悬停到按钮外时,after会回到按钮后面*/.btn::after {    /*可以是空,但必须设置,否则不会出现*/    content: "";    display: inline-block;    height: 100%;    width: 100%;    border-radius: 100px;    /*此处定位是基于.btn*/    /*子绝父相*/    position: absolute;    top: 0;    left: 0;    /*藏在.btn下方*/    z-index: -1;    /*初始状态*/    transition: all .4s;}.btn-white::after {    /*给.btn-white的after添加背景颜色*/    background-color: #fff;}/*after被hover时触发*/.btn:hover::after {    /*scale就是简单地增大元素,磁力增大为原来的2倍*/    /*transform: scale(1.5);*/    /*scale可以设置不同方向的缩放倍数*/    transform: scaleX(1.4) scaleY(1.6);    /*透明度过渡到0*/    opacity: 0;}/* 从底部移动 */@keyframes moveInBottom {    /*初始状态*/    0% {        opacity: 0;        /*初始位置是执行动画的元素的100px*/        transform: translateY(30px);    }    /*结束状态*/    100% {        /*最后回到元素的初始位置*/        transform: translate(0);    }}/*有(从底部)进入动画的按钮*/.btn-animated {    /*动画,延迟0.75秒启动*/    animation: moveInBottom .5s ease-out .75s;    /*动画填充模式,解决动画0%时opacity无效的问题*/    animation-fill-mode: backwards;}</code></pre><blockquote><p>Natours第一部分完成</p></blockquote><h1 id="how-css-works"><a href="#how-css-works" class="headerlink" title="how css works"></a>how css works</h1><h2 id="three-pillars-支柱-of-writing-good-HTML-and-CSS"><a href="#three-pillars-支柱-of-writing-good-HTML-and-CSS" class="headerlink" title="three pillars(支柱) of writing good HTML and CSS"></a>three pillars(支柱) of writing good HTML and CSS</h2><p><img src="img_25.png" alt="三大支柱: 响应式设计;编写可维护和可扩展的代码;提高网站性能"><br><img src="img_26.png" alt="img_26.png"></p><h3 id="Responsive-design-响应式网页设计"><a href="#Responsive-design-响应式网页设计" class="headerlink" title="Responsive design 响应式网页设计"></a>Responsive design 响应式网页设计</h3><blockquote><p>在任何设备大小上正常显示</p></blockquote><ul><li>流式布局(flex)</li><li>媒体查询</li><li>响应式图片</li><li>正确的单位(字体大小或元素尺寸px,rem,vh,vw?)</li><li>桌面优先vs移动优先</li></ul><h3 id="Maintainable-and-scalable-code"><a href="#Maintainable-and-scalable-code" class="headerlink" title="Maintainable and scalable code"></a>Maintainable and scalable code</h3><h3 id="web-performance"><a href="#web-performance" class="headerlink" title="web performance"></a>web performance</h3><ul><li>less HTTP requests 尽可能少的http请求(ps: 让我想起graph.js)</li><li>less code 尽可能少的代码 </li><li>compress code 压缩代码</li><li>use a css preprocessor 使用css预处理器</li><li>less image 更少的图片</li><li>compress image 压缩图片</li></ul><h2 id="how-css-works-behind-the-scenes-an-overview"><a href="#how-css-works-behind-the-scenes-an-overview" class="headerlink" title="how css works behind the scenes (an overview)"></a>how css works behind the scenes (an overview)</h2><h3 id="css解析"><a href="#css解析" class="headerlink" title="css解析"></a>css解析</h3><ol><li>解决冲突的css声明,该过程称为级联(cascade)</li><li>处理最终的css值</li><li>最终css也存储在树状结构中 -&gt; 渲染树</li><li>视觉格式化模型,计算了一堆东西</li><li>最终呈现</li></ol><p><img src="img_27.png" alt="浏览器前端渲染过程"></p><h2 id="how-css-is-parsed-p1-the-cascade-级联-and-specificity-特异性"><a href="#how-css-is-parsed-p1-the-cascade-级联-and-specificity-特异性" class="headerlink" title="how css is parsed,p1,the cascade(级联) and specificity(特异性)"></a>how css is parsed,p1,the cascade(级联) and specificity(特异性)</h2><p><img src="img_28.png" alt="img_28.png"><br><img src="img_29.png" alt="img_29.png"></p><h3 id="级联解决冲突"><a href="#级联解决冲突" class="headerlink" title="级联解决冲突"></a>级联解决冲突</h3><p><img src="img_31.png" alt="级联,解决css冲突(来自不同来源的css)"><br><img src="img_34.png"></p><ol><li>importance(权重)</li><li>specificity(特异性) 当权重一致,则比较特异性</li><li>source other 当特异性也一致,则后声明的覆盖前声明的</li></ol><p><img src="img_32.png" alt="权重比较示例"><br><img src="img_33.png" alt="特异性比较示例"></p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p><img src="img_35.png" alt="img_35.png"></p><h3 id="specificity-in-practice"><a href="#specificity-in-practice" class="headerlink" title="specificity in practice"></a>specificity in practice</h3><h4 id="打开codepen-io-做一个specificity的练习"><a href="#打开codepen-io-做一个specificity的练习" class="headerlink" title="打开codepen.io,做一个specificity的练习"></a>打开codepen.io,做一个specificity的练习</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>nav<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pull-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button button-danger<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>link.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Don't click here!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">></span></span></code></pre><pre class=" language-css"><code class="language-css"><span class="token selector">body</span><span class="token punctuation">{</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.button</span></span><span class="token punctuation">{</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">a</span><span class="token punctuation">{</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> purple<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token id">#nav</span> div<span class="token class">.pull-right</span> a<span class="token class">.button</span></span><span class="token punctuation">{</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> orangered<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token id">#nav</span> a<span class="token class">.button</span><span class="token pseudo-class">:hover</span></span><span class="token punctuation">{</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><img src="img_36.png" alt="img_36.png"><img src="img_37.png" alt="!important"><br><img src="img_38.png" alt="hover后变绿,hover计算为class"></p><h2 id="how-css-is-parsed-p2-value-processing-单位如何计算-px-rem-…"><a href="#how-css-is-parsed-p2-value-processing-单位如何计算-px-rem-…" class="headerlink" title="how css is parsed,p2 value processing (单位如何计算(px,rem,…))"></a>how css is parsed,p2 value processing (单位如何计算(px,rem,…))</h2><p><img src="img_39.png" alt="百分比%不是单位,它取决于父元素的值!,通过计算并四舍五入后得出"><br><img src="img_40.png" alt="没有声明的属性有初始值,浏览器默认的"><br><img src="img_41.png" alt="rem是基于初始值计算的"><br><img src="img_42.png" alt="关于文字的属性会被子类继承"><br><img src="img_44.png" alt="字体的em是取决于父元素的font-size,padding等length的是取决于当前元素的font-size,rem基于根元素"></p><h3 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h3><p><img src="img_45.png" alt="img_45.png"></p><h2 id="how-css-is-parsed-p3-inheritance-继承"><a href="#how-css-is-parsed-p3-inheritance-继承" class="headerlink" title="how css is parsed,p3 inheritance (继承)"></a>how css is parsed,p3 inheritance (继承)</h2><p><img src="img_46.png" alt="1,判断有无级联值,如果没有2,有无继承值,如果没有,就使用初始/默认值"><br><img src="img_47.png" alt="img_47.png"></p><h2 id="converting-px-to-rem-转换px为rem"><a href="#converting-px-to-rem-转换px为rem" class="headerlink" title="converting px to rem 转换px为rem"></a>converting px to rem 转换px为rem</h2><p><img src="img_48.png" alt="img_48.png"></p><blockquote><p>rem的便利在于,改变根元素,则所有rem都会改变,无需逐个修改,并且不需要写一堆媒体查询</p></blockquote><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*品牌色COLORS:Light green: #7ed56fMedium green: #55c57aDark green: #28b485*/</span><span class="token comment" spellcheck="true">/* basic reset */</span><span class="token comment" spellcheck="true">/*    重置样式是为了让样式在不同浏览器都保持一致    但是如今的浏览器兼容性越来越好,所以重置已经不是必须的了    添加after和before是因为只匹配*的话,after和before不会被覆盖到*/</span><span class="token selector">*,*<span class="token pseudo-element">::after</span>,*<span class="token pseudo-element">::before</span> </span><span class="token punctuation">{</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*继承*/</span>    <span class="token property">box-sizing</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">html </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*设置根元素font-size*/</span>    <span class="token comment" spellcheck="true">/*设置为10是因为方便换算 1rem=10px -> 16px=1.6rem*/</span>    <span class="token comment" spellcheck="true">/*font-size: 10px;*/</span>    <span class="token comment" spellcheck="true">/*写死为10px是不好的(比如用户修改浏览器默认字体大小?放大缩小),我们应该基于浏览器的默认font-size(16px)的百分比*/</span>    <span class="token comment" spellcheck="true">/*0.625*16=10*/</span>    <span class="token comment" spellcheck="true">/*老ie不兼容rem*/</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">62.5%</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*改变盒子模型,以便不再添加边框和填充到总宽度和总高度*/</span>    <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*    字体相关的写在body,why    因为字体的属性通常是遗传/继承的,所以加在body来使之遗传,    比通用选择器里给每个元素(父子都有)添加来得高效*/</span><span class="token selector">body </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*        sans-serif是无衬线字体        lato是谷歌的字体    */</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"Lato"</span>, sans-serif<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">400</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*font-size: 16px;*/</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">1.6</span>rem<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* 比预定义行高高1.7倍 */</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">1.7</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#777</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* 四边的留白 */</span>    <span class="token comment" spellcheck="true">/*padding: 30px;*/</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">3</span>rem<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* basic reset end */</span><span class="token selector"><span class="token class">.header</span> </span><span class="token punctuation">{</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">95</span>vh<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*        linear-gradient: 线性渐变        to right bottom: 向右下角渐变        rgba: 最后一个数值是透明度     */</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>            to right bottom,            <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">126</span>, <span class="token number">213</span>, <span class="token number">111</span>, <span class="token number">0.8</span><span class="token punctuation">)</span>,            <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">40</span>, <span class="token number">180</span>, <span class="token number">131</span>, <span class="token number">0.8</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span>,    <span class="token url">url("../img/hero.jpg")</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* cover: 不论宽度如何改变,都会适应 */</span>    <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* 背景缩放时顶部不会被裁剪,而是下半部分被裁剪 */</span>    <span class="token property">background-position</span><span class="token punctuation">:</span> top<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*        剪辑图片的右下角        polygon: 四个参数对应顺时针的四角,参数指定该点相对于左上角的顶点的距离    */</span>    <span class="token comment" spellcheck="true">/*clip-path: polygon(0 0,50% 15%,100% 200px,0 100%);*/</span>    <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">polygon</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token number">0</span>, <span class="token number">100%</span> <span class="token number">0</span>, <span class="token number">100%</span> <span class="token number">75</span>vh, <span class="token number">0</span> <span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.logo-box</span> </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*子绝父相*/</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*top: 40px;*/</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">4</span>rem<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*left: 40px;*/</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">4</span>rem<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.logo</span> </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*会自动计算宽度*/</span>    <span class="token comment" spellcheck="true">/*height: 35px;*/</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">3.5</span>rem<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.logo-box</span><span class="token pseudo-class">:hover</span> <span class="token class">.logo</span> </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*        要父元素的hover+子元素选择器才行        如果是子元素选择器:hover,则每次hover,子元素移开(动画),此时又失去hover,则会一直在原点频闪    */</span>    <span class="token property">animation</span><span class="token punctuation">:</span> moveInRight <span class="token number">1</span>s ease-out<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.text-box</span> </span><span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*移动父元素的50%*/</span>    <span class="token comment" spellcheck="true">/*top: 50%;*/</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">40%</span><span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*移动自身的-50%,回到正中位置*/</span>    <span class="token comment" spellcheck="true">/*这里的50%不是基于父元素,而是基于元素本身*/</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-<span class="token number">50%</span>, -<span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*文本/行内块对齐*/</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.heading-primary</span> </span><span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* 字母转大写 */</span>    <span class="token property">text-transform</span><span class="token punctuation">:</span> uppercase<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*        背部可见性        解决动画的震动(原理不明)    */</span>    <span class="token property">backface-visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*margin-bottom: 60px;*/</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">6</span>rem<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.heading-primary-main</span> </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*块元素会占一整行,可以把另一个span挤下去*/</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*font-size: 60px;*/</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">6</span>rem<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">400</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*字间距*/</span>    <span class="token comment" spellcheck="true">/*letter-spacing: 35px;*/</span>    <span class="token property">letter-spacing</span><span class="token punctuation">:</span> <span class="token number">3.5</span>rem<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*指定要执行的动画的名称*/</span>    <span class="token property">animation-name</span><span class="token punctuation">:</span> moveInLeft<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*动画执行时间*/</span>    <span class="token property">animation-duration</span><span class="token punctuation">:</span> <span class="token number">1</span>s<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**        动画计时函数        ease-in: 越来越快        ease-out(缓出): 越来越慢        ease-in-out/linear/step-start/step-end        支持自定义     */</span>    <span class="token property">animation-timing-function</span><span class="token punctuation">:</span> ease-out<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*动画重复次数*/</span>    <span class="token comment" spellcheck="true">/*animation-iteration-count: 3;*/</span>    <span class="token comment" spellcheck="true">/*动画延迟时间(会等待x秒再开始动画)*/</span>    <span class="token comment" spellcheck="true">/*animation-delay: 3s; */</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.heading-primary-sub</span> </span><span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*font-size: 20px;*/</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">2</span>rem<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">700</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*letter-spacing: 17.4px;*/</span>    <span class="token property">letter-spacing</span><span class="token punctuation">:</span> <span class="token number">1.75</span>rem<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> moveInRight <span class="token number">1</span>s ease-out<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* 从左侧移动 */</span><span class="token comment" spellcheck="true">/* 为了浏览器优化,最好只对两个属性进行动画 */</span><span class="token atrule"><span class="token rule">@keyframes</span> moveInLeft</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*初始状态*/</span>    <span class="token selector">0% </span><span class="token punctuation">{</span>        <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*初始位置是执行动画的元素的-100px*/</span>        <span class="token comment" spellcheck="true">/*transform: translateX(-100px);*/</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">10</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">80% </span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/*执行到80%,此时到原元素位置的右侧20px*/</span>        <span class="token comment" spellcheck="true">/*transform: translateX(10px);*/</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span><span class="token number">1</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*结束状态*/</span>    <span class="token selector">100% </span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/*最后回到元素的初始位置*/</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* 从右侧移动 */</span><span class="token atrule"><span class="token rule">@keyframes</span> moveInRight</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*初始状态*/</span>    <span class="token selector">0% </span><span class="token punctuation">{</span>        <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*初始位置是执行动画的元素的100px*/</span>        <span class="token comment" spellcheck="true">/*transform: translateX(100px);*/</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span><span class="token number">10</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">80% </span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/*执行到80%,此时到原元素位置的左侧20px*/</span>        <span class="token comment" spellcheck="true">/*transform: translateX(-10px);*/</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">1</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*结束状态*/</span>    <span class="token selector">100% </span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/*最后回到元素的初始位置*/</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*可以通过分别设置两个伪类来实现点击前后的不同效果*/</span><span class="token comment" spellcheck="true">/*:link是链接伪类,此时尚未被点击*/</span><span class="token comment" spellcheck="true">/*:visited是已被点击的状态(已被访问的链接)(访问状态)*/</span><span class="token selector"><span class="token class">.btn</span><span class="token pseudo-class">:link</span>,<span class="token class">.btn</span><span class="token pseudo-class">:visited</span> </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*转大写字母*/</span>    <span class="token property">text-transform</span><span class="token punctuation">:</span> uppercase<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*取消a默认下划线*/</span>    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*padding可以撑开a元素*/</span>    <span class="token comment" spellcheck="true">/*padding: 15px 40px;*/</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">1.5</span>rem <span class="token number">4</span>rem<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*防止挡住其他元素,并且行内元素被视为文字,可以使用文字居中*/</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*border-radius: 100px;*/</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">10</span>rem<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*过渡属性动画,比帧动画简单*/</span>    <span class="token comment" spellcheck="true">/*该属性作用于该选择器的所有属性*/</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">.2</span>s<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">1.6</span>rem<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*hover y=3 active(点击) y=-1 则点击时实际是从3到1,实现了按钮按下的效果*/</span><span class="token selector"><span class="token class">.btn</span><span class="token pseudo-class">:hover</span> </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*向上移动*/</span>    <span class="token comment" spellcheck="true">/*transform: translateY(-3px);*/</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-<span class="token number">0.3</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*阴影*/</span>    <span class="token comment" spellcheck="true">/*参数1: x轴阴影位置; 参数2: y轴阴影位置; 参数3: 模糊度; 参数4: 颜色*/</span>    <span class="token comment" spellcheck="true">/*y轴向下10px的阴影*/</span>    <span class="token comment" spellcheck="true">/*box-shadow: 0 10px 20px rgba(0, 0, 0, .2);*/</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">1</span>rem <span class="token number">2</span>rem <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*被激活(单击或触发事件)时*/</span><span class="token selector"><span class="token class">.btn</span><span class="token pseudo-class">:active</span> </span><span class="token punctuation">{</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-<span class="token number">0.1</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*减少y轴的阴影面积,以及模糊度,给人一种向上按下的视觉效果*/</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">5</span>px <span class="token number">10</span>px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">0.5</span>rem <span class="token number">1</span>rem <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.btn-white</span> </span><span class="token punctuation">{</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#777</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*基本被视为(此处为btn的)子元素*/</span><span class="token comment" spellcheck="true">/*悬停到按钮外时,after会回到按钮后面*/</span><span class="token selector"><span class="token class">.btn</span><span class="token pseudo-element">::after</span> </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*可以是空,但必须设置,否则不会出现*/</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*border-radius: 100px;*/</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">10</span>rem<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*此处定位是基于.btn*/</span>    <span class="token comment" spellcheck="true">/*子绝父相*/</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*藏在.btn下方*/</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> -<span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*初始状态*/</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">.4</span>s<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.btn-white</span><span class="token pseudo-element">::after</span> </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*给.btn-white的after添加背景颜色*/</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*after被hover时触发*/</span><span class="token selector"><span class="token class">.btn</span><span class="token pseudo-class">:hover</span><span class="token pseudo-element">::after</span> </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*scale就是简单地增大元素,磁力增大为原来的2倍*/</span>    <span class="token comment" spellcheck="true">/*transform: scale(1.5);*/</span>    <span class="token comment" spellcheck="true">/*scale可以设置不同方向的缩放倍数*/</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scaleX</span><span class="token punctuation">(</span><span class="token number">1.4</span><span class="token punctuation">)</span> <span class="token function">scaleY</span><span class="token punctuation">(</span><span class="token number">1.6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*透明度过渡到0*/</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* 从底部移动 */</span><span class="token atrule"><span class="token rule">@keyframes</span> moveInBottom</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*初始状态*/</span>    <span class="token selector">0% </span><span class="token punctuation">{</span>        <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*初始位置是执行动画的元素的100px*/</span>        <span class="token comment" spellcheck="true">/*transform: translateY(30px);*/</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span><span class="token number">3</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*结束状态*/</span>    <span class="token selector">100% </span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/*最后回到元素的初始位置*/</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*有(从底部)进入动画的按钮*/</span><span class="token selector"><span class="token class">.btn-animated</span> </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*动画,延迟0.75秒启动*/</span>    <span class="token property">animation</span><span class="token punctuation">:</span> moveInBottom <span class="token number">.5</span>s ease-out <span class="token number">.75</span>s<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*动画填充模式,解决动画0%时opacity无效的问题*/</span>    <span class="token property">animation-fill-mode</span><span class="token punctuation">:</span> backwards<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="how-css-renders-a-website-the-visual-formatting-model"><a href="#how-css-renders-a-website-the-visual-formatting-model" class="headerlink" title="how css renders a website _ the visual formatting model"></a>how css renders a website _ the visual formatting model</h2><p><img src="img_49.png" alt="css视觉格式化模型"></p><ul><li>盒子面积</li><li>盒子模型(行内块/块/行)</li><li>定位方案(floats和position)</li><li>堆叠上下文</li><li>渲染树上的其他元素</li><li>外部属性</li></ul><p><img src="img_50.png" alt="img_50.png"><br><img src="img_51.png" alt="img_51.png"><br><img src="img_52.png" alt="box-sizing可以在计算盒子尺寸时忽略padding的大小"><br><img src="img_53.png" alt="三种盒子模型"><img src="img_54.png" alt="img_54.png"><img src="img_55.png" alt="不同的透明度/transform/filter/...都可能影响zindex"></p><h2 id="css-architecture-component-and-BEM"><a href="#css-architecture-component-and-BEM" class="headerlink" title="css architecture,component and BEM"></a>css architecture,component and BEM</h2><p><img src="img_56.png" alt="img_56.png"><br><img src="img_58.png" alt="组件驱动开发,类似于原子化设计"><br><img src="img_60.png" alt="统一的命名风格,BEM"> </p><ul><li>base 基本样式文件夹</li><li>components 每个组件的样式文件夹</li><li>layout 布局样式文件夹</li><li>pages 特定页面的样式文件夹</li><li>themes 可切换的主题样式文件夹</li><li>abstract 摘要文件夹,放置不输出css的文件(如变量,mixin)</li><li>vendors 第三方css</li></ul><h3 id="implementing-BEM-in-the-Natours-Project"><a href="#implementing-BEM-in-the-Natours-Project" class="headerlink" title="implementing BEM in the Natours Project"></a>implementing BEM in the Natours Project</h3><p><img src="img_61.png" alt="img_61.png"></p><h4 id="index-html-5"><a href="#index-html-5" class="headerlink" title="index.html"></a>index.html</h4><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!doctype html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span>          <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, user-scalable<span class="token punctuation">=</span>no, initial-scale<span class="token punctuation">=</span>1.0, maximum-scale<span class="token punctuation">=</span>1.0, minimum-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ie<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--google字体,数字表示粗细--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://fonts.googleapis.com/css?family<span class="token punctuation">=</span>Lato:100,300,400,700,900<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>css/style.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--网站标题栏的小图标--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>shortcut icon<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>image/png<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/favicon.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Natours | Exciting tours for adventurous people<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--设置背景的一个好的方式: 定义一个容器,设置容器背景,然后调整容器定位--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header__logo-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--alt: 描述seo,搜索引擎优化,并且图片无法加载时作为填充文本--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/logo-white.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Logo<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header__logo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header__text-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-primary--main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Outdoors<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-primary--sub<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>is where life happens<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn--white btn--animated<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Discover our tours<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h4 id="style-css-3"><a href="#style-css-3" class="headerlink" title="style.css"></a>style.css</h4><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*品牌色COLORS:Light green: #7ed56fMedium green: #55c57aDark green: #28b485*/</span><span class="token comment" spellcheck="true">/* basic reset */</span><span class="token comment" spellcheck="true">/*    重置样式是为了让样式在不同浏览器都保持一致    但是如今的浏览器兼容性越来越好,所以重置已经不是必须的了    添加after和before是因为只匹配*的话,after和before不会被覆盖到*/</span><span class="token selector">*,*<span class="token pseudo-element">::after</span>,*<span class="token pseudo-element">::before</span> </span><span class="token punctuation">{</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*继承*/</span>    <span class="token property">box-sizing</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">html </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*设置根元素font-size*/</span>    <span class="token comment" spellcheck="true">/*设置为10是因为方便换算 1rem=10px -> 16px=1.6rem*/</span>    <span class="token comment" spellcheck="true">/*font-size: 10px;*/</span>    <span class="token comment" spellcheck="true">/*写死为10px是不好的(比如用户修改浏览器默认字体大小?放大缩小),我们应该基于浏览器的默认font-size(16px)的百分比*/</span>    <span class="token comment" spellcheck="true">/*0.625*16=10*/</span>    <span class="token comment" spellcheck="true">/*老ie不兼容rem*/</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">62.5%</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*改变盒子模型,以便不再添加边框和填充到总宽度和总高度*/</span>    <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*    字体相关的写在body,why    因为字体的属性通常是遗传/继承的,所以加在body来使之遗传,    比通用选择器里给每个元素(父子都有)添加来得高效*/</span><span class="token selector">body </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*        sans-serif是无衬线字体        lato是谷歌的字体    */</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"Lato"</span>, sans-serif<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">400</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*font-size: 16px;*/</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">1.6</span>rem<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* 比预定义行高高1.7倍 */</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">1.7</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#777</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* 四边的留白 */</span>    <span class="token comment" spellcheck="true">/*padding: 30px;*/</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">3</span>rem<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* basic reset end */</span><span class="token selector"><span class="token class">.header</span> </span><span class="token punctuation">{</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">95</span>vh<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*        linear-gradient: 线性渐变        to right bottom: 向右下角渐变        rgba: 最后一个数值是透明度     */</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>            to right bottom,            <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">126</span>, <span class="token number">213</span>, <span class="token number">111</span>, <span class="token number">0.8</span><span class="token punctuation">)</span>,            <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">40</span>, <span class="token number">180</span>, <span class="token number">131</span>, <span class="token number">0.8</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span>,    <span class="token url">url("../img/hero.jpg")</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* cover: 不论宽度如何改变,都会适应 */</span>    <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* 背景缩放时顶部不会被裁剪,而是下半部分被裁剪 */</span>    <span class="token property">background-position</span><span class="token punctuation">:</span> top<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*        剪辑图片的右下角        polygon: 四个参数对应顺时针的四角,参数指定该点相对于左上角的顶点的距离    */</span>    <span class="token comment" spellcheck="true">/*clip-path: polygon(0 0,50% 15%,100% 200px,0 100%);*/</span>    <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">polygon</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token number">0</span>, <span class="token number">100%</span> <span class="token number">0</span>, <span class="token number">100%</span> <span class="token number">75</span>vh, <span class="token number">0</span> <span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.header__logo-box</span> </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*子绝父相*/</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*top: 40px;*/</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">4</span>rem<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*left: 40px;*/</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">4</span>rem<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.header__logo</span> </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*会自动计算宽度*/</span>    <span class="token comment" spellcheck="true">/*height: 35px;*/</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">3.5</span>rem<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.header__logo-box</span><span class="token pseudo-class">:hover</span> <span class="token class">.header__logo</span> </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*        要父元素的hover+子元素选择器才行        如果是子元素选择器:hover,则每次hover,子元素移开(动画),此时又失去hover,则会一直在原点频闪    */</span>    <span class="token property">animation</span><span class="token punctuation">:</span> moveInRight <span class="token number">1</span>s ease-out<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.header__text-box</span> </span><span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*移动父元素的50%*/</span>    <span class="token comment" spellcheck="true">/*top: 50%;*/</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">40%</span><span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*移动自身的-50%,回到正中位置*/</span>    <span class="token comment" spellcheck="true">/*这里的50%不是基于父元素,而是基于元素本身*/</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-<span class="token number">50%</span>, -<span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*文本/行内块对齐*/</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.heading-primary</span> </span><span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* 字母转大写 */</span>    <span class="token property">text-transform</span><span class="token punctuation">:</span> uppercase<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*        背部可见性        解决动画的震动(原理不明)    */</span>    <span class="token property">backface-visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*margin-bottom: 60px;*/</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">6</span>rem<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.heading-primary--main</span> </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*块元素会占一整行,可以把另一个span挤下去*/</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*font-size: 60px;*/</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">6</span>rem<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">400</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*字间距*/</span>    <span class="token comment" spellcheck="true">/*letter-spacing: 35px;*/</span>    <span class="token property">letter-spacing</span><span class="token punctuation">:</span> <span class="token number">3.5</span>rem<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*指定要执行的动画的名称*/</span>    <span class="token property">animation-name</span><span class="token punctuation">:</span> moveInLeft<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*动画执行时间*/</span>    <span class="token property">animation-duration</span><span class="token punctuation">:</span> <span class="token number">1</span>s<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**        动画计时函数        ease-in: 越来越快        ease-out(缓出): 越来越慢        ease-in-out/linear/step-start/step-end        支持自定义     */</span>    <span class="token property">animation-timing-function</span><span class="token punctuation">:</span> ease-out<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*动画重复次数*/</span>    <span class="token comment" spellcheck="true">/*animation-iteration-count: 3;*/</span>    <span class="token comment" spellcheck="true">/*动画延迟时间(会等待x秒再开始动画)*/</span>    <span class="token comment" spellcheck="true">/*animation-delay: 3s; */</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.heading-primary--sub</span> </span><span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*font-size: 20px;*/</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">2</span>rem<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">700</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*letter-spacing: 17.4px;*/</span>    <span class="token property">letter-spacing</span><span class="token punctuation">:</span> <span class="token number">1.75</span>rem<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> moveInRight <span class="token number">1</span>s ease-out<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* 从左侧移动 */</span><span class="token comment" spellcheck="true">/* 为了浏览器优化,最好只对两个属性进行动画 */</span><span class="token atrule"><span class="token rule">@keyframes</span> moveInLeft</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*初始状态*/</span>    <span class="token selector">0% </span><span class="token punctuation">{</span>        <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*初始位置是执行动画的元素的-100px*/</span>        <span class="token comment" spellcheck="true">/*transform: translateX(-100px);*/</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">10</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">80% </span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/*执行到80%,此时到原元素位置的右侧20px*/</span>        <span class="token comment" spellcheck="true">/*transform: translateX(10px);*/</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span><span class="token number">1</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*结束状态*/</span>    <span class="token selector">100% </span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/*最后回到元素的初始位置*/</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* 从右侧移动 */</span><span class="token atrule"><span class="token rule">@keyframes</span> moveInRight</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*初始状态*/</span>    <span class="token selector">0% </span><span class="token punctuation">{</span>        <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*初始位置是执行动画的元素的100px*/</span>        <span class="token comment" spellcheck="true">/*transform: translateX(100px);*/</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span><span class="token number">10</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">80% </span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/*执行到80%,此时到原元素位置的左侧20px*/</span>        <span class="token comment" spellcheck="true">/*transform: translateX(-10px);*/</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">1</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*结束状态*/</span>    <span class="token selector">100% </span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/*最后回到元素的初始位置*/</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*可以通过分别设置两个伪类来实现点击前后的不同效果*/</span><span class="token comment" spellcheck="true">/*:link是链接伪类,此时尚未被点击*/</span><span class="token comment" spellcheck="true">/*:visited是已被点击的状态(已被访问的链接)(访问状态)*/</span><span class="token selector"><span class="token class">.btn</span><span class="token pseudo-class">:link</span>,<span class="token class">.btn</span><span class="token pseudo-class">:visited</span> </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*转大写字母*/</span>    <span class="token property">text-transform</span><span class="token punctuation">:</span> uppercase<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*取消a默认下划线*/</span>    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*padding可以撑开a元素*/</span>    <span class="token comment" spellcheck="true">/*padding: 15px 40px;*/</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">1.5</span>rem <span class="token number">4</span>rem<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*防止挡住其他元素,并且行内元素被视为文字,可以使用文字居中*/</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*border-radius: 100px;*/</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">10</span>rem<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*过渡属性动画,比帧动画简单*/</span>    <span class="token comment" spellcheck="true">/*该属性作用于该选择器的所有属性*/</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">.2</span>s<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">1.6</span>rem<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*hover y=3 active(点击) y=-1 则点击时实际是从3到1,实现了按钮按下的效果*/</span><span class="token selector"><span class="token class">.btn</span><span class="token pseudo-class">:hover</span> </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*向上移动*/</span>    <span class="token comment" spellcheck="true">/*transform: translateY(-3px);*/</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-<span class="token number">0.3</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*阴影*/</span>    <span class="token comment" spellcheck="true">/*参数1: x轴阴影位置; 参数2: y轴阴影位置; 参数3: 模糊度; 参数4: 颜色*/</span>    <span class="token comment" spellcheck="true">/*y轴向下10px的阴影*/</span>    <span class="token comment" spellcheck="true">/*box-shadow: 0 10px 20px rgba(0, 0, 0, .2);*/</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">1</span>rem <span class="token number">2</span>rem <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*被激活(单击或触发事件)时*/</span><span class="token selector"><span class="token class">.btn</span><span class="token pseudo-class">:active</span> </span><span class="token punctuation">{</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-<span class="token number">0.1</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*减少y轴的阴影面积,以及模糊度,给人一种向上按下的视觉效果*/</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">5</span>px <span class="token number">10</span>px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">0.5</span>rem <span class="token number">1</span>rem <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.btn--white</span> </span><span class="token punctuation">{</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#777</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*基本被视为(此处为btn的)子元素*/</span><span class="token comment" spellcheck="true">/*悬停到按钮外时,after会回到按钮后面*/</span><span class="token selector"><span class="token class">.btn</span><span class="token pseudo-element">::after</span> </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*可以是空,但必须设置,否则不会出现*/</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*border-radius: 100px;*/</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">10</span>rem<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*此处定位是基于.btn*/</span>    <span class="token comment" spellcheck="true">/*子绝父相*/</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*藏在.btn下方*/</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> -<span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*初始状态*/</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">.4</span>s<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.btn--white</span><span class="token pseudo-element">::after</span> </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*给.btn-white的after添加背景颜色*/</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*after被hover时触发*/</span><span class="token selector"><span class="token class">.btn</span><span class="token pseudo-class">:hover</span><span class="token pseudo-element">::after</span> </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*scale就是简单地增大元素,磁力增大为原来的2倍*/</span>    <span class="token comment" spellcheck="true">/*transform: scale(1.5);*/</span>    <span class="token comment" spellcheck="true">/*scale可以设置不同方向的缩放倍数*/</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scaleX</span><span class="token punctuation">(</span><span class="token number">1.4</span><span class="token punctuation">)</span> <span class="token function">scaleY</span><span class="token punctuation">(</span><span class="token number">1.6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*透明度过渡到0*/</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* 从底部移动 */</span><span class="token atrule"><span class="token rule">@keyframes</span> moveInBottom</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*初始状态*/</span>    <span class="token selector">0% </span><span class="token punctuation">{</span>        <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*初始位置是执行动画的元素的100px*/</span>        <span class="token comment" spellcheck="true">/*transform: translateY(30px);*/</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span><span class="token number">3</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*结束状态*/</span>    <span class="token selector">100% </span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/*最后回到元素的初始位置*/</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*有(从底部)进入动画的按钮*/</span><span class="token selector"><span class="token class">.btn--animated</span> </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*动画,延迟0.75秒启动*/</span>    <span class="token property">animation</span><span class="token punctuation">:</span> moveInBottom <span class="token number">.5</span>s ease-out <span class="token number">.75</span>s<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*动画填充模式,解决动画0%时opacity无效的问题*/</span>    <span class="token property">animation-fill-mode</span><span class="token punctuation">:</span> backwards<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h1 id="Sass"><a href="#Sass" class="headerlink" title="Sass"></a>Sass</h1><h2 id="what-is-sass"><a href="#what-is-sass" class="headerlink" title="what is sass"></a>what is sass</h2><p><img src="img_62.png" alt="img_62.png"><img src="img_63.png" alt="img_63.png"><br><img src="img_64.png" alt="sass对缩进敏感,不使用花括号和分号,scss更好"></p><h2 id="first-steps-with-sass-variables-and-nesting"><a href="#first-steps-with-sass-variables-and-nesting" class="headerlink" title="first steps with sass: variables and nesting"></a>first steps with sass: variables and nesting</h2><p><img src="img_65.png" alt="codepen上编码"><br><img src="img_66.png" alt="可以查看编译后的css"><img src="img_67.png" alt="img_67.png"></p><pre class=" language-scss"><code class="language-scss"><span class="token selector">*</span><span class="token punctuation">{</span>  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 变量</span><span class="token property"><span class="token variable">$color-primary</span></span><span class="token punctuation">:</span> <span class="token hexcode">#f9ed69</span><span class="token punctuation">;</span><span class="token property"><span class="token variable">$color-secondary</span></span><span class="token punctuation">:</span> <span class="token hexcode">#f08a5d</span><span class="token punctuation">;</span><span class="token property"><span class="token variable">$color-tertiary</span></span><span class="token punctuation">:</span> <span class="token hexcode">#b83b5e</span><span class="token punctuation">;</span><span class="token property"><span class="token variable">$color-text-dark</span></span><span class="token punctuation">:</span> <span class="token hexcode">#333</span><span class="token punctuation">;</span><span class="token property"><span class="token variable">$color-text-light</span></span><span class="token punctuation">:</span> <span class="token hexcode">#eee</span><span class="token punctuation">;</span><span class="token property"><span class="token variable">$width-button</span></span><span class="token punctuation">:</span> <span class="token number">150</span>px<span class="token punctuation">;</span><span class="token selector">nav </span><span class="token punctuation">{</span>  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-primary</span><span class="token punctuation">;</span>  <span class="token selector"><span class="token parent important">&amp;</span>::after</span><span class="token punctuation">{</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> table<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 修复浮动的影响 </span><span class="token comment" spellcheck="true">// 解决让父元素包含浮动的子元素的问题</span><span class="token comment" spellcheck="true">// .clearfix::after{</span><span class="token comment" spellcheck="true">//   content: "";</span><span class="token comment" spellcheck="true">//   clear: both;</span><span class="token comment" spellcheck="true">//   display: table;</span><span class="token comment" spellcheck="true">// }</span><span class="token selector">.navigation</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 使用float,元素塌陷,没有宽高</span>  <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>  <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// .navigation下的li</span>  <span class="token selector">li </span><span class="token punctuation">{</span>      <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// .navigation li:first-child</span>    <span class="token selector"><span class="token parent important">&amp;</span>:first-child </span><span class="token punctuation">{</span>      <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">a </span><span class="token punctuation">{</span>      <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>      <span class="token property">text-transform</span><span class="token punctuation">:</span> uppercase<span class="token punctuation">;</span>      <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color-text-dark</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token selector">.buttons </span><span class="token punctuation">{</span>  <span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.btn-main:link,.btn-hot:link </span><span class="token punctuation">{</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>  <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>  <span class="token property">text-transform</span><span class="token punctuation">:</span> uppercase<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token variable">$width-button</span><span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color-text-light</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.btn-main </span><span class="token punctuation">{</span>  <span class="token selector"><span class="token parent important">&amp;</span>:link </span><span class="token punctuation">{</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-secondary</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector"><span class="token parent important">&amp;</span>:hover </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 颜色加深15%</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">darken</span><span class="token punctuation">(</span><span class="token variable">$color-secondary</span>,<span class="token number">15%</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token selector">.btn-hot </span><span class="token punctuation">{</span>  <span class="token selector"><span class="token parent important">&amp;</span>:link </span><span class="token punctuation">{</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-tertiary</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector"><span class="token parent important">&amp;</span>:hover </span><span class="token punctuation">{</span>     <span class="token comment" spellcheck="true">// 颜色变亮10%</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">lighten</span><span class="token punctuation">(</span><span class="token variable">$color-tertiary</span>,<span class="token number">10%</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- &lt;nav class="clearfix"> --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>About us<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Pricing<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Contant<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>buttons<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn-main<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Sign up<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn-hot<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Get a quote<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">></span></span></code></pre><p><img src="img_68.png" alt="img_68.png"></p><h2 id="first-steps-with-sass-mixins-extends-and-functions"><a href="#first-steps-with-sass-mixins-extends-and-functions" class="headerlink" title="first steps with sass: mixins extends and functions"></a>first steps with sass: mixins extends and functions</h2><pre class=" language-scss"><code class="language-scss"><span class="token selector">* </span><span class="token punctuation">{</span>  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 变量</span><span class="token property"><span class="token variable">$color-primary</span></span><span class="token punctuation">:</span> <span class="token hexcode">#f9ed69</span><span class="token punctuation">;</span><span class="token property"><span class="token variable">$color-secondary</span></span><span class="token punctuation">:</span> <span class="token hexcode">#f08a5d</span><span class="token punctuation">;</span><span class="token property"><span class="token variable">$color-tertiary</span></span><span class="token punctuation">:</span> <span class="token hexcode">#b83b5e</span><span class="token punctuation">;</span><span class="token property"><span class="token variable">$color-text-dark</span></span><span class="token punctuation">:</span> <span class="token hexcode">#333</span><span class="token punctuation">;</span><span class="token property"><span class="token variable">$color-text-light</span></span><span class="token punctuation">:</span> <span class="token hexcode">#eee</span><span class="token punctuation">;</span><span class="token property"><span class="token variable">$width-button</span></span><span class="token punctuation">:</span> <span class="token number">150</span>px<span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 将重复代码定义到mixin</span><span class="token keyword">@mixin</span> <span class="token selector">clearfix </span><span class="token punctuation">{</span>  <span class="token selector"><span class="token parent important">&amp;</span>::after </span><span class="token punctuation">{</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> table<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 可以像变量一样传递参数</span><span class="token keyword">@mixin</span> <span class="token function">style-link-text</span><span class="token punctuation">(</span><span class="token variable">$color</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>  <span class="token property">text-transform</span><span class="token punctuation">:</span> uppercase<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 可以定义函数</span><span class="token keyword">@function</span> <span class="token function">divide</span><span class="token punctuation">(</span><span class="token variable">$a</span>, <span class="token variable">$b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">@return</span> <span class="token variable">$a</span> <span class="token operator">/</span> <span class="token variable">$b</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">nav </span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// * 1px 是为了设置单位</span>  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token function">divide</span><span class="token punctuation">(</span><span class="token number">60</span>, <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1</span>px<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-primary</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 利用include复用代码(mixin)</span>  <span class="token keyword">@include</span> clearfix<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 修复浮动的影响</span><span class="token comment" spellcheck="true">// 解决让父元素包含浮动的子元素的问题</span><span class="token comment" spellcheck="true">// .clearfix::after{</span><span class="token comment" spellcheck="true">//   content: "";</span><span class="token comment" spellcheck="true">//   clear: both;</span><span class="token comment" spellcheck="true">//   display: table;</span><span class="token comment" spellcheck="true">// }</span><span class="token selector">.navigation </span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 使用float,元素塌陷,没有宽高</span>  <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>  <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// .navigation下的li</span>  <span class="token selector">li </span><span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// .navigation li:first-child</span>    <span class="token selector"><span class="token parent important">&amp;</span>:first-child </span><span class="token punctuation">{</span>      <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">a:link </span><span class="token punctuation">{</span>      <span class="token keyword">@include</span> <span class="token function">style-link-text</span><span class="token punctuation">(</span><span class="token variable">$color-text-dark</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token selector">.buttons </span><span class="token punctuation">{</span>  <span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token placeholder">%btn-placeholder</span> </span><span class="token punctuation">{</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token variable">$width-button</span><span class="token punctuation">;</span>  <span class="token keyword">@include</span> <span class="token function">style-link-text</span><span class="token punctuation">(</span><span class="token variable">$color-text-light</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// .btn-main:link,</span><span class="token comment" spellcheck="true">// .btn-hot:link {</span><span class="token comment" spellcheck="true">// padding: 10px;</span><span class="token comment" spellcheck="true">// display: inline-block;</span><span class="token comment" spellcheck="true">// text-align: center;</span><span class="token comment" spellcheck="true">// border-radius: 100px;</span><span class="token comment" spellcheck="true">// width: $width-button;</span><span class="token comment" spellcheck="true">// @include style-link-text($color-text-light);</span><span class="token comment" spellcheck="true">// }</span><span class="token selector">.btn-main </span><span class="token punctuation">{</span>  <span class="token selector"><span class="token parent important">&amp;</span>:link </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 继承</span>    <span class="token keyword">@extend</span> <span class="token number">%</span>btn-placeholder<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-secondary</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector"><span class="token parent important">&amp;</span>:hover </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 颜色加深15%</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">darken</span><span class="token punctuation">(</span><span class="token variable">$color-secondary</span>, <span class="token number">15%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token selector">.btn-hot </span><span class="token punctuation">{</span>  <span class="token selector"><span class="token parent important">&amp;</span>:link </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 继承</span>    <span class="token keyword">@extend</span> <span class="token number">%</span>btn-placeholder<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-tertiary</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector"><span class="token parent important">&amp;</span>:hover </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 颜色变亮10%</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">lighten</span><span class="token punctuation">(</span><span class="token variable">$color-tertiary</span>, <span class="token number">10%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span> </code></pre><p><img src="img_69.png" alt="继承的代码,编译后"></p><h2 id="a-brief-introduction-to-the-command-line-命令行"><a href="#a-brief-introduction-to-the-command-line-命令行" class="headerlink" title="a brief introduction to the command line 命令行"></a>a brief introduction to the command line 命令行</h2><p><img src="img_70.png" alt="linux是ls,而windows是dir"></p><pre class=" language-shell"><code class="language-shell"># 进入项目根目录cd Natours# 创建js文件夹## linuxmkdir js## winmd js# 创建文件cd js## linux命令touch script.js index.js test.js## win命令ni script.js ni index.js ni test.js   # 复制index.js到上级目录cp index.js ..# 移动script.js到上级目录 mv script.js# 删除文件## linuxrm test.js## windel test.js# -r 递归删除文件夹## linuxrm -r js ## winrmdir js# 打开文件## linuxopen favicon.png## win (在文件目录下直接运行文件名称,或输入绝对路径并回车).\favicon.png</code></pre><h2 id="npm-packages-let’s-install-sass-locally"><a href="#npm-packages-let’s-install-sass-locally" class="headerlink" title="npm packages let’s install sass locally"></a>npm packages let’s install sass locally</h2><p><img src="img_71.png" alt="img_71.png"></p><h3 id="初始化npm项目"><a href="#初始化npm项目" class="headerlink" title="初始化npm项目"></a>初始化npm项目</h3><pre class=" language-shell"><code class="language-shell"># 项目根目录下npm init -y# 安装依赖npm rebuild node-sass # !!!node-sass是很老的了,只支持32bit的node(大概10x版本?)npm i node-sass --save-dev # 现在使用的是sassnpm install sass sass-loader -D</code></pre><h3 id="配置npm脚本"><a href="#配置npm脚本" class="headerlink" title="配置npm脚本"></a>配置npm脚本</h3><p><img src="img_72.png" alt="如果是node-sass,则把开头的sass缓出node-sass就行"><br><img src="img_73.png" alt="yarn compile:sass或npm run compile:sass"><br><img src="img_74.png" alt="生成文件"><br><img src="img_75.png" alt="-w是监听"></p><h3 id="sass-main-scss"><a href="#sass-main-scss" class="headerlink" title="sass/main.scss"></a>sass/main.scss</h3><pre class=" language-scss"><code class="language-scss"><span class="token comment" spellcheck="true">/*品牌色COLORS:Light green: #7ed56fMedium green: #55c57aDark green: #28b485*/</span><span class="token comment" spellcheck="true">/* basic reset */</span><span class="token comment" spellcheck="true">/*    重置样式是为了让样式在不同浏览器都保持一致    但是如今的浏览器兼容性越来越好,所以重置已经不是必须的了    添加after和before是因为只匹配*的话,after和before不会被覆盖到*/</span><span class="token property"><span class="token variable">$color-primary</span></span><span class="token punctuation">:</span> <span class="token hexcode">#55c57a</span><span class="token punctuation">;</span><span class="token property"><span class="token variable">$color-primary-light</span></span><span class="token punctuation">:</span> <span class="token hexcode">#7ed56f</span><span class="token punctuation">;</span><span class="token property"><span class="token variable">$color-primary-dark</span></span><span class="token punctuation">:</span> <span class="token hexcode">#28b485</span><span class="token punctuation">;</span><span class="token property"><span class="token variable">$color-grey-dark</span></span><span class="token punctuation">:</span> <span class="token hexcode">#777</span><span class="token punctuation">;</span><span class="token property"><span class="token variable">$color-white</span></span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// ...... </span><span class="token comment" spellcheck="true">/*    字体相关的写在body,why    因为字体的属性通常是遗传/继承的,所以加在body来使之遗传,    比通用选择器里给每个元素(父子都有)添加来得高效*/</span><span class="token selector">body </span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">/*      sans-serif是无衬线字体      lato是谷歌的字体  */</span>  <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"Lato"</span>, sans-serif<span class="token punctuation">;</span>  <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">400</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/*font-size: 16px;*/</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">1.6</span>rem<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/* 比预定义行高高1.7倍 */</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">1.7</span><span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color-grey-dark</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/* 四边的留白 */</span>  <span class="token comment" spellcheck="true">/*padding: 30px;*/</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">3</span>rem<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* basic reset end */</span><span class="token selector">.header </span><span class="token punctuation">{</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">95</span>vh<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/*      linear-gradient: 线性渐变      to right bottom: 向右下角渐变      rgba: 最后一个数值是透明度   */</span>  <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>                  to right bottom,                  <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-primary-light</span>, <span class="token number">0.8</span><span class="token punctuation">)</span>,                  <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-primary-dark</span>, <span class="token number">0.8</span><span class="token punctuation">)</span>  <span class="token punctuation">)</span>,  <span class="token url">url</span><span class="token punctuation">(</span><span class="token string">"../img/hero.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/* cover: 不论宽度如何改变,都会适应 */</span>  <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/* 背景缩放时顶部不会被裁剪,而是下半部分被裁剪 */</span>  <span class="token property">background-position</span><span class="token punctuation">:</span> top<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/*      剪辑图片的右下角      polygon: 四个参数对应顺时针的四角,参数指定该点相对于左上角的顶点的距离  */</span>  <span class="token comment" spellcheck="true">/*clip-path: polygon(0 0,50% 15%,100% 200px,0 100%);*/</span>  <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">polygon</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token number">0</span>, <span class="token number">100%</span> <span class="token number">0</span>, <span class="token number">100%</span> <span class="token number">75</span>vh, <span class="token number">0</span> <span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token selector">.heading-primary </span><span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color-white</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/* 字母转大写 */</span>  <span class="token property">text-transform</span><span class="token punctuation">:</span> uppercase<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/*      背部可见性      解决动画的震动(原理不明)  */</span>  <span class="token property">backface-visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/*margin-bottom: 60px;*/</span>  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">6</span>rem<span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token selector">.btn--white </span><span class="token punctuation">{</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-white</span><span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color-grey-dark</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token selector">.btn--white::after </span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">/*给.btn-white的after添加背景颜色*/</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-white</span><span class="token punctuation">;</span><span class="token punctuation">}</span> </code></pre><h2 id="the-esaiest-way-of-automatically-reloading-a-page-on-file-changes"><a href="#the-esaiest-way-of-automatically-reloading-a-page-on-file-changes" class="headerlink" title="the esaiest way of automatically reloading a page on file changes"></a>the esaiest way of automatically reloading a page on file changes</h2><h3 id="全局安装live-server"><a href="#全局安装live-server" class="headerlink" title="全局安装live server"></a>全局安装live server</h3><pre class=" language-shell"><code class="language-shell">npm i -g live-server# 在项目根目录live-server  # 指定端口live-server.cmd --port=9999# 此时,命令行运行着compile:sass和live-server,sass文件改变->css文件改变->liveserver更新</code></pre><h2 id="converting-our-css-code-to-sass-variables-and-nesting"><a href="#converting-our-css-code-to-sass-variables-and-nesting" class="headerlink" title="converting our css code to sass: variables and nesting"></a>converting our css code to sass: variables and nesting</h2><h3 id="sass-main-scss-1"><a href="#sass-main-scss-1" class="headerlink" title="sass/main.scss"></a>sass/main.scss</h3><pre class=" language-scss"><code class="language-scss"><span class="token comment" spellcheck="true">/*品牌色COLORS:Light green: #7ed56fMedium green: #55c57aDark green: #28b485*/</span><span class="token comment" spellcheck="true">/* basic reset */</span><span class="token comment" spellcheck="true">/*    重置样式是为了让样式在不同浏览器都保持一致    但是如今的浏览器兼容性越来越好,所以重置已经不是必须的了    添加after和before是因为只匹配*的话,after和before不会被覆盖到*/</span><span class="token property"><span class="token variable">$color-primary</span></span><span class="token punctuation">:</span> <span class="token hexcode">#55c57a</span><span class="token punctuation">;</span><span class="token property"><span class="token variable">$color-primary-light</span></span><span class="token punctuation">:</span> <span class="token hexcode">#7ed56f</span><span class="token punctuation">;</span><span class="token property"><span class="token variable">$color-primary-dark</span></span><span class="token punctuation">:</span> <span class="token hexcode">#28b485</span><span class="token punctuation">;</span><span class="token property"><span class="token variable">$color-grey-dark</span></span><span class="token punctuation">:</span> <span class="token hexcode">#777</span><span class="token punctuation">;</span><span class="token property"><span class="token variable">$color-white</span></span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span><span class="token property"><span class="token variable">$color-black</span></span><span class="token punctuation">:</span> <span class="token hexcode">#000</span><span class="token punctuation">;</span><span class="token selector">*,*::after,*::before </span><span class="token punctuation">{</span>  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/*继承*/</span>  <span class="token property">box-sizing</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">html </span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">/*设置根元素font-size*/</span>  <span class="token comment" spellcheck="true">/*设置为10是因为方便换算 1rem=10px -> 16px=1.6rem*/</span>  <span class="token comment" spellcheck="true">/*font-size: 10px;*/</span>  <span class="token comment" spellcheck="true">/*写死为10px是不好的(比如用户修改浏览器默认字体大小?放大缩小),我们应该基于浏览器的默认font-size(16px)的百分比*/</span>  <span class="token comment" spellcheck="true">/*0.625*16=10*/</span>  <span class="token comment" spellcheck="true">/*老ie不兼容rem*/</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">62.5%</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/*改变盒子模型,以便不再添加边框和填充到总宽度和总高度*/</span>  <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*    字体相关的写在body,why    因为字体的属性通常是遗传/继承的,所以加在body来使之遗传,    比通用选择器里给每个元素(父子都有)添加来得高效*/</span><span class="token selector">body </span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">/*      sans-serif是无衬线字体      lato是谷歌的字体  */</span>  <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"Lato"</span>, sans-serif<span class="token punctuation">;</span>  <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">400</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/*font-size: 16px;*/</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">1.6</span>rem<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/* 比预定义行高高1.7倍 */</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">1.7</span><span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color-grey-dark</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/* 四边的留白 */</span>  <span class="token comment" spellcheck="true">/*padding: 30px;*/</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">3</span>rem<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* basic reset end */</span><span class="token selector">.header </span><span class="token punctuation">{</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">95</span>vh<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/*      linear-gradient: 线性渐变      to right bottom: 向右下角渐变      rgba: 最后一个数值是透明度   */</span>  <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>                  to right bottom,                  <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-primary-light</span>, <span class="token number">0.8</span><span class="token punctuation">)</span>,                  <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-primary-dark</span>, <span class="token number">0.8</span><span class="token punctuation">)</span>  <span class="token punctuation">)</span>,  <span class="token url">url</span><span class="token punctuation">(</span><span class="token string">"../img/hero.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/* cover: 不论宽度如何改变,都会适应 */</span>  <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/* 背景缩放时顶部不会被裁剪,而是下半部分被裁剪 */</span>  <span class="token property">background-position</span><span class="token punctuation">:</span> top<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/*      剪辑图片的右下角      polygon: 四个参数对应顺时针的四角,参数指定该点相对于左上角的顶点的距离  */</span>  <span class="token comment" spellcheck="true">/*clip-path: polygon(0 0,50% 15%,100% 200px,0 100%);*/</span>  <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">polygon</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token number">0</span>, <span class="token number">100%</span> <span class="token number">0</span>, <span class="token number">100%</span> <span class="token number">75</span>vh, <span class="token number">0</span> <span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token selector"><span class="token parent important">&amp;</span>__logo-box </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*子绝父相*/</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*top: 40px;*/</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">4</span>rem<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*left: 40px;*/</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">4</span>rem<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector"><span class="token parent important">&amp;</span>__logo </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*会自动计算宽度*/</span>    <span class="token comment" spellcheck="true">/*height: 35px;*/</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">3.5</span>rem<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector"><span class="token parent important">&amp;</span>__logo-box:hover .header__logo </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*        要父元素的hover+子元素选择器才行        如果是子元素选择器:hover,则每次hover,子元素移开(动画),此时又失去hover,则会一直在原点频闪    */</span>    <span class="token property">animation</span><span class="token punctuation">:</span> moveInRight <span class="token number">1</span>s ease-out<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector"><span class="token parent important">&amp;</span>__text-box </span><span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*移动父元素的50%*/</span>    <span class="token comment" spellcheck="true">/*top: 50%;*/</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">40%</span><span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*移动自身的-50%,回到正中位置*/</span>    <span class="token comment" spellcheck="true">/*这里的50%不是基于父元素,而是基于元素本身*/</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-<span class="token number">50%</span>, -<span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*文本/行内块对齐*/</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token selector">.heading-primary </span><span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color-white</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/* 字母转大写 */</span>  <span class="token property">text-transform</span><span class="token punctuation">:</span> uppercase<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/*      背部可见性      解决动画的震动(原理不明)  */</span>  <span class="token property">backface-visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/*margin-bottom: 60px;*/</span>  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">6</span>rem<span class="token punctuation">;</span>  <span class="token selector"><span class="token parent important">&amp;</span>--main </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*块元素会占一整行,可以把另一个span挤下去*/</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*font-size: 60px;*/</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">6</span>rem<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">400</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*字间距*/</span>    <span class="token comment" spellcheck="true">/*letter-spacing: 35px;*/</span>    <span class="token property">letter-spacing</span><span class="token punctuation">:</span> <span class="token number">3.5</span>rem<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*指定要执行的动画的名称*/</span>    <span class="token property">animation-name</span><span class="token punctuation">:</span> moveInLeft<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*动画执行时间*/</span>    <span class="token property">animation-duration</span><span class="token punctuation">:</span> <span class="token number">1</span>s<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**        动画计时函数        ease-in: 越来越快        ease-out(缓出): 越来越慢        ease-in-out/linear/step-start/step-end        支持自定义     */</span>    <span class="token property">animation-timing-function</span><span class="token punctuation">:</span> ease-out<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*动画重复次数*/</span>    <span class="token comment" spellcheck="true">/*animation-iteration-count: 3;*/</span>    <span class="token comment" spellcheck="true">/*动画延迟时间(会等待x秒再开始动画)*/</span>    <span class="token comment" spellcheck="true">/*animation-delay: 3s; */</span>  <span class="token punctuation">}</span>  <span class="token selector"><span class="token parent important">&amp;</span>--sub </span><span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*font-size: 20px;*/</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">2</span>rem<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">700</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*letter-spacing: 17.4px;*/</span>    <span class="token property">letter-spacing</span><span class="token punctuation">:</span> <span class="token number">1.75</span>rem<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> moveInRight <span class="token number">1</span>s ease-out<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* 从左侧移动 */</span><span class="token comment" spellcheck="true">/* 为了浏览器优化,最好只对两个属性进行动画 */</span><span class="token atrule"><span class="token rule">@keyframes</span> moveInLeft</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">/*初始状态*/</span>  <span class="token selector">0% </span><span class="token punctuation">{</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*初始位置是执行动画的元素的-100px*/</span>    <span class="token comment" spellcheck="true">/*transform: translateX(-100px);*/</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">10</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">80% </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*执行到80%,此时到原元素位置的右侧20px*/</span>    <span class="token comment" spellcheck="true">/*transform: translateX(10px);*/</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span><span class="token number">1</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">/*结束状态*/</span>  <span class="token selector">100% </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*最后回到元素的初始位置*/</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* 从右侧移动 */</span><span class="token atrule"><span class="token rule">@keyframes</span> moveInRight</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">/*初始状态*/</span>  <span class="token selector">0% </span><span class="token punctuation">{</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*初始位置是执行动画的元素的100px*/</span>    <span class="token comment" spellcheck="true">/*transform: translateX(100px);*/</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span><span class="token number">10</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">80% </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*执行到80%,此时到原元素位置的左侧20px*/</span>    <span class="token comment" spellcheck="true">/*transform: translateX(-10px);*/</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">1</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">/*结束状态*/</span>  <span class="token selector">100% </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*最后回到元素的初始位置*/</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* 从底部移动 */</span><span class="token atrule"><span class="token rule">@keyframes</span> moveInBottom</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">/*初始状态*/</span>  <span class="token selector">0% </span><span class="token punctuation">{</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*初始位置是执行动画的元素的100px*/</span>    <span class="token comment" spellcheck="true">/*transform: translateY(30px);*/</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span><span class="token number">3</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">/*结束状态*/</span>  <span class="token selector">100% </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*最后回到元素的初始位置*/</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token selector">.btn </span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">/*可以通过分别设置两个伪类来实现点击前后的不同效果*/</span>  <span class="token comment" spellcheck="true">/*:link是链接伪类,此时尚未被点击*/</span>  <span class="token comment" spellcheck="true">/*:visited是已被点击的状态(已被访问的链接)(访问状态)*/</span>  <span class="token selector"><span class="token parent important">&amp;</span>:link,  <span class="token parent important">&amp;</span>:visited </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*转大写字母*/</span>    <span class="token property">text-transform</span><span class="token punctuation">:</span> uppercase<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*取消a默认下划线*/</span>    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*padding可以撑开a元素*/</span>    <span class="token comment" spellcheck="true">/*padding: 15px 40px;*/</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">1.5</span>rem <span class="token number">4</span>rem<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*防止挡住其他元素,并且行内元素被视为文字,可以使用文字居中*/</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*border-radius: 100px;*/</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">10</span>rem<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*过渡属性动画,比帧动画简单*/</span>    <span class="token comment" spellcheck="true">/*该属性作用于该选择器的所有属性*/</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">.2</span>s<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">1.6</span>rem<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">/*hover y=3 active(点击) y=-1 则点击时实际是从3到1,实现了按钮按下的效果*/</span>  <span class="token selector"><span class="token parent important">&amp;</span>:hover </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*向上移动*/</span>    <span class="token comment" spellcheck="true">/*transform: translateY(-3px);*/</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-<span class="token number">0.3</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*阴影*/</span>    <span class="token comment" spellcheck="true">/*参数1: x轴阴影位置; 参数2: y轴阴影位置; 参数3: 模糊度; 参数4: 颜色*/</span>    <span class="token comment" spellcheck="true">/*y轴向下10px的阴影*/</span>    <span class="token comment" spellcheck="true">/*box-shadow: 0 10px 20px rgba(0, 0, 0, .2);*/</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">1</span>rem <span class="token number">2</span>rem <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-black</span>, <span class="token number">.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*after被hover时触发*/</span>    <span class="token selector"><span class="token parent important">&amp;</span>::after </span><span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">/*scale就是简单地增大元素,磁力增大为原来的2倍*/</span>      <span class="token comment" spellcheck="true">/*transform: scale(1.5);*/</span>      <span class="token comment" spellcheck="true">/*scale可以设置不同方向的缩放倍数*/</span>      <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scaleX</span><span class="token punctuation">(</span><span class="token number">1.4</span><span class="token punctuation">)</span> <span class="token function">scaleY</span><span class="token punctuation">(</span><span class="token number">1.6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">/*透明度过渡到0*/</span>      <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">/*被激活(单击或触发事件)时*/</span>  <span class="token selector"><span class="token parent important">&amp;</span>:active </span><span class="token punctuation">{</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-<span class="token number">0.1</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*减少y轴的阴影面积,以及模糊度,给人一种向上按下的视觉效果*/</span>    <span class="token comment" spellcheck="true">//box-shadow: 0 5px 10px rgba($color-black, .2);</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">0.5</span>rem <span class="token number">1</span>rem <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-black</span>, <span class="token number">.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector"><span class="token parent important">&amp;</span>--white </span><span class="token punctuation">{</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-white</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color-grey-dark</span><span class="token punctuation">;</span>    <span class="token selector"><span class="token parent important">&amp;</span>::after </span><span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">/*给.btn-white的after添加背景颜色*/</span>      <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-white</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">/*基本被视为(此处为btn的)子元素*/</span>  <span class="token comment" spellcheck="true">/*悬停到按钮外时,after会回到按钮后面*/</span>  <span class="token selector"><span class="token parent important">&amp;</span>::after </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*可以是空,但必须设置,否则不会出现*/</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*border-radius: 100px;*/</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">10</span>rem<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*此处定位是基于.btn*/</span>    <span class="token comment" spellcheck="true">/*子绝父相*/</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*藏在.btn下方*/</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> -<span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*初始状态*/</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">.4</span>s<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">/*有(从底部)进入动画的按钮*/</span>  <span class="token selector"><span class="token parent important">&amp;</span>--animated </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*动画,延迟0.75秒启动*/</span>    <span class="token property">animation</span><span class="token punctuation">:</span> moveInBottom <span class="token number">.5</span>s ease-out <span class="token number">.75</span>s<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*动画填充模式,解决动画0%时opacity无效的问题*/</span>    <span class="token property">animation-fill-mode</span><span class="token punctuation">:</span> backwards<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span> </code></pre><h2 id="implementing-the-7-1-7-1模式-css-architecture-with-sass"><a href="#implementing-the-7-1-7-1模式-css-architecture-with-sass" class="headerlink" title="implementing the 7-1(7-1模式) css architecture with sass"></a>implementing the 7-1(7-1模式) css architecture with sass</h2><p><img src="img_76.png" alt="文件结构"></p><h3 id="base"><a href="#base" class="headerlink" title="base/"></a>base/</h3><h4 id="animations"><a href="#animations" class="headerlink" title="animations"></a>animations</h4><pre class=" language-scss"><code class="language-scss"><span class="token comment" spellcheck="true">// 存放动画</span><span class="token comment" spellcheck="true">/* 从左侧移动 */</span><span class="token comment" spellcheck="true">/* 为了浏览器优化,最好只对两个属性进行动画 */</span><span class="token atrule"><span class="token rule">@keyframes</span> moveInLeft</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">/*初始状态*/</span>  <span class="token selector">0% </span><span class="token punctuation">{</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*初始位置是执行动画的元素的-100px*/</span>    <span class="token comment" spellcheck="true">/*transform: translateX(-100px);*/</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">10</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">80% </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*执行到80%,此时到原元素位置的右侧20px*/</span>    <span class="token comment" spellcheck="true">/*transform: translateX(10px);*/</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span><span class="token number">1</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">/*结束状态*/</span>  <span class="token selector">100% </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*最后回到元素的初始位置*/</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* 从右侧移动 */</span><span class="token atrule"><span class="token rule">@keyframes</span> moveInRight</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">/*初始状态*/</span>  <span class="token selector">0% </span><span class="token punctuation">{</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*初始位置是执行动画的元素的100px*/</span>    <span class="token comment" spellcheck="true">/*transform: translateX(100px);*/</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span><span class="token number">10</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">80% </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*执行到80%,此时到原元素位置的左侧20px*/</span>    <span class="token comment" spellcheck="true">/*transform: translateX(-10px);*/</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">1</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">/*结束状态*/</span>  <span class="token selector">100% </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*最后回到元素的初始位置*/</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* 从底部移动 */</span><span class="token atrule"><span class="token rule">@keyframes</span> moveInBottom</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">/*初始状态*/</span>  <span class="token selector">0% </span><span class="token punctuation">{</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*初始位置是执行动画的元素的100px*/</span>    <span class="token comment" spellcheck="true">/*transform: translateY(30px);*/</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span><span class="token number">3</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">/*结束状态*/</span>  <span class="token selector">100% </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*最后回到元素的初始位置*/</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="base-1"><a href="#base-1" class="headerlink" title="base"></a>base</h4><pre class=" language-scss"><code class="language-scss"><span class="token comment" spellcheck="true">// 基本样式(如重置页面)</span><span class="token comment" spellcheck="true">// 下划线开头的sass文件不会被编译,但可以被引用</span> <span class="token comment" spellcheck="true">/* basic reset */</span><span class="token comment" spellcheck="true">/*    重置样式是为了让样式在不同浏览器都保持一致    但是如今的浏览器兼容性越来越好,所以重置已经不是必须的了    添加after和before是因为只匹配*的话,after和before不会被覆盖到*/</span> <span class="token selector">*,*::after,*::before </span><span class="token punctuation">{</span>  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/*继承*/</span>  <span class="token property">box-sizing</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">html </span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">/*设置根元素font-size*/</span>  <span class="token comment" spellcheck="true">/*设置为10是因为方便换算 1rem=10px -> 16px=1.6rem*/</span>  <span class="token comment" spellcheck="true">/*font-size: 10px;*/</span>  <span class="token comment" spellcheck="true">/*写死为10px是不好的(比如用户修改浏览器默认字体大小?放大缩小),我们应该基于浏览器的默认font-size(16px)的百分比*/</span>  <span class="token comment" spellcheck="true">/*0.625*16=10*/</span>  <span class="token comment" spellcheck="true">/*老ie不兼容rem*/</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">62.5%</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/*改变盒子模型,以便不再添加边框和填充到总宽度和总高度*/</span>  <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* basic reset end */</span></code></pre><h4 id="typography"><a href="#typography" class="headerlink" title="typography"></a>typography</h4><pre class=" language-scss"><code class="language-scss"><span class="token comment" spellcheck="true">// 字体样式</span><span class="token comment" spellcheck="true">/*    字体相关的写在body,why    因为字体的属性通常是遗传/继承的,所以加在body来使之遗传,    比通用选择器里给每个元素(父子都有)添加来得高效*/</span><span class="token selector">body </span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">/*      sans-serif是无衬线字体      lato是谷歌的字体  */</span>  <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"Lato"</span>, sans-serif<span class="token punctuation">;</span>  <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">400</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/*font-size: 16px;*/</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">1.6</span>rem<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/* 比预定义行高高1.7倍 */</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">1.7</span><span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color-grey-dark</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/* 四边的留白 */</span>  <span class="token comment" spellcheck="true">/*padding: 30px;*/</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">3</span>rem<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.heading-primary </span><span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color-white</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/* 字母转大写 */</span>  <span class="token property">text-transform</span><span class="token punctuation">:</span> uppercase<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/*      背部可见性      解决动画的震动(原理不明)  */</span>  <span class="token property">backface-visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/*margin-bottom: 60px;*/</span>  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">6</span>rem<span class="token punctuation">;</span>  <span class="token selector"><span class="token parent important">&amp;</span>--main </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*块元素会占一整行,可以把另一个span挤下去*/</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*font-size: 60px;*/</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">6</span>rem<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">400</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*字间距*/</span>    <span class="token comment" spellcheck="true">/*letter-spacing: 35px;*/</span>    <span class="token property">letter-spacing</span><span class="token punctuation">:</span> <span class="token number">3.5</span>rem<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*指定要执行的动画的名称*/</span>    <span class="token property">animation-name</span><span class="token punctuation">:</span> moveInLeft<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*动画执行时间*/</span>    <span class="token property">animation-duration</span><span class="token punctuation">:</span> <span class="token number">1</span>s<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**        动画计时函数        ease-in: 越来越快        ease-out(缓出): 越来越慢        ease-in-out/linear/step-start/step-end        支持自定义     */</span>    <span class="token property">animation-timing-function</span><span class="token punctuation">:</span> ease-out<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*动画重复次数*/</span>    <span class="token comment" spellcheck="true">/*animation-iteration-count: 3;*/</span>    <span class="token comment" spellcheck="true">/*动画延迟时间(会等待x秒再开始动画)*/</span>    <span class="token comment" spellcheck="true">/*animation-delay: 3s; */</span>  <span class="token punctuation">}</span>  <span class="token selector"><span class="token parent important">&amp;</span>--sub </span><span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*font-size: 20px;*/</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">2</span>rem<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">700</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*letter-spacing: 17.4px;*/</span>    <span class="token property">letter-spacing</span><span class="token punctuation">:</span> <span class="token number">1.75</span>rem<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> moveInRight <span class="token number">1</span>s ease-out<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="components"><a href="#components" class="headerlink" title="components/"></a>components/</h3><h4 id="button"><a href="#button" class="headerlink" title="button"></a>button</h4><pre class=" language-scss"><code class="language-scss"><span class="token comment" spellcheck="true">// 存放button相关样式</span><span class="token comment" spellcheck="true">// a标签模拟button</span><span class="token selector">.btn </span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">/*可以通过分别设置两个伪类来实现点击前后的不同效果*/</span>  <span class="token comment" spellcheck="true">/*:link是链接伪类,此时尚未被点击*/</span>  <span class="token comment" spellcheck="true">/*:visited是已被点击的状态(已被访问的链接)(访问状态)*/</span>  <span class="token selector"><span class="token parent important">&amp;</span>:link,  <span class="token parent important">&amp;</span>:visited </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*转大写字母*/</span>    <span class="token property">text-transform</span><span class="token punctuation">:</span> uppercase<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*取消a默认下划线*/</span>    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*padding可以撑开a元素*/</span>    <span class="token comment" spellcheck="true">/*padding: 15px 40px;*/</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">1.5</span>rem <span class="token number">4</span>rem<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*防止挡住其他元素,并且行内元素被视为文字,可以使用文字居中*/</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*border-radius: 100px;*/</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">10</span>rem<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*过渡属性动画,比帧动画简单*/</span>    <span class="token comment" spellcheck="true">/*该属性作用于该选择器的所有属性*/</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">.2</span>s<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">1.6</span>rem<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">/*hover y=3 active(点击) y=-1 则点击时实际是从3到1,实现了按钮按下的效果*/</span>  <span class="token selector"><span class="token parent important">&amp;</span>:hover </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*向上移动*/</span>    <span class="token comment" spellcheck="true">/*transform: translateY(-3px);*/</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-<span class="token number">0.3</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*阴影*/</span>    <span class="token comment" spellcheck="true">/*参数1: x轴阴影位置; 参数2: y轴阴影位置; 参数3: 模糊度; 参数4: 颜色*/</span>    <span class="token comment" spellcheck="true">/*y轴向下10px的阴影*/</span>    <span class="token comment" spellcheck="true">/*box-shadow: 0 10px 20px rgba(0, 0, 0, .2);*/</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">1</span>rem <span class="token number">2</span>rem <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-black</span>, <span class="token number">.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*after被hover时触发*/</span>    <span class="token selector"><span class="token parent important">&amp;</span>::after </span><span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">/*scale就是简单地增大元素,磁力增大为原来的2倍*/</span>      <span class="token comment" spellcheck="true">/*transform: scale(1.5);*/</span>      <span class="token comment" spellcheck="true">/*scale可以设置不同方向的缩放倍数*/</span>      <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scaleX</span><span class="token punctuation">(</span><span class="token number">1.4</span><span class="token punctuation">)</span> <span class="token function">scaleY</span><span class="token punctuation">(</span><span class="token number">1.6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">/*透明度过渡到0*/</span>      <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">/*被激活(单击或触发事件)时*/</span>  <span class="token selector"><span class="token parent important">&amp;</span>:active </span><span class="token punctuation">{</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-<span class="token number">0.1</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*减少y轴的阴影面积,以及模糊度,给人一种向上按下的视觉效果*/</span>    <span class="token comment" spellcheck="true">//box-shadow: 0 5px 10px rgba($color-black, .2);</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">0.5</span>rem <span class="token number">1</span>rem <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-black</span>, <span class="token number">.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector"><span class="token parent important">&amp;</span>--white </span><span class="token punctuation">{</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-white</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color-grey-dark</span><span class="token punctuation">;</span>    <span class="token selector"><span class="token parent important">&amp;</span>::after </span><span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">/*给.btn-white的after添加背景颜色*/</span>      <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-white</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">/*基本被视为(此处为btn的)子元素*/</span>  <span class="token comment" spellcheck="true">/*悬停到按钮外时,after会回到按钮后面*/</span>  <span class="token selector"><span class="token parent important">&amp;</span>::after </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*可以是空,但必须设置,否则不会出现*/</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*border-radius: 100px;*/</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">10</span>rem<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*此处定位是基于.btn*/</span>    <span class="token comment" spellcheck="true">/*子绝父相*/</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*藏在.btn下方*/</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> -<span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*初始状态*/</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">.4</span>s<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">/*有(从底部)进入动画的按钮*/</span>  <span class="token selector"><span class="token parent important">&amp;</span>--animated </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*动画,延迟0.75秒启动*/</span>    <span class="token property">animation</span><span class="token punctuation">:</span> moveInBottom <span class="token number">.5</span>s ease-out <span class="token number">.75</span>s<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*动画填充模式,解决动画0%时opacity无效的问题*/</span>    <span class="token property">animation-fill-mode</span><span class="token punctuation">:</span> backwards<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="layout"><a href="#layout" class="headerlink" title="layout/"></a>layout/</h3><h4 id="header"><a href="#header" class="headerlink" title="header"></a>header</h4><pre class=" language-scss"><code class="language-scss"><span class="token comment" spellcheck="true">// 布局样式</span><span class="token selector">.header </span><span class="token punctuation">{</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">95</span>vh<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/*      linear-gradient: 线性渐变      to right bottom: 向右下角渐变      rgba: 最后一个数值是透明度   */</span>  <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>                  to right bottom,                  <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-primary-light</span>, <span class="token number">0.8</span><span class="token punctuation">)</span>,                  <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-primary-dark</span>, <span class="token number">0.8</span><span class="token punctuation">)</span>  <span class="token punctuation">)</span>,  <span class="token url">url</span><span class="token punctuation">(</span><span class="token string">"../img/hero.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/* cover: 不论宽度如何改变,都会适应 */</span>  <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/* 背景缩放时顶部不会被裁剪,而是下半部分被裁剪 */</span>  <span class="token property">background-position</span><span class="token punctuation">:</span> top<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/*      剪辑图片的右下角      polygon: 四个参数对应顺时针的四角,参数指定该点相对于左上角的顶点的距离  */</span>  <span class="token comment" spellcheck="true">/*clip-path: polygon(0 0,50% 15%,100% 200px,0 100%);*/</span>  <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">polygon</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token number">0</span>, <span class="token number">100%</span> <span class="token number">0</span>, <span class="token number">100%</span> <span class="token number">75</span>vh, <span class="token number">0</span> <span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token selector"><span class="token parent important">&amp;</span>__logo-box </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*子绝父相*/</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*top: 40px;*/</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">4</span>rem<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*left: 40px;*/</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">4</span>rem<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector"><span class="token parent important">&amp;</span>__logo </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*会自动计算宽度*/</span>    <span class="token comment" spellcheck="true">/*height: 35px;*/</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">3.5</span>rem<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector"><span class="token parent important">&amp;</span>__logo-box:hover .header__logo </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*        要父元素的hover+子元素选择器才行        如果是子元素选择器:hover,则每次hover,子元素移开(动画),此时又失去hover,则会一直在原点频闪    */</span>    <span class="token property">animation</span><span class="token punctuation">:</span> moveInRight <span class="token number">1</span>s ease-out<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector"><span class="token parent important">&amp;</span>__text-box </span><span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*移动父元素的50%*/</span>    <span class="token comment" spellcheck="true">/*top: 50%;*/</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">40%</span><span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*移动自身的-50%,回到正中位置*/</span>    <span class="token comment" spellcheck="true">/*这里的50%不是基于父元素,而是基于元素本身*/</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-<span class="token number">50%</span>, -<span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*文本/行内块对齐*/</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span>  </code></pre><h3 id="abstracts"><a href="#abstracts" class="headerlink" title="abstracts/"></a>abstracts/</h3><h4 id="variables"><a href="#variables" class="headerlink" title="variables"></a>variables</h4><pre class=" language-scss"><code class="language-scss"><span class="token comment" spellcheck="true">// COLORS</span><span class="token comment" spellcheck="true">/*  品牌色  COLORS:  Light green: #7ed56f  Medium green: #55c57a  Dark green: #28b485*/</span><span class="token property"><span class="token variable">$color-primary</span></span><span class="token punctuation">:</span> <span class="token hexcode">#55c57a</span><span class="token punctuation">;</span><span class="token property"><span class="token variable">$color-primary-light</span></span><span class="token punctuation">:</span> <span class="token hexcode">#7ed56f</span><span class="token punctuation">;</span><span class="token property"><span class="token variable">$color-primary-dark</span></span><span class="token punctuation">:</span> <span class="token hexcode">#28b485</span><span class="token punctuation">;</span><span class="token property"><span class="token variable">$color-grey-dark</span></span><span class="token punctuation">:</span> <span class="token hexcode">#777</span><span class="token punctuation">;</span><span class="token property"><span class="token variable">$color-white</span></span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span><span class="token property"><span class="token variable">$color-black</span></span><span class="token punctuation">:</span> <span class="token hexcode">#000</span><span class="token punctuation">;</span> </code></pre><h3 id="main-scss"><a href="#main-scss" class="headerlink" title="main.scss"></a>main.scss</h3><pre class=" language-scss"><code class="language-scss"><span class="token comment" spellcheck="true">// 基础公共样式</span><span class="token keyword">@import</span> <span class="token string">"base/base"</span><span class="token punctuation">;</span><span class="token keyword">@import</span> <span class="token string">"base/animations"</span><span class="token punctuation">;</span><span class="token keyword">@import</span> <span class="token string">"base/typography"</span><span class="token punctuation">;</span><span class="token keyword">@import</span> <span class="token string">"base/utilities"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 抽象样式</span><span class="token keyword">@import</span> <span class="token string">"abstracts/functions"</span><span class="token punctuation">;</span><span class="token keyword">@import</span> <span class="token string">"abstracts/mixins"</span><span class="token punctuation">;</span><span class="token keyword">@import</span> <span class="token string">"abstracts/variables"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 页面样式</span><span class="token keyword">@import</span> <span class="token string">"pages/home"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 组件样式</span><span class="token keyword">@import</span> <span class="token string">"components/button"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 布局样式</span><span class="token keyword">@import</span> <span class="token string">"layout/header"</span><span class="token punctuation">;</span> </code></pre><h1 id="responsive-design"><a href="#responsive-design" class="headerlink" title="responsive design"></a>responsive design</h1><h2 id="review-responsive-design-principles-三种响应式方案-and-layout-types"><a href="#review-responsive-design-principles-三种响应式方案-and-layout-types" class="headerlink" title="review responsive design principles(三种响应式方案) and layout types"></a>review responsive design principles(三种响应式方案) and layout types</h2><p><img src="img_77.png" alt="img_77.png"><img src="img_78.png" alt="媒体查询几乎不用"><br><img src="img_79.png" alt="主要有三种方式进行流式布局"><img src="img_80.png" alt="flexbox适用于1维布局"><img src="img_81.png" alt="为什么此项目有用到float"></p><h2 id="building-a-custom-grid-with-floats"><a href="#building-a-custom-grid-with-floats" class="headerlink" title="building a custom grid with floats"></a>building a custom grid with floats</h2><p><img src="img_82.png" alt="img_82.png"><br><img src="img_83.png" alt="网格系统"></p><h3 id="index-html-6"><a href="#index-html-6" class="headerlink" title="index.html"></a>index.html</h3><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!doctype html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    ......<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    ......<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>grid-test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            col 1 of 2        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            col 1 of 2        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            col 1 of 3        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            col 1 of 3        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            col 1 of 3        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            col 1 of 3        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-2-of-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            col 2 of 3        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            col 1 of 4        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            col 1 of 4        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            col 1 of 4        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            col 1 of 4        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            col 1 of 4        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            col 1 of 4        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-2-of-4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            col 2 of 4        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            col 1 of 4        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-3-of-4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            col 3 of 4        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="layout-1"><a href="#layout-1" class="headerlink" title="layout/"></a>layout/</h3><h4 id="grid"><a href="#grid" class="headerlink" title="grid"></a>grid</h4><pre class=" language-scss"><code class="language-scss"><span class="token selector">.row </span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 当宽度足够时才会显示定义的maxwidth长度</span>  <span class="token comment" spellcheck="true">// 宽度不足时,只填充可用空间</span>  <span class="token property">max-width</span><span class="token punctuation">:</span> <span class="token variable">$grid-width</span><span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#eee</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// auto,会自动计算元素两边长度相同</span>  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 选中除了last-child外所有元素</span>  &amp;<span class="token punctuation">:</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token punctuation">:</span>last-child<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token variable">$gutter-vertical</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// 清除浮动塌陷</span>  <span class="token keyword">@include</span> clearfix<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// [class*="col-"] 所有包含col-的class</span>  <span class="token comment" spellcheck="true">// [class$="col-"] 所有以col-结尾的class</span>  <span class="token comment" spellcheck="true">// 所有class以col-开头的</span>  <span class="token selector">[class^="col-"] </span><span class="token punctuation">{</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> orangered<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 使用float进行排列</span>    <span class="token comment" spellcheck="true">// float会有塌陷,要用clearfix解决</span>    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 最后一个child不需要</span>    &amp;<span class="token punctuation">:</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token punctuation">:</span>last-child<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// 加上间隔(排水沟)</span>      <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token variable">$gutter-horizontal</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// 分为2部分,占其中1部分</span>  <span class="token comment" spellcheck="true">// 占一列的1/2</span>  <span class="token selector">.col-1-of-2 </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// css原生的calc函数,进行计算</span>    <span class="token comment" spellcheck="true">// 在css中使用sass变量 -> #{sass变量}</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">100%</span> <span class="token operator">-</span> <span class="token variable">#{$gutter-horizontal}</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">.col-1-of-3 </span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">100%</span> <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token variable">#{$gutter-horizontal}</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">.col-2-of-3 </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 2个1/3加上1个排水沟</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">100%</span> <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token variable">#{$gutter-horizontal}</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token variable">#{$gutter-horizontal}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">.col-1-of-4 </span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">100%</span> <span class="token operator">-</span> <span class="token number">3</span> <span class="token operator">*</span> <span class="token variable">#{$gutter-horizontal}</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">.col-2-of-4 </span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">100%</span> <span class="token operator">-</span> <span class="token number">3</span> <span class="token operator">*</span> <span class="token variable">#{$gutter-horizontal}</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token variable">#{$gutter-horizontal}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">.col-3-of-4 </span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">100%</span> <span class="token operator">-</span> <span class="token number">3</span> <span class="token operator">*</span> <span class="token variable">#{$gutter-horizontal}</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token variable">#{$gutter-horizontal}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="abstracts-1"><a href="#abstracts-1" class="headerlink" title="abstracts/"></a>abstracts/</h3><h4 id="variables-1"><a href="#variables-1" class="headerlink" title="variables"></a>variables</h4><pre class=" language-scss"><code class="language-scss"><span class="token comment" spellcheck="true">// COLORS </span><span class="token comment" spellcheck="true">// GRID</span><span class="token comment" spellcheck="true">// 单行的宽度</span><span class="token property"><span class="token variable">$grid-width</span></span><span class="token punctuation">:</span> <span class="token number">114</span>rem<span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 不同块之间的间隔(垂直)</span><span class="token property"><span class="token variable">$gutter-vertical</span></span><span class="token punctuation">:</span> <span class="token number">8</span>rem<span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 水平间距</span><span class="token property"><span class="token variable">$gutter-horizontal</span></span><span class="token punctuation">:</span> <span class="token number">6</span>rem<span class="token punctuation">;</span></code></pre><h3 id="main-scss-1"><a href="#main-scss-1" class="headerlink" title="main.scss"></a>main.scss</h3><pre class=" language-scss"><code class="language-scss"><span class="token comment" spellcheck="true">// 抽象样式</span><span class="token keyword">@import</span> <span class="token string">"abstracts/functions"</span><span class="token punctuation">;</span><span class="token keyword">@import</span> <span class="token string">"abstracts/mixins"</span><span class="token punctuation">;</span><span class="token keyword">@import</span> <span class="token string">"abstracts/variables"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 基础公共样式</span><span class="token keyword">@import</span> <span class="token string">"base/base"</span><span class="token punctuation">;</span><span class="token keyword">@import</span> <span class="token string">"base/animations"</span><span class="token punctuation">;</span><span class="token keyword">@import</span> <span class="token string">"base/typography"</span><span class="token punctuation">;</span><span class="token keyword">@import</span> <span class="token string">"base/utilities"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 页面样式</span><span class="token keyword">@import</span> <span class="token string">"pages/home"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 组件样式</span><span class="token keyword">@import</span> <span class="token string">"components/button"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 布局样式</span><span class="token keyword">@import</span> <span class="token string">"layout/header"</span><span class="token punctuation">;</span><span class="token keyword">@import</span> <span class="token string">"layout/grid"</span><span class="token punctuation">;</span> </code></pre><p><img src="img_84.png" alt="测试"></p><h1 id="About-Page"><a href="#About-Page" class="headerlink" title="About Page"></a>About Page</h1><h2 id="building-the-about-section-p1"><a href="#building-the-about-section-p1" class="headerlink" title="building the about section p1"></a>building the about section p1</h2><p><img src="img_85.png" alt="img_85.png"></p><h3 id="index-html-7"><a href="#index-html-7" class="headerlink" title="index.html"></a>index.html</h3><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!doctype html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span>        <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, user-scalable<span class="token punctuation">=</span>no, initial-scale<span class="token punctuation">=</span>1.0, maximum-scale<span class="token punctuation">=</span>1.0, minimum-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ie<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--google字体,数字表示粗细--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://fonts.googleapis.com/css?family<span class="token punctuation">=</span>Lato:100,300,400,700,900<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>css/style.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--网站标题栏的小图标--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>shortcut icon<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>image/png<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/favicon.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Natours | Exciting tours for adventurous people<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--设置背景的一个好的方式: 定义一个容器,设置容器背景,然后调整容器定位--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header__logo-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!--alt: 描述seo,搜索引擎优化,并且图片无法加载时作为填充文本--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/logo-white.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Logo<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header__logo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header__text-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-primary--main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Outdoors<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-primary--sub<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>is where life happens<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn--white btn--animated<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Discover our tours<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--告诉搜索引擎或阅读器,main标签里的是网站的主要内容--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--about部分--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section-about<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>u-center-text u-margin-bottom-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-secondary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    Exciting tours for adventurous people                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    col 1 of 2                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    col 1 of 2                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="pages-home"><a href="#pages-home" class="headerlink" title="pages/home"></a>pages/home</h3><pre class=" language-scss"><code class="language-scss"><span class="token comment" spellcheck="true">// about的样式,基本没有被复用</span><span class="token selector">.section-about </span><span class="token punctuation">{</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-grey-light-1</span><span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">25</span>rem <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 向上移动20vh(因为上面的多边形的底边高度差是20vh</span>  <span class="token comment" spellcheck="true">// 移上去比较好看(背景和多边形合在一起)</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> -<span class="token number">20</span>vh<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="base-typography"><a href="#base-typography" class="headerlink" title="base/typography"></a>base/typography</h3><pre class=" language-scss"><code class="language-scss"><span class="token selector">.heading-secondary </span><span class="token punctuation">{</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">3.5</span>rem<span class="token punctuation">;</span>  <span class="token property">text-transform</span><span class="token punctuation">:</span> uppercase<span class="token punctuation">;</span>  <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">700</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 设置为行内(内联)块,则根据内容撑开宽高,可以把背景色限制在文字内容上</span>  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 给h2标签设置渐变色</span>  <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right, <span class="token variable">$color-primary</span>, <span class="token variable">$color-primary-dark</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 将背景精确剪裁到文字所在区域</span>  <span class="token property">-webkit-background-clip</span><span class="token punctuation">:</span> text<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 让文字透明才能看见背景</span>  <span class="token property">color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 字间距</span>  <span class="token property">letter-spacing</span><span class="token punctuation">:</span> <span class="token number">0.2</span>rem<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 设置动画范围和时间</span>  <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">0.2</span>s<span class="token punctuation">;</span>  <span class="token selector"><span class="token parent important">&amp;</span>:hover </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// skew可以在x或y上旋转</span>    <span class="token comment" spellcheck="true">// scale是缩放比例</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">skewY</span><span class="token punctuation">(</span><span class="token number">2</span>deg<span class="token punctuation">)</span> <span class="token function">skewX</span><span class="token punctuation">(</span><span class="token number">15</span>deg<span class="token punctuation">)</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">1.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 设置阴影</span>    <span class="token property">text-shadow</span><span class="token punctuation">:</span> <span class="token number">0.5</span>rem <span class="token number">1</span>rem <span class="token number">2</span>rem <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-black</span>, <span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span> </code></pre><h3 id="base-utilities"><a href="#base-utilities" class="headerlink" title="base/utilities"></a>base/utilities</h3><pre class=" language-scss"><code class="language-scss"><span class="token comment" spellcheck="true">// 实用程序类 utility class</span><span class="token comment" spellcheck="true">// 使文字居中</span><span class="token selector">.u-center-text </span><span class="token punctuation">{</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.u-margin-bottom-8 </span><span class="token punctuation">{</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">8</span>rem<span class="token punctuation">;</span><span class="token punctuation">}</span> </code></pre><p><img src="img_86.png" alt="img_86.png"></p><h2 id="building-the-about-section-p2"><a href="#building-the-about-section-p2" class="headerlink" title="building the about section p2"></a>building the about section p2</h2><h3 id="index-html-8"><a href="#index-html-8" class="headerlink" title="index.html"></a>index.html</h3><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!doctype html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    ......<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        ......    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--告诉搜索引擎或阅读器,main标签里的是网站的主要内容--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--about部分--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section-about<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>u-center-text u-margin-bottom-big<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-secondary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    Exciting tours for adventurous people                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-tertiary u-margin-bottom-small<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>You're going to fall in love with nature<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>paragraph<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token comment" spellcheck="true">&lt;!-- 输入lorem,再按tab,可以随机生成字符串 --></span>                        Lorem ipsum dolor sit amet consectetur adipisicing elit. Mollitia, expedita ad. At aliquid                        corporis sed eum, eaque libero vel eos ducimus odit fugit! Vel in, deserunt facilis nulla                        expedita quasi.                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-tertiary u-margin-bottom-small<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Live adventures like you never hava before<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>paragraph<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token comment" spellcheck="true">&lt;!-- 输入lorem,再按tab,可以随机生成字符串 --></span>                        Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolores veniam reprehenderit possimus                        assumenda minus sit hic adipisci accusantium recusandae distinctio. Voluptatem, nemo nobis qui                        animi explicabo a praesentium maxime sit.                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token comment" spellcheck="true">&lt;!-- &amp;rarr表示箭右头 --></span>                        Learn More <span class="token entity" title="&rarr;">&amp;rarr;</span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    col 1 of 2                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="base-typography-1"><a href="#base-typography-1" class="headerlink" title="base/typography"></a>base/typography</h3><pre class=" language-scss"><code class="language-scss"><span class="token selector">.heading-teritiary </span><span class="token punctuation">{</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token variable">$default-font-size</span><span class="token punctuation">;</span>  <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">700</span><span class="token punctuation">;</span>  <span class="token property">text-transform</span><span class="token punctuation">:</span> uppercase<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.paragraph </span><span class="token punctuation">{</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token variable">$default-font-size</span><span class="token punctuation">;</span>  &amp;<span class="token punctuation">:</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token punctuation">:</span>last-child<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">3</span>rem<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="base-utilities-1"><a href="#base-utilities-1" class="headerlink" title="base/utilities"></a>base/utilities</h3><pre class=" language-scss"><code class="language-scss"><span class="token selector">.u-margin-bottom-big </span><span class="token punctuation">{</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">8</span>rem<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.u-margin-bottom-medium </span><span class="token punctuation">{</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">4</span>rem<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.u-margin-bottom-small </span><span class="token punctuation">{</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">2</span>rem<span class="token punctuation">;</span><span class="token punctuation">}</span> </code></pre><h3 id="components-button"><a href="#components-button" class="headerlink" title="components/button"></a>components/button</h3><pre class=" language-scss"><code class="language-scss"><span class="token selector">.btn-text </span><span class="token punctuation">{</span>  <span class="token selector"><span class="token parent important">&amp;</span>:link,  <span class="token parent important">&amp;</span>:visited </span><span class="token punctuation">{</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token variable">$default-font-size</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color-primary</span><span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token variable">$color-primary</span><span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">3</span>px<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">0.2</span>s<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector"><span class="token parent important">&amp;</span>:hover </span><span class="token punctuation">{</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-primary</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color-white</span><span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">1</span>rem <span class="token number">2</span>rem <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-black</span>, <span class="token number">0.15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 上移</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-<span class="token number">2</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// 按下</span>  <span class="token selector"><span class="token parent important">&amp;</span>:active </span><span class="token punctuation">{</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">0.5</span>rem <span class="token number">1</span>rem <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-black</span>, <span class="token number">0.15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 回到原位</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span><span class="token number">0</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span> </code></pre><h3 id="abstracts-variables"><a href="#abstracts-variables" class="headerlink" title="abstracts/variables"></a>abstracts/variables</h3><pre class=" language-scss"><code class="language-scss"><span class="token comment" spellcheck="true">// FONT</span><span class="token property"><span class="token variable">$default-font-size</span></span><span class="token punctuation">:</span> <span class="token number">1.8</span>rem<span class="token punctuation">;</span></code></pre><p><img src="img_87.png" alt="其他类似&amp;rrar的html语法"><br><img src="img_88.png" alt="img_88.png"></p><h2 id="building-the-about-section-p3"><a href="#building-the-about-section-p3" class="headerlink" title="building the about section p3"></a>building the about section p3</h2><h3 id="components-composition"><a href="#components-composition" class="headerlink" title="components/composition"></a>components/composition</h3><pre class=" language-scss"><code class="language-scss"><span class="token selector">.composition </span><span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token selector"><span class="token parent important">&amp;</span>__photo </span><span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">55%</span><span class="token punctuation">;</span>        <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">1.5</span>rem <span class="token number">4</span>rem <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-black</span>, <span class="token number">0.4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">2</span>px<span class="token punctuation">;</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">;</span>        <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">0.2</span>s<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 轮廓偏移,即外边框离元素有一定距离</span>        <span class="token property">outline-offset</span><span class="token punctuation">:</span> <span class="token number">2</span>rem<span class="token punctuation">;</span>        <span class="token selector"><span class="token parent important">&amp;</span>--p1 </span><span class="token punctuation">{</span>            <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">1</span>rem<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token parent important">&amp;</span>--p2 </span><span class="token punctuation">{</span>            <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">4</span>rem<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token parent important">&amp;</span>--p3 </span><span class="token punctuation">{</span>            <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">20%</span><span class="token punctuation">;</span>            <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">14</span>rem<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token parent important">&amp;</span>:hover </span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 轮廓,外圈边框</span>            <span class="token property">outline</span><span class="token punctuation">:</span> <span class="token number">1.5</span>rem solid <span class="token variable">$color-primary</span><span class="token punctuation">;</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">1.05</span><span class="token punctuation">)</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-<span class="token number">0.5</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">2.5</span>rem <span class="token number">4</span>rem <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-black</span>, <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 一个元素被hover,其他元素都缩小</span>    &amp;<span class="token punctuation">:</span>hover &amp;<span class="token property">__photo</span><span class="token punctuation">:</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token punctuation">:</span>hover<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">0.95</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> </code></pre><h3 id="index-html-9"><a href="#index-html-9" class="headerlink" title="index.html"></a>index.html</h3><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!doctype html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    ......<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        ......    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--告诉搜索引擎或阅读器,main标签里的是网站的主要内容--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--about部分--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section-about<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>u-center-text u-margin-bottom-big<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-secondary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    Exciting tours for adventurous people                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-tertiary u-margin-bottom-small<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>You're going to fall in love with nature<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>paragraph<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token comment" spellcheck="true">&lt;!-- 输入lorem,再按tab,可以随机生成字符串 --></span>                        Lorem ipsum dolor sit amet consectetur adipisicing elit. Mollitia, expedita ad. At aliquid                        corporis sed eum, eaque libero vel eos ducimus odit fugit!                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-tertiary u-margin-bottom-small<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Live adventures like you never hava before<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>paragraph<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token comment" spellcheck="true">&lt;!-- 输入lorem,再按tab,可以随机生成字符串 --></span>                        Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolores veniam reprehenderit possimus                        assumenda minus sit hic adipisci accusantium recusandae distinctio. Voluptatem, nemo nobis                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token comment" spellcheck="true">&lt;!-- &amp;rarr表示箭右头 --></span>                        Learn More <span class="token entity" title="&rarr;">&amp;rarr;</span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>composition<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/nat-1-large.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Photo 1<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>composition__photo composition__photo--p1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/nat-2-large.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Photo 2<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>composition__photo composition__photo--p2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/nat-3-large.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Photo 3<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>composition__photo composition__photo--p3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><img src="img_89.png" alt="img_89.png"></p><h1 id="Building-the-features-section"><a href="#Building-the-features-section" class="headerlink" title="Building the features section"></a>Building the features section</h1><p><img src="img_90.png" alt="img_90.png"><br><img src="img_91.png" alt="在linea.io里下载图标"> <img src="img_92.png" alt="img_92.png"><br><img src="img_93.png" alt="这两个复制到css文件夹下"><img src="img_94.png" alt="复制过来的style.css改名icon-font.css"><br><img src="img_95.png" alt="引入"><img src="img_96.png" alt="四种不同格式的字体文件,是为了适配不同浏览器"><br><img src="img_97.png" alt="它定义了字体家族"><img src="img_98.png" alt="这个文件提供图标预览"></p><h2 id="index-html-10"><a href="#index-html-10" class="headerlink" title="index.html"></a>index.html</h2><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!doctype html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    ......<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        ......    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--告诉搜索引擎或阅读器,main标签里的是网站的主要内容--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--about部分--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section-about<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            ......        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- features --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section-features<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token comment" spellcheck="true">&lt;!-- 单元卡片 --></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>feature-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token comment" spellcheck="true">&lt;!-- 图标 --></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>feature-box__icon icon-basic-world<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-tertiary u-margin-bottom-small<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Explore the world<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>feature-box__text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            Lorem ipsum dolor sit, amet consectetur adipisicing elit. Veniam, aut corrupti quo alias                            perspiciatis expedita sunt nobis inventore officia                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token comment" spellcheck="true">&lt;!-- 单元卡片 --></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>feature-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token comment" spellcheck="true">&lt;!-- 图标 --></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>feature-box__icon icon-basic-compass<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-tertiary u-margin-bottom-small<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Meet nature<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>feature-box__text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            Lorem ipsum dolor sit, amet consectetur adipisicing elit. Veniam, aut corrupti quo alias                            perspiciatis expedita sunt nobis inventore officia                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token comment" spellcheck="true">&lt;!-- 单元卡片 --></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>feature-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token comment" spellcheck="true">&lt;!-- 图标 --></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>feature-box__icon icon-basic-map<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-tertiary u-margin-bottom-small<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Find your way<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>feature-box__text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            Lorem ipsum dolor sit, amet consectetur adipisicing elit. Veniam, aut corrupti quo alias                            perspiciatis expedita sunt nobis inventore officia                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token comment" spellcheck="true">&lt;!-- 单元卡片 --></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>feature-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token comment" spellcheck="true">&lt;!-- 图标 --></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>feature-box__icon icon-basic-heart<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-teritiary u-margin-bottom-small<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Live a headlthier life<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>feature-box__text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            Lorem ipsum dolor sit, amet consectetur adipisicing elit. Veniam, aut corrupti quo alias                            perspiciatis expedita sunt nobis inventore officia                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="components-feature-box"><a href="#components-feature-box" class="headerlink" title="components/feature-box"></a>components/feature-box</h2><pre class=" language-scss"><code class="language-scss"><span class="token selector">.feature-box </span><span class="token punctuation">{</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-white</span>, <span class="token number">0.8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">1.5</span>rem<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">2.5</span>rem<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">3</span>px<span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">1.5</span>rem <span class="token number">4</span>rem <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-black</span>, <span class="token number">0.15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 让hover的改变更自然</span>    <span class="token comment" spellcheck="true">// 第一个参数是想要控制动画效果的属性</span>    <span class="token property">transition</span><span class="token punctuation">:</span> transform <span class="token number">0.3</span>s<span class="token punctuation">;</span>    <span class="token selector"><span class="token parent important">&amp;</span>__icon </span><span class="token punctuation">{</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">6</span>rem<span class="token punctuation">;</span>        <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">0.5</span>rem<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/* 应该提取function或mixin start */</span>        <span class="token comment" spellcheck="true">// 设置为行内(内联)块,则根据内容撑开宽高,可以把背景色限制在文字内容上</span>        <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 给h2标签设置渐变色</span>        <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right, <span class="token variable">$color-primary</span>, <span class="token variable">$color-primary-dark</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 将背景精确剪裁到文字所在区域</span>        <span class="token property">-webkit-background-clip</span><span class="token punctuation">:</span> text<span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 字体透明</span>        <span class="token comment" spellcheck="true">/* 应该提取function或mixin end */</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>:hover </span><span class="token punctuation">{</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-<span class="token number">1.5</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__text </span><span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> </code></pre><h2 id="pages-home-1"><a href="#pages-home-1" class="headerlink" title="pages/home"></a>pages/home</h2><pre class=" language-scss"><code class="language-scss"><span class="token comment" spellcheck="true">// features的样式</span><span class="token selector">.section-features </span><span class="token punctuation">{</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">20</span>rem <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right bottom, <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-primary-light</span>, <span class="token number">0.8</span><span class="token punctuation">)</span>, <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-primary-dark</span>, <span class="token number">0.8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>,    <span class="token url">url</span><span class="token punctuation">(</span><span class="token string">"../img/nat-4.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 请斜(看上去像平行四边形)</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">skewY</span><span class="token punctuation">(</span>-<span class="token number">7</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 上移</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> -<span class="token number">10</span>rem<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 选择所有子类</span>  <span class="token selector"><span class="token parent important">&amp;</span> > * </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 让子类倾斜回来,此时只有父元素倾斜</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">skewY</span><span class="token punctuation">(</span><span class="token number">7</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span> </code></pre><p><img src="img_99.png" alt="img_99.png"></p><h1 id="Tours-section"><a href="#Tours-section" class="headerlink" title="Tours section"></a>Tours section</h1><h2 id="building-the-tours-section-p1"><a href="#building-the-tours-section-p1" class="headerlink" title="building the tours section p1"></a>building the tours section p1</h2><p><img src="img_100.png" alt="img_100.png"></p><h3 id="index-html-11"><a href="#index-html-11" class="headerlink" title="index.html"></a>index.html</h3><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!doctype html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    ......<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        ......    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--告诉搜索引擎或阅读器,main标签里的是网站的主要内容--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--about部分--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section-about<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            ......        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- features --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section-features<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            ......        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- tours --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section-tours<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>u-center-text u-margin-bottom-big<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-secondary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    Most popular tours                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__side card__side--front<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            front                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__side card__side--back card__side--back-1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            back                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    col 1 of 3                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    col 1 of 3                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="components-card"><a href="#components-card" class="headerlink" title="components/card"></a>components/card</h3><pre class=" language-scss"><code class="language-scss"><span class="token selector">.card </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 添加透视</span>    <span class="token property">perspective</span><span class="token punctuation">:</span> <span class="token number">150</span>rem<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 适配火狐</span>    <span class="token property">-moz-perspective</span><span class="token punctuation">:</span> <span class="token number">150</span>rem<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">50</span>rem<span class="token punctuation">;</span>    <span class="token selector"><span class="token parent important">&amp;</span>__side </span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 绝对定位宽高塌陷</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">50</span>rem<span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">2</span>rem<span class="token punctuation">;</span>        <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">0.8</span>s ease<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 根据父元素来进行绝对定位,让front和back重合</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 占满父元素的宽度</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 背部可见性</span>        <span class="token comment" spellcheck="true">// 如果没有这个,在旋转时是两个卡片会超模,交叉进行旋转</span>        <span class="token property">backface-visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/* x 偏移量 | y 偏移量 | 阴影模糊半径 | 阴影颜色 */</span>        <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">1.5</span>rem <span class="token number">4</span>rem <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-black</span>, <span class="token number">0.15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token selector"><span class="token parent important">&amp;</span>--front </span><span class="token punctuation">{</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-white</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token parent important">&amp;</span>--back </span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// back的初始状态就是旋转了180</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span><span class="token number">180</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token selector"><span class="token parent important">&amp;</span>-1 </span><span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 渐变,左上到右下</span>                <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right bottom, <span class="token variable">$color-secondary-light</span>, <span class="token variable">$color-secondary-dark</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 当hover时,&amp;__side将改变样式</span>    <span class="token comment" spellcheck="true">// hover后旋转</span>    <span class="token selector"><span class="token parent important">&amp;</span>:hover <span class="token parent important">&amp;</span>__side--front </span><span class="token punctuation">{</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">180</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// front转过去,back转回来</span>    <span class="token selector"><span class="token parent important">&amp;</span>:hover <span class="token parent important">&amp;</span>__side--back </span><span class="token punctuation">{</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> </code></pre><h3 id="pages-home-2"><a href="#pages-home-2" class="headerlink" title="pages/home"></a>pages/home</h3><pre class=" language-scss"><code class="language-scss"><span class="token comment" spellcheck="true">// tours部分</span><span class="token selector">.section-tours </span><span class="token punctuation">{</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-grey-light-1</span><span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">25</span>rem <span class="token number">0</span> <span class="token number">50</span>rem <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> -<span class="token number">10</span>rem<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><img src="img_101.png" alt="img_101.png"></p><h2 id="building-the-tours-section-p2"><a href="#building-the-tours-section-p2" class="headerlink" title="building the tours section p2"></a>building the tours section p2</h2><p><img src="img_102.png" alt="免费图片网站"></p><h3 id="index-html-12"><a href="#index-html-12" class="headerlink" title="index.html"></a>index.html</h3><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!doctype html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>   ......<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        ......    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--告诉搜索引擎或阅读器,main标签里的是网站的主要内容--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--about部分--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section-about<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            ......        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- features --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section-features<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            ......        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- tours --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section-tours<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>u-center-text u-margin-bottom-big<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-secondary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    Most popular tours                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__side card__side--front<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__picture card__picture--1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token entity" title="&nbsp;">&amp;nbsp;</span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__heading<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__heading-span card__heading-span--1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                    the sea explorer                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__details<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>3 day tours<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Up to 30 people<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>2 tour guides<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Sleep in cozy hotels<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Difficulty: easy<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__side card__side--back card__side--back-1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    col 1 of 3                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    col 1 of 3                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="components-card-1"><a href="#components-card-1" class="headerlink" title="components/card"></a>components/card</h3><pre class=" language-scss"><code class="language-scss"><span class="token selector">.card </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// FUNCTIONALITY</span>    <span class="token comment" spellcheck="true">// 添加透视</span>    <span class="token property">perspective</span><span class="token punctuation">:</span> <span class="token number">150</span>rem<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 适配火狐</span>    <span class="token property">-moz-perspective</span><span class="token punctuation">:</span> <span class="token number">150</span>rem<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">52</span>rem<span class="token punctuation">;</span>     <span class="token selector"><span class="token parent important">&amp;</span>__side </span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 绝对定位宽高塌陷</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">52</span>rem<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">2</span>rem<span class="token punctuation">;</span>        <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">0.8</span>s ease<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 根据父元素来进行绝对定位,让front和back重合</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 占满父元素的宽度</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 图片填充父元素,然后border-radius被图片盖住</span>        <span class="token comment" spellcheck="true">// 这里将图片超出部分隐层,就能看到border-radius的效果</span>        <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 背部可见性</span>        <span class="token comment" spellcheck="true">// 如果没有这个,在旋转时是两个卡片会超模,交叉进行旋转</span>        <span class="token comment" spellcheck="true">// 当旋转完毕,背部才出现</span>        <span class="token property">backface-visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/* x 偏移量 | y 偏移量 | 阴影模糊半径 | 阴影颜色 */</span>        <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">1.5</span>rem <span class="token number">4</span>rem <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-black</span>, <span class="token number">0.15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">0.8</span>rem<span class="token punctuation">;</span>        <span class="token selector"><span class="token parent important">&amp;</span>--front </span><span class="token punctuation">{</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-white</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token parent important">&amp;</span>--back </span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// back的初始状态就是旋转了180</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span><span class="token number">180</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token selector"><span class="token parent important">&amp;</span>-1 </span><span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 渐变,左上到右下</span>                <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right bottom, <span class="token variable">$color-secondary-light</span>, <span class="token variable">$color-secondary-dark</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 当hover时,&amp;__side将改变样式</span>    <span class="token comment" spellcheck="true">// hover后旋转</span>    <span class="token selector"><span class="token parent important">&amp;</span>:hover <span class="token parent important">&amp;</span>__side--front </span><span class="token punctuation">{</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">180</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// front转过去,back转回来</span>    <span class="token selector"><span class="token parent important">&amp;</span>:hover <span class="token parent important">&amp;</span>__side--back </span><span class="token punctuation">{</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// FRONT SIDE STYLING</span>    <span class="token selector"><span class="token parent important">&amp;</span>__picture </span><span class="token punctuation">{</span>        <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">23</span>rem<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 在safari/firefox/chrome上才有效</span>        <span class="token comment" spellcheck="true">// 背景混合模式</span>        <span class="token property">background-blend-mode</span><span class="token punctuation">:</span> screen<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 适配不同浏览器</span>        <span class="token property">-webkit-clip-path</span><span class="token punctuation">:</span> <span class="token function">polygon</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token number">0</span>, <span class="token number">100%</span> <span class="token number">0</span>, <span class="token number">100%</span> <span class="token number">85%</span>, <span class="token number">0</span> <span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">polygon</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token number">0</span>, <span class="token number">100%</span> <span class="token number">0</span>, <span class="token number">100%</span> <span class="token number">85%</span>, <span class="token number">0</span> <span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token selector"><span class="token parent important">&amp;</span>--1 </span><span class="token punctuation">{</span>            <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right bottom, <span class="token variable">$color-secondary-light</span>, <span class="token variable">$color-secondary-dark</span><span class="token punctuation">)</span>,                <span class="token url">url</span><span class="token punctuation">(</span><span class="token number">..</span>/img/nat-<span class="token number">5.</span>jpg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token parent important">&amp;</span>--2 </span><span class="token punctuation">{</span>            <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url</span><span class="token punctuation">(</span><span class="token number">..</span>/img/nat-<span class="token number">6.</span>jpg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token parent important">&amp;</span>--3 </span><span class="token punctuation">{</span>            <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url</span><span class="token punctuation">(</span><span class="token number">..</span>/img/nat-<span class="token number">7.</span>jpg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__heading </span><span class="token punctuation">{</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">2.8</span>rem<span class="token punctuation">;</span>        <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">;</span>        <span class="token property">text-transform</span><span class="token punctuation">:</span> uppercase<span class="token punctuation">;</span>        <span class="token property">text-align</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color-white</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 浮于图片上方</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">12</span>rem<span class="token punctuation">;</span>        <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">2</span>rem<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">75%</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__heading-span </span><span class="token punctuation">{</span>        <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">1</span>rem <span class="token number">1.5</span>rem<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 当元素跨多行、多列或多页时，元素的片段应如何呈现</span>        <span class="token comment" spellcheck="true">// 这里的文字分成了两行,则将第一行的padding复制到第二行,实现对齐</span>        <span class="token property">-webkit-box-decoration-break</span><span class="token punctuation">:</span> clone<span class="token punctuation">;</span>        <span class="token property">box-decoration-break</span><span class="token punctuation">:</span> clone<span class="token punctuation">;</span>        <span class="token selector"><span class="token parent important">&amp;</span>--1 </span><span class="token punctuation">{</span>            <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>                to right bottom,                <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-secondary-light</span>, <span class="token number">0.85</span><span class="token punctuation">)</span>,                <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-secondary-dark</span>, <span class="token number">0.85</span><span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__details </span><span class="token punctuation">{</span>        <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">3</span>rem<span class="token punctuation">;</span>        <span class="token selector">ul </span><span class="token punctuation">{</span>            <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">80%</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 居中</span>            <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>            <span class="token selector">li </span><span class="token punctuation">{</span>                <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>                <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">1.5</span>rem<span class="token punctuation">;</span>                <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">1</span>rem<span class="token punctuation">;</span>                &amp;<span class="token punctuation">:</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token punctuation">:</span>last-child<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token variable">$color-grey-light-2</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> </code></pre><p><img src="img_103.png" alt="img_103.png"></p><h2 id="building-the-tours-section-p3"><a href="#building-the-tours-section-p3" class="headerlink" title="building the tours section p3"></a>building the tours section p3</h2><h3 id="index-html-13"><a href="#index-html-13" class="headerlink" title="index.html"></a>index.html</h3><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!doctype html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    ......<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        ......    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--告诉搜索引擎或阅读器,main标签里的是网站的主要内容--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--about部分--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section-about<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            ......        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- features --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section-features<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            ......        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- tours --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section-tours<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>u-center-text u-margin-bottom-big<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-secondary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    Most popular tours                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__side card__side--front<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__picture card__picture--1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token entity" title="&nbsp;">&amp;nbsp;</span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__heading<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__heading-span card__heading-span--1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                    the sea explorer                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__details<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>3 day tours<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Up to 30 people<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>2 tour guides<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Sleep in cozy hotels<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Difficulty: easy<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token comment" spellcheck="true">&lt;!-- 背面,价格 --></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__side card__side--back card__side--back-1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__cta<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__price-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__price-only<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Only<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__price-value<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>$297<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn--white<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Book New!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__side card__side--front<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__picture card__picture--2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token entity" title="&nbsp;">&amp;nbsp;</span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__heading<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__heading-span card__heading-span--2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                    the sea explorer                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__details<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>3 day tours<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Up to 30 people<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>2 tour guides<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Sleep in cozy hotels<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Difficulty: easy<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token comment" spellcheck="true">&lt;!-- 背面,价格 --></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__side card__side--back card__side--back-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__cta<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__price-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__price-only<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Only<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__price-value<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>$297<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn--white<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Book New!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__side card__side--front<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__picture card__picture--3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token entity" title="&nbsp;">&amp;nbsp;</span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__heading<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__heading-span card__heading-span--3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                    the sea explorer                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__details<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>3 day tours<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Up to 30 people<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>2 tour guides<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Sleep in cozy hotels<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Difficulty: easy<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token comment" spellcheck="true">&lt;!-- 背面,价格 --></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__side card__side--back card__side--back-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__cta<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__price-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__price-only<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Only<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card__price-value<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>$297<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn--white<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Book New!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>u-center-text u-margin-top-huge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn--green<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Discover all tours<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="components-card-2"><a href="#components-card-2" class="headerlink" title="components/card"></a>components/card</h3><pre class=" language-scss"><code class="language-scss"><span class="token selector">.card </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// FUNCTIONALITY</span>    <span class="token comment" spellcheck="true">// 添加透视</span>    <span class="token property">perspective</span><span class="token punctuation">:</span> <span class="token number">150</span>rem<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 适配火狐</span>    <span class="token property">-moz-perspective</span><span class="token punctuation">:</span> <span class="token number">150</span>rem<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">52</span>rem<span class="token punctuation">;</span>    <span class="token selector"><span class="token parent important">&amp;</span>__side </span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 绝对定位宽高塌陷</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">52</span>rem<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">2</span>rem<span class="token punctuation">;</span>        <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">0.8</span>s ease<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 根据父元素来进行绝对定位,让front和back重合</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 占满父元素的宽度</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 图片填充父元素,然后border-radius被图片盖住</span>        <span class="token comment" spellcheck="true">// 这里将图片超出部分隐层,就能看到border-radius的效果</span>        <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 背部可见性</span>        <span class="token comment" spellcheck="true">// 如果没有这个,在旋转时是两个卡片会超模,交叉进行旋转</span>        <span class="token comment" spellcheck="true">// 当旋转完毕,背部才出现</span>        <span class="token property">backface-visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/* x 偏移量 | y 偏移量 | 阴影模糊半径 | 阴影颜色 */</span>        <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">1.5</span>rem <span class="token number">4</span>rem <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-black</span>, <span class="token number">0.15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">0.8</span>rem<span class="token punctuation">;</span>        <span class="token selector"><span class="token parent important">&amp;</span>--front </span><span class="token punctuation">{</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-white</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token parent important">&amp;</span>--back </span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// back的初始状态就是旋转了180</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span><span class="token number">180</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token selector"><span class="token parent important">&amp;</span>-1 </span><span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 渐变,左上到右下</span>                <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right bottom, <span class="token variable">$color-secondary-light</span>, <span class="token variable">$color-secondary-dark</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector"><span class="token parent important">&amp;</span>-2 </span><span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 渐变,左上到右下</span>                <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right bottom, <span class="token variable">$color-primary-light</span>, <span class="token variable">$color-primary-dark</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector"><span class="token parent important">&amp;</span>-3 </span><span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 渐变,左上到右下</span>                <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right bottom, <span class="token variable">$color-tertiary-light</span>, <span class="token variable">$color-tertiary-dark</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 当hover时,&amp;__side将改变样式</span>    <span class="token comment" spellcheck="true">// hover后旋转</span>    <span class="token selector"><span class="token parent important">&amp;</span>:hover <span class="token parent important">&amp;</span>__side--front </span><span class="token punctuation">{</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">180</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// front转过去,back转回来</span>    <span class="token selector"><span class="token parent important">&amp;</span>:hover <span class="token parent important">&amp;</span>__side--back </span><span class="token punctuation">{</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// FRONT SIDE STYLING</span>    <span class="token selector"><span class="token parent important">&amp;</span>__picture </span><span class="token punctuation">{</span>        <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">23</span>rem<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 在safari/firefox/chrome上才有效</span>        <span class="token comment" spellcheck="true">// 背景混合模式</span>        <span class="token property">background-blend-mode</span><span class="token punctuation">:</span> screen<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 适配不同浏览器</span>        <span class="token property">-webkit-clip-path</span><span class="token punctuation">:</span> <span class="token function">polygon</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token number">0</span>, <span class="token number">100%</span> <span class="token number">0</span>, <span class="token number">100%</span> <span class="token number">85%</span>, <span class="token number">0</span> <span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">polygon</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token number">0</span>, <span class="token number">100%</span> <span class="token number">0</span>, <span class="token number">100%</span> <span class="token number">85%</span>, <span class="token number">0</span> <span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 使用clip时,overflow会失效</span>        <span class="token property">border-top-left-radius</span><span class="token punctuation">:</span> <span class="token number">3</span>px<span class="token punctuation">;</span>        <span class="token property">border-top-right-radius</span><span class="token punctuation">:</span> <span class="token number">3</span>px<span class="token punctuation">;</span>        <span class="token selector"><span class="token parent important">&amp;</span>--1 </span><span class="token punctuation">{</span>            <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right bottom, <span class="token variable">$color-secondary-light</span>, <span class="token variable">$color-secondary-dark</span><span class="token punctuation">)</span>,                <span class="token url">url</span><span class="token punctuation">(</span><span class="token number">..</span>/img/nat-<span class="token number">5.</span>jpg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token parent important">&amp;</span>--2 </span><span class="token punctuation">{</span>            <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right bottom, <span class="token variable">$color-primary-light</span>, <span class="token variable">$color-primary-dark</span><span class="token punctuation">)</span>,                <span class="token url">url</span><span class="token punctuation">(</span><span class="token number">..</span>/img/nat-<span class="token number">6.</span>jpg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token parent important">&amp;</span>--3 </span><span class="token punctuation">{</span>            <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right bottom, <span class="token variable">$color-tertiary-light</span>, <span class="token variable">$color-tertiary-dark</span><span class="token punctuation">)</span>,                <span class="token url">url</span><span class="token punctuation">(</span><span class="token number">..</span>/img/nat-<span class="token number">7.</span>jpg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__heading </span><span class="token punctuation">{</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">2.8</span>rem<span class="token punctuation">;</span>        <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">;</span>        <span class="token property">text-transform</span><span class="token punctuation">:</span> uppercase<span class="token punctuation">;</span>        <span class="token property">text-align</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color-white</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 浮于图片上方</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">12</span>rem<span class="token punctuation">;</span>        <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">2</span>rem<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">75%</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__heading-span </span><span class="token punctuation">{</span>        <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">1</span>rem <span class="token number">1.5</span>rem<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 当元素跨多行、多列或多页时，元素的片段应如何呈现</span>        <span class="token comment" spellcheck="true">// 这里的文字分成了两行,则将第一行的padding复制到第二行,实现对齐</span>        <span class="token property">-webkit-box-decoration-break</span><span class="token punctuation">:</span> clone<span class="token punctuation">;</span>        <span class="token property">box-decoration-break</span><span class="token punctuation">:</span> clone<span class="token punctuation">;</span>        <span class="token selector"><span class="token parent important">&amp;</span>--1 </span><span class="token punctuation">{</span>            <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>                to right bottom,                <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-secondary-light</span>, <span class="token number">0.85</span><span class="token punctuation">)</span>,                <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-secondary-dark</span>, <span class="token number">0.85</span><span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token parent important">&amp;</span>--2 </span><span class="token punctuation">{</span>            <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>                to right bottom,                <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-primary-light</span>, <span class="token number">0.85</span><span class="token punctuation">)</span>,                <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-primary-dark</span>, <span class="token number">0.85</span><span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token parent important">&amp;</span>--3 </span><span class="token punctuation">{</span>            <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>                to right bottom,                <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-tertiary-light</span>, <span class="token number">0.85</span><span class="token punctuation">)</span>,                <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-tertiary-dark</span>, <span class="token number">0.85</span><span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__details </span><span class="token punctuation">{</span>        <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">3</span>rem<span class="token punctuation">;</span>        <span class="token selector">ul </span><span class="token punctuation">{</span>            <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">80%</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 居中</span>            <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>            <span class="token selector">li </span><span class="token punctuation">{</span>                <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>                <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">1.5</span>rem<span class="token punctuation">;</span>                <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">1</span>rem<span class="token punctuation">;</span>                &amp;<span class="token punctuation">:</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token punctuation">:</span>last-child<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token variable">$color-grey-light-2</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// FRONT SIDE STYLING</span>    <span class="token selector"><span class="token parent important">&amp;</span>__cta </span><span class="token punctuation">{</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/* 应该封装为mixin */</span>        <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-<span class="token number">50%</span>, -<span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/* 应该封装为mixin */</span>        <span class="token comment" spellcheck="true">// 按钮放不下(字分成了两行),所有设置宽度90%父元素</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">90%</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 按钮居中</span>        <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__price-box </span><span class="token punctuation">{</span>        <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color-white</span><span class="token punctuation">;</span>        <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">8</span>rem<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__price-only </span><span class="token punctuation">{</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">1.4</span>rem<span class="token punctuation">;</span>        <span class="token property">text-transform</span><span class="token punctuation">:</span> uppercase<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__price-value </span><span class="token punctuation">{</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">6</span>rem<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 大而细的字比大而粗的好看</span>        <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>  </code></pre><p><img src="img_104.png" alt="img_104.png"></p><h1 id="stories"><a href="#stories" class="headerlink" title="stories"></a>stories</h1><h2 id="building-the-stories-section-p1"><a href="#building-the-stories-section-p1" class="headerlink" title="building the stories section p1"></a>building the stories section p1</h2><p><img src="img_105.png" alt="img_105.png"></p><h3 id="components-story"><a href="#components-story" class="headerlink" title="components/story"></a>components/story</h3><pre class=" language-scss"><code class="language-scss"><span class="token selector">.story </span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">75%</span><span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">3</span>rem <span class="token number">6</span>rem <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-black</span>, <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-white</span><span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">6</span>rem<span class="token punctuation">;</span>    <span class="token property">padding-left</span><span class="token punctuation">:</span> <span class="token number">9</span>rem<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token variable">$default-font-size</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 倾斜,变成平行四边形</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">skewX</span><span class="token punctuation">(</span>-<span class="token number">12</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// &amp; > * {</span>    <span class="token comment" spellcheck="true">//     transform: skewX(12deg); </span>    <span class="token comment" spellcheck="true">// }</span>    <span class="token selector"><span class="token parent important">&amp;</span>__shape </span><span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">15</span>rem<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">15</span>rem<span class="token punctuation">;</span>        <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 定义多边形(polygon),定义圆形(circle)</span>        <span class="token comment" spellcheck="true">// 非矩形的形状，相邻的内联内容应围绕该形状进行包装</span>        <span class="token comment" spellcheck="true">// 参数1: 半径,</span>        <span class="token comment" spellcheck="true">// 兼容safari</span>        <span class="token property">-webkit-shape-outside</span><span class="token punctuation">:</span> <span class="token function">circle</span><span class="token punctuation">(</span><span class="token number">50%</span> at <span class="token number">50%</span> <span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">shape-outside</span><span class="token punctuation">:</span> <span class="token function">circle</span><span class="token punctuation">(</span><span class="token number">50%</span> at <span class="token number">50%</span> <span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 剪裁为圆圈</span>        <span class="token property">-webkit-clip-path</span><span class="token punctuation">:</span> <span class="token function">circle</span><span class="token punctuation">(</span><span class="token number">50%</span> at <span class="token number">50%</span> <span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">circle</span><span class="token punctuation">(</span><span class="token number">50%</span> at <span class="token number">50%</span> <span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 左移(不要乱用padding或margin!)</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">3</span>rem<span class="token punctuation">)</span> <span class="token function">skewX</span><span class="token punctuation">(</span><span class="token number">12</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__img </span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 图片需要宽高来约束</span>        <span class="token comment" spellcheck="true">// width: 100%;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__text </span><span class="token punctuation">{</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">skewX</span><span class="token punctuation">(</span><span class="token number">12</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> </code></pre><h3 id="pages-home-3"><a href="#pages-home-3" class="headerlink" title="pages/home"></a>pages/home</h3><pre class=" language-scss"><code class="language-scss"><span class="token selector">.section-stories </span><span class="token punctuation">{</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-grey-light-1</span><span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">15</span>rem <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre><h3 id="index-html-14"><a href="#index-html-14" class="headerlink" title="index.html"></a>index.html</h3><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!doctype html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    ......<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        ......    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--告诉搜索引擎或阅读器,main标签里的是网站的主要内容--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--about部分--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section-about<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            ......        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- features --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section-features<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            ......        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- tours --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section-tours<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            ......        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- stories --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section-stories<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>u-center-text u-margin-bottom-big<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-secondary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    We make people genuinely happy                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>story<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token comment" spellcheck="true">&lt;!-- figure标签 用作文档中插图的图像 --></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>figure</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>story__shape<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/nat-8.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Person on a tour<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>story__img<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>figure</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>story__text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-tertiary u-margin-bottom-small<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            I had the best week ever with my family                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>                            Lorem ipsum dolor sit amet consectetur adipisicing elit. Quos iusto consectetur repellat                            aliquid, obcaecati nulla unde veritatis, cumque similique reprehenderit nesciunt                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><img src="img_106.png" alt="img_106.png"></p><h2 id="building-the-stories-section-p2"><a href="#building-the-stories-section-p2" class="headerlink" title="building the stories section p2"></a>building the stories section p2</h2><h3 id="index-html-15"><a href="#index-html-15" class="headerlink" title="index.html"></a>index.html</h3><pre class=" language-html"><code class="language-html">        <span class="token comment" spellcheck="true">&lt;!-- stories --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section-stories<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>u-center-text u-margin-bottom-big<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-secondary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    We make people genuinely happy                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>story<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token comment" spellcheck="true">&lt;!-- figure标签 用作文档中插图的图像 --></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>figure</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>story__shape<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/nat-8.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Person on a tour<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>story__img<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token comment" spellcheck="true">&lt;!-- 和figure关联,用于描述其父节点 &lt;figure> 元素里的其他数据 --></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>figcaption</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>story__caption<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            Jack Wilson                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>figcaption</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>figure</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>story__text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-tertiary u-margin-bottom-small<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            WOW! My Life is completely different now                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>                            Lorem ipsum dolor sit amet consectetur adipisicing elit. Quos iusto consectetur repellat                            aliquid, obcaecati nulla unde veritatis, cumque similique reprehenderit nesciunt                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>story<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token comment" spellcheck="true">&lt;!-- figure标签 用作文档中插图的图像 --></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>figure</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>story__shape<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/nat-9.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Person on a tour<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>story__img<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token comment" spellcheck="true">&lt;!-- 和figure关联,用于描述其父节点 &lt;figure> 元素里的其他数据 --></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>figcaption</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>story__caption<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            Mary Smith                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>figcaption</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>figure</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>story__text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-tertiary u-margin-bottom-small<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            I had the best week ever with my family                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>                            Lorem ipsum dolor sit amet consectetur adipisicing elit. Quos iusto consectetur repellat                            aliquid, obcaecati nulla unde veritatis, cumque similique reprehenderit nesciunt                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>u-center-text u-margin-top-huge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Read all stories <span class="token entity" title="&rarr;">&amp;rarr;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span></code></pre><h3 id="components-story-1"><a href="#components-story-1" class="headerlink" title="components/story"></a>components/story</h3><pre class=" language-scss"><code class="language-scss"><span class="token selector">.story </span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">75%</span><span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">3</span>rem <span class="token number">6</span>rem <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-black</span>, <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-white</span><span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">6</span>rem<span class="token punctuation">;</span>    <span class="token property">padding-left</span><span class="token punctuation">:</span> <span class="token number">9</span>rem<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token variable">$default-font-size</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 倾斜,变成平行四边形</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">skewX</span><span class="token punctuation">(</span>-<span class="token number">12</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// &amp; > * {</span>    <span class="token comment" spellcheck="true">//     transform: skewX(12deg);</span>    <span class="token comment" spellcheck="true">// }</span>    <span class="token selector"><span class="token parent important">&amp;</span>__shape </span><span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">15</span>rem<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">15</span>rem<span class="token punctuation">;</span>        <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 定义多边形(polygon),定义圆形(circle)</span>        <span class="token comment" spellcheck="true">// 非矩形的形状，相邻的内联内容应围绕该形状进行包装</span>        <span class="token comment" spellcheck="true">// 参数1: 半径,</span>        <span class="token comment" spellcheck="true">// 兼容safari</span>        <span class="token property">-webkit-shape-outside</span><span class="token punctuation">:</span> <span class="token function">circle</span><span class="token punctuation">(</span><span class="token number">50%</span> at <span class="token number">50%</span> <span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">shape-outside</span><span class="token punctuation">:</span> <span class="token function">circle</span><span class="token punctuation">(</span><span class="token number">50%</span> at <span class="token number">50%</span> <span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 剪裁为圆圈</span>        <span class="token property">-webkit-clip-path</span><span class="token punctuation">:</span> <span class="token function">circle</span><span class="token punctuation">(</span><span class="token number">50%</span> at <span class="token number">50%</span> <span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">clip-path</span><span class="token punctuation">:</span> <span class="token function">circle</span><span class="token punctuation">(</span><span class="token number">50%</span> at <span class="token number">50%</span> <span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 左移(不要乱用padding或margin!)</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">3</span>rem<span class="token punctuation">)</span> <span class="token function">skewX</span><span class="token punctuation">(</span><span class="token number">12</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__img </span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 图片需要宽高来约束</span>        <span class="token comment" spellcheck="true">// width: 100%;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">4</span>rem<span class="token punctuation">)</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">1.4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">backface-visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>        <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">0.5</span>s<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>:hover <span class="token parent important">&amp;</span>__img </span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// hover时图片缩小</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">4</span>rem<span class="token punctuation">)</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 图片 变暗 变模糊</span>        <span class="token comment" spellcheck="true">// blur变模糊</span>        <span class="token comment" spellcheck="true">// brightness>100% 变亮, &lt;100% 变暗</span>        <span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">blur</span><span class="token punctuation">(</span><span class="token number">3</span>px<span class="token punctuation">)</span> <span class="token function">brightness</span><span class="token punctuation">(</span><span class="token number">90%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__text </span><span class="token punctuation">{</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">skewX</span><span class="token punctuation">(</span><span class="token number">12</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__caption </span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 居中</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-<span class="token number">50%</span>, <span class="token number">20%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color-white</span><span class="token punctuation">;</span>        <span class="token property">text-transform</span><span class="token punctuation">:</span> uppercase<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">1.7</span>rem<span class="token punctuation">;</span>        <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 透明</span>        <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 动画执行效果</span>        <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">0.5</span>s<span class="token punctuation">;</span>        <span class="token property">backface-visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>:hover <span class="token parent important">&amp;</span>__caption </span><span class="token punctuation">{</span>        <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 移动</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-<span class="token number">50%</span>, -<span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> </code></pre><p><img src="img_107.png" alt="img_107.png"></p><h2 id="building-the-stories-section-p3"><a href="#building-the-stories-section-p3" class="headerlink" title="building the stories section p3"></a>building the stories section p3</h2><p><img src="img_108.png" alt="网站视频素材获取"></p><h3 id="components-bg-video"><a href="#components-bg-video" class="headerlink" title="components/bg-video"></a>components/bg-video</h3><pre class=" language-scss"><code class="language-scss"><span class="token selector">.bg-video </span><span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> -<span class="token number">1</span><span class="token punctuation">;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0.2</span><span class="token punctuation">;</span>     <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token selector"><span class="token parent important">&amp;</span>__content </span><span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 指定可替换元素（例如：&lt;img> 或 &lt;video>）的内容应该如何适应到其使用高度和宽度确定的框。</span>        <span class="token comment" spellcheck="true">// cover -> 被替换的内容在保持其宽高比的同时填充元素的整个内容框。</span>        <span class="token comment" spellcheck="true">//          如果对象的宽高比与内容框不相匹配，该对象将被剪裁以适应内容框。</span>        <span class="token property">object-fit</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> </code></pre><h3 id="index-html-16"><a href="#index-html-16" class="headerlink" title="index.html"></a>index.html</h3><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!doctype html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    ......<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        ......    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--告诉搜索引擎或阅读器,main标签里的是网站的主要内容--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--about部分--></span>        ......        <span class="token comment" spellcheck="true">&lt;!-- features --></span>        ......        <span class="token comment" spellcheck="true">&lt;!-- tours --></span>        ......        <span class="token comment" spellcheck="true">&lt;!-- stories --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section-stories<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bg-video<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token comment" spellcheck="true">&lt;!-- muted->静音 loop->循环 --></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bg-video__content<span class="token punctuation">"</span></span> <span class="token attr-name">autoplay</span> <span class="token attr-name">muted</span> <span class="token attr-name">loop</span><span class="token punctuation">></span></span>                    <span class="token comment" spellcheck="true">&lt;!-- 指定视频源 --></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./img/video.mp4<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>video/mp4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./img/video.webm<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>video/webm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token comment" spellcheck="true">&lt;!-- 当浏览器不支持时出现这行字 --></span>                    Your browser is not supported!                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>u-center-text u-margin-bottom-big<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-secondary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    We make people genuinely happy                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>story<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token comment" spellcheck="true">&lt;!-- figure标签 用作文档中插图的图像 --></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>figure</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>story__shape<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/nat-8.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Person on a tour<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>story__img<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token comment" spellcheck="true">&lt;!-- 和figure关联,用于描述其父节点 &lt;figure> 元素里的其他数据 --></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>figcaption</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>story__caption<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            Jack Wilson                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>figcaption</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>figure</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>story__text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-tertiary u-margin-bottom-small<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            WOW! My Life is completely different now                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>                            Lorem ipsum dolor sit amet consectetur adipisicing elit. Quos iusto consectetur repellat                            aliquid, obcaecati nulla unde veritatis, cumque similique reprehenderit nesciunt                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>story<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token comment" spellcheck="true">&lt;!-- figure标签 用作文档中插图的图像 --></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>figure</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>story__shape<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/nat-9.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Person on a tour<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>story__img<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token comment" spellcheck="true">&lt;!-- 和figure关联,用于描述其父节点 &lt;figure> 元素里的其他数据 --></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>figcaption</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>story__caption<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            Mary Smith                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>figcaption</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>figure</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>story__text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-tertiary u-margin-bottom-small<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            I had the best week ever with my family                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>                            Lorem ipsum dolor sit amet consectetur adipisicing elit. Quos iusto consectetur repellat                            aliquid, obcaecati nulla unde veritatis, cumque similique reprehenderit nesciunt                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>u-center-text u-margin-top-huge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Read all stories <span class="token entity" title="&rarr;">&amp;rarr;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><img src="img_109.png" alt="img_109.png"></p><h1 id="booking"><a href="#booking" class="headerlink" title="booking"></a>booking</h1><h2 id="building-the-booking-section-p1"><a href="#building-the-booking-section-p1" class="headerlink" title="building the booking section p1"></a>building the booking section p1</h2><h3 id="index-html-17"><a href="#index-html-17" class="headerlink" title="index.html"></a>index.html</h3><pre class=" language-html"><code class="language-html">        <span class="token comment" spellcheck="true">&lt;!-- booking --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section-book<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>book<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>book__form<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>u-margin-bottom-medium<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-secondary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                    Start booking now                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form__group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form__input<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Full Name<span class="token punctuation">"</span></span> <span class="token attr-name">required</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token comment" spellcheck="true">&lt;!-- for的值是要链接的标签的id --></span>                                <span class="token comment" spellcheck="true">&lt;!-- 点击label,自动聚焦到for指向的标签 --></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form__label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Full name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form__group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form__input<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Full Name<span class="token punctuation">"</span></span> <span class="token attr-name">required</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token comment" spellcheck="true">&lt;!-- for的值是要链接的标签的id --></span>                                <span class="token comment" spellcheck="true">&lt;!-- 点击label,自动聚焦到for指向的标签 --></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form__label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Email address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span></code></pre><h3 id="pages-home-4"><a href="#pages-home-4" class="headerlink" title="pages/home"></a>pages/home</h3><pre class=" language-scss"><code class="language-scss"><span class="token selector">.section-book </span><span class="token punctuation">{</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">15</span>rem <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right bottom, <span class="token variable">$color-primary-light</span>, <span class="token variable">$color-primary-dark</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.book </span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 105deg: 渐变的x轴角度</span>  <span class="token comment" spellcheck="true">// 两个%的含义: 从0%的位置开始渐变,到50%的位置结束渐变</span>  <span class="token comment" spellcheck="true">// 三个%的含义: 从0%的位置开始渐变,但是因为0%-50%的颜色一样,所以是白色,后面的%50没有渐变,使用末端的颜色</span>  <span class="token comment" spellcheck="true">// 纯色渐变</span>  <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span><span class="token number">105</span>deg, <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-white</span>, <span class="token number">0.9</span><span class="token punctuation">)</span> <span class="token number">0%</span>, <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-white</span>, <span class="token number">0.9</span><span class="token punctuation">)</span> <span class="token number">50%</span>, transparent <span class="token number">50%</span><span class="token punctuation">)</span>,    <span class="token url">url</span><span class="token punctuation">(</span><span class="token number">..</span>/img/nat-<span class="token number">10.</span>jpg<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 和cover效果一样(如果是100%,当宽高超出,会平铺重复图片,cover不会)</span>  <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token variable">$box-radius</span><span class="token punctuation">;</span>  <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">1.5</span>rem <span class="token number">4</span>rem <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-black</span>, <span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">50</span>rem<span class="token punctuation">;</span>  <span class="token selector"><span class="token parent important">&amp;</span>__form </span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">6</span>rem<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span> </code></pre><p><img src="img_110.png" alt="img_110.png"></p><h2 id="building-the-booking-section-p2"><a href="#building-the-booking-section-p2" class="headerlink" title="building the booking section p2"></a>building the booking section p2</h2><h3 id="index-html-18"><a href="#index-html-18" class="headerlink" title="index.html"></a>index.html</h3><pre class=" language-html"><code class="language-html">        <span class="token comment" spellcheck="true">&lt;!-- booking --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section-book<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>book<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>book__form<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>u-margin-bottom-medium<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-secondary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                    Start booking now                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form__group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form__input<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Full Name<span class="token punctuation">"</span></span> <span class="token attr-name">required</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token comment" spellcheck="true">&lt;!-- for的值是要链接的标签的id --></span>                                <span class="token comment" spellcheck="true">&lt;!-- 点击label,自动聚焦到for指向的标签 --></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form__label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Full name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form__group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form__input<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Email address<span class="token punctuation">"</span></span> <span class="token attr-name">required</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token comment" spellcheck="true">&lt;!-- for的值是要链接的标签的id --></span>                                <span class="token comment" spellcheck="true">&lt;!-- 点击label,自动聚焦到for指向的标签 --></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form__label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Email address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span></code></pre><h3 id="components-form"><a href="#components-form" class="headerlink" title="components/form"></a>components/form</h3><pre class=" language-scss"><code class="language-scss"><span class="token selector">.form </span><span class="token punctuation">{</span>    &amp;<span class="token property">__group</span><span class="token punctuation">:</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token punctuation">:</span>last-child<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">2</span>rem<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__input </span><span class="token punctuation">{</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">1.5</span>rem<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 自动继承字体家族</span>        <span class="token property">font-family</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 继承</span>        <span class="token property">color</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">1.5</span>rem <span class="token number">2</span>rem<span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token variable">$box-radius</span><span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-white</span>, <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 底部边框</span>        <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">3</span>px solid transparent<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">90%</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 将label顶下去</span>        <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 仅chrome和safaki可用</span>        <span class="token comment" spellcheck="true">// ::是伪元素,是真实存在的,:是伪类,不是元素</span>        <span class="token selector"><span class="token parent important">&amp;</span>::-webkit-input-placeholder </span><span class="token punctuation">{</span>            <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color-grey-dark-2</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 当input框内容是无效的(比如邮箱格式不正确)</span>        <span class="token comment" spellcheck="true">// 似乎只有chrome提供?</span>        <span class="token selector"><span class="token parent important">&amp;</span>:focus:invalid </span><span class="token punctuation">{</span>            <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">3</span>px solid <span class="token variable">$color-secondary-dark</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 当被聚焦时</span>        <span class="token selector"><span class="token parent important">&amp;</span>:focus </span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 去掉聚焦时浏览器默认出现的边框</span>            <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">1</span>rem <span class="token number">2</span>rem <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-black</span>, <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 底部边框</span>            <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">3</span>px solid <span class="token variable">$color-primary</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__label </span><span class="token punctuation">{</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">1.2</span>rem<span class="token punctuation">;</span>        <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">700</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 和输入框的文字对齐</span>        <span class="token property">margin-left</span><span class="token punctuation">:</span> <span class="token number">2</span>rem<span class="token punctuation">;</span>        <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">0.7</span>rem<span class="token punctuation">;</span>        <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>        <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">0.3</span>s<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 当显示placeholder时</span>    <span class="token comment" spellcheck="true">// + 加号表示两个是邻接的兄弟(严格先后顺序), 兄弟选择器</span>    <span class="token comment" spellcheck="true">// 如果是 ~ ,则只要是同一级下的就行,不要求必须是紧挨着的</span>    <span class="token selector"><span class="token parent important">&amp;</span>__input:placeholder-shown + <span class="token parent important">&amp;</span>__label </span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 隐藏label</span>        <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 让label在y轴-4的位置,当输入内容,回到0的位置,就有一个从上到下弹出的动画效果</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-<span class="token number">4</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><img src="img_111.png" alt="img_111.png"></p><h2 id="building-the-booking-section-p3"><a href="#building-the-booking-section-p3" class="headerlink" title="building the booking section p3"></a>building the booking section p3</h2><h3 id="index-html-19"><a href="#index-html-19" class="headerlink" title="index.html"></a>index.html</h3><pre class=" language-html"><code class="language-html">        <span class="token comment" spellcheck="true">&lt;!-- booking --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section-book<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>book<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>book__form<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>u-margin-bottom-medium<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-secondary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                    Start booking now                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form__group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form__input<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Full Name<span class="token punctuation">"</span></span> <span class="token attr-name">required</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token comment" spellcheck="true">&lt;!-- for的值是要链接的标签的id --></span>                                <span class="token comment" spellcheck="true">&lt;!-- 点击label,自动聚焦到for指向的标签 --></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form__label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Full name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form__group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form__input<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Email address<span class="token punctuation">"</span></span> <span class="token attr-name">required</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token comment" spellcheck="true">&lt;!-- for的值是要链接的标签的id --></span>                                <span class="token comment" spellcheck="true">&lt;!-- 点击label,自动聚焦到for指向的标签 --></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form__label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Email address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form__group u-margin-bottom-medium<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token comment" spellcheck="true">&lt;!-- 单选框,当要将元素识别为组,则需要有相同的name --></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form__radio-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form__radio-input<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>size<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form__radio-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                        <span class="token comment" spellcheck="true">&lt;!-- 将用于替换默认的radio的按钮,因为有label的for绑定了radio,所以这是可行的 --></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form__radio-button<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                                        Small tour group                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form__radio-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>large<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form__radio-input<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>size<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>large<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form__radio-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form__radio-button<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                                        Large tour group                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form__group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn--green<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Next step <span class="token entity" title="&rarr;">&amp;rarr;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span></code></pre><h3 id="components-form-1"><a href="#components-form-1" class="headerlink" title="components/form"></a>components/form</h3><pre class=" language-scss"><code class="language-scss"><span class="token selector">.form </span><span class="token punctuation">{</span>    &amp;<span class="token property">__group</span><span class="token punctuation">:</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token punctuation">:</span>last-child<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">2</span>rem<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__input </span><span class="token punctuation">{</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">1.5</span>rem<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 自动继承字体家族</span>        <span class="token property">font-family</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 继承</span>        <span class="token property">color</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">1.5</span>rem <span class="token number">2</span>rem<span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token variable">$box-radius</span><span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-white</span>, <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 底部边框</span>        <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">3</span>px solid transparent<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">90%</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 将label顶下去</span>        <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>        <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">0.3</span>s<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 仅chrome和safaki可用</span>        <span class="token comment" spellcheck="true">// ::是伪元素,是真实存在的,:是伪类,不是元素</span>        <span class="token selector"><span class="token parent important">&amp;</span>::-webkit-input-placeholder </span><span class="token punctuation">{</span>            <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color-grey-dark-2</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 当input框内容是无效的(比如邮箱格式不正确)</span>        <span class="token comment" spellcheck="true">// 似乎只有chrome提供?</span>        <span class="token selector"><span class="token parent important">&amp;</span>:focus:invalid </span><span class="token punctuation">{</span>            <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">3</span>px solid <span class="token variable">$color-secondary-dark</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 当被聚焦时</span>        <span class="token selector"><span class="token parent important">&amp;</span>:focus </span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 去掉聚焦时浏览器默认出现的边框</span>            <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">1</span>rem <span class="token number">2</span>rem <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-black</span>, <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 底部边框</span>            <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">3</span>px solid <span class="token variable">$color-primary</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__label </span><span class="token punctuation">{</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">1.2</span>rem<span class="token punctuation">;</span>        <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">700</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 和输入框的文字对齐</span>        <span class="token property">margin-left</span><span class="token punctuation">:</span> <span class="token number">2</span>rem<span class="token punctuation">;</span>        <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">0.7</span>rem<span class="token punctuation">;</span>        <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>        <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">0.3</span>s<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 当显示placeholder时</span>    <span class="token comment" spellcheck="true">// + 加号表示两个是邻接的兄弟(严格先后顺序), 兄弟选择器</span>    <span class="token comment" spellcheck="true">// 如果是 ~ ,则只要是同一级下的就行,不要求必须是紧挨着的</span>    <span class="token selector"><span class="token parent important">&amp;</span>__input:placeholder-shown + <span class="token parent important">&amp;</span>__label </span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 隐藏label</span>        <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 让label在y轴-4的位置,当输入内容,回到0的位置,就有一个从上到下弹出的动画效果</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-<span class="token number">4</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__radio-group </span><span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">49%</span><span class="token punctuation">;</span>        <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 隐藏掉input本来的radio </span>    <span class="token selector"><span class="token parent important">&amp;</span>__radio-input </span><span class="token punctuation">{</span>        <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__radio-label </span><span class="token punctuation">{</span>        <span class="token property">font-style</span><span class="token punctuation">:</span> <span class="token variable">$default-font-size</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 设置鼠标形状</span>        <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>        <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>        <span class="token property">padding-left</span><span class="token punctuation">:</span> <span class="token number">4.5</span>rem<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__radio-button </span><span class="token punctuation">{</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">3</span>rem<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">3</span>rem<span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">5</span>px solid <span class="token variable">$color-primary</span><span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> -<span class="token number">0.4</span>rem<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 如果是其他类型,会被挤扁(inline),并且自己独占一行(block)</span>        <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 中心的小圆点</span>        <span class="token selector"><span class="token parent important">&amp;</span>::after </span><span class="token punctuation">{</span>            <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>            <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">1.3</span>rem<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">1.3</span>rem<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 圆形边</span>            <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 居中</span>            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>            <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>            <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-<span class="token number">50%</span>, -<span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-primary</span><span class="token punctuation">;</span>            <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token property">transition</span><span class="token punctuation">:</span> opacity <span class="token number">0.2</span>s<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 当&amp;__radio-input被选中checked时,其兄弟节点的&amp;__radio-label的子节点-button的after伪元素</span>    <span class="token selector"><span class="token parent important">&amp;</span>__radio-input:checked ~ <span class="token parent important">&amp;</span>__radio-label <span class="token parent important">&amp;</span>__radio-button::after </span><span class="token punctuation">{</span>        <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">1</span> <span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><img src="img_112.png" alt="img_112.png"></p><h1 id="building-the-footer"><a href="#building-the-footer" class="headerlink" title="building the footer"></a>building the footer</h1><p><img src="img_113.png" alt="img_113.png"></p><h2 id="layout-footer"><a href="#layout-footer" class="headerlink" title="layout/footer"></a>layout/footer</h2><pre class=" language-scss"><code class="language-scss"><span class="token selector">.footer </span><span class="token punctuation">{</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-grey-dark-3</span><span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">10</span>rem <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">1.4</span>rem<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color-grey-light-1</span><span class="token punctuation">;</span>    <span class="token selector"><span class="token parent important">&amp;</span>__logo-box </span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// inline用textalign来居中</span>        <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">8</span>rem<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__logo </span><span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">15</span>rem<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__navigation </span><span class="token punctuation">{</span>        <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token variable">$color-grey-dark</span><span class="token punctuation">;</span>        <span class="token property">padding-top</span><span class="token punctuation">:</span> <span class="token number">2</span>rem<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 让border跟内容对齐,而不是超出内容</span>        <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__list </span><span class="token punctuation">{</span>        <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__item </span><span class="token punctuation">{</span>        <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>        &amp;<span class="token punctuation">:</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token punctuation">:</span>last-child<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token number">1.5</span>rem<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__link </span><span class="token punctuation">{</span>        <span class="token selector"><span class="token parent important">&amp;</span>:link,        <span class="token parent important">&amp;</span>:visited </span><span class="token punctuation">{</span>            <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color-grey-light-1</span><span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-grey-dark-3</span><span class="token punctuation">;</span>            <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">text-transform</span><span class="token punctuation">:</span> uppercase<span class="token punctuation">;</span>            <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>            <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">0.2</span>s<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token parent important">&amp;</span>:hover,        <span class="token parent important">&amp;</span>:active </span><span class="token punctuation">{</span>            <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color-primary</span><span class="token punctuation">;</span>            <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">1</span>rem <span class="token number">2</span>rem <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-black</span>, <span class="token number">0.4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">5</span>deg<span class="token punctuation">)</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">1.3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__copyright </span><span class="token punctuation">{</span>         <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token variable">$color-grey-dark</span><span class="token punctuation">;</span>        <span class="token property">padding-top</span><span class="token punctuation">:</span> <span class="token number">2</span>rem<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">80%</span><span class="token punctuation">;</span>        <span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="index-html-20"><a href="#index-html-20" class="headerlink" title="index.html"></a>index.html</h2><pre class=" language-html"><code class="language-html"> <span class="token comment" spellcheck="true">&lt;!-- footer --></span>    <span class="token comment" spellcheck="true">&lt;!-- BEM(规范)体系中,每个元素都有class --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer__logo-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/logo-green-2x.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Full logo<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer__logo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer__navigation<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer__list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer__item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer__link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Company<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer__item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer__link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Contact us<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer__item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer__link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Carrers<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer__item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer__link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Privacy policy<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer__item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer__link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Terms<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-1-of-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer__copyright<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    Build by                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer__link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Jonas Schmedtmann<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    for his online course                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer__link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Advanced CSS and Sass<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>.                    Copyright                    <span class="token comment" spellcheck="true">&lt;!-- 这个是 © 图标 --></span>                    <span class="token entity" title="&copy;">&amp;copy;</span>                    by Jonas Schmedtmann. You are 100% allowed to use this webpage for both personal and                    commercial use, but NOT to claim it as your own design. A credit to the original author, Jonas                    Schmedtmann,                    is of course highly appreciated!                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span></code></pre><p><img src="img_114.png" alt="img_114.png"><br><img src="img_115.png" alt="img_115.png"></p><h1 id="navigation"><a href="#navigation" class="headerlink" title="navigation"></a>navigation</h1><h2 id="building-the-navigation-p1"><a href="#building-the-navigation-p1" class="headerlink" title="building the navigation p1"></a>building the navigation p1</h2><p><img src="img_116.png" alt="img_116.png"><img src="img_117.png" alt="img_117.png"></p><h3 id="index-html-21"><a href="#index-html-21" class="headerlink" title="index.html"></a>index.html</h3><pre class=" language-html"><code class="language-html">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation__checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navi-toggle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navi-toggle<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation__button<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>MENU<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation__background<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation__nav<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation__list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation__item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation__link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>01<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                        About Natours                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation__item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation__link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>02<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                        Your benfits                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation__item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation__link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>03<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                        Popular tours                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation__item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation__link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>04<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                        Stories                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation__item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation__link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>05<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                        Book now                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><h3 id="layout-navigation"><a href="#layout-navigation" class="headerlink" title="layout/navigation"></a>layout/navigation</h3><pre class=" language-scss"><code class="language-scss"><span class="token selector">.navigation </span><span class="token punctuation">{</span>    <span class="token selector"><span class="token parent important">&amp;</span>__checkbox </span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 隐藏复选框</span>        <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__button </span><span class="token punctuation">{</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-white</span><span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">7</span>rem<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">7</span>rem<span class="token punctuation">;</span>        <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">6</span>rem<span class="token punctuation">;</span>        <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">6</span>rem<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 圆形</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>        <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">2000</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 放在按钮下面,hover时放大占据屏幕,实现动效</span>    <span class="token selector"><span class="token parent important">&amp;</span>__background </span><span class="token punctuation">{</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">6</span>rem<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">6</span>rem<span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 滚动页面时,不会改变位置</span>        <span class="token comment" spellcheck="true">// 允许指定其位置</span>        <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">6.5</span>rem<span class="token punctuation">;</span>        <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">6.5</span>rem<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 径向渐变(从中心向四周渐变)</span>        <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">radial-gradient</span><span class="token punctuation">(</span><span class="token variable">$color-primary-light</span>, <span class="token variable">$color-primary-dark</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">1000</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 放大</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 点击后打开的nav界面样式</span>    <span class="token selector"><span class="token parent important">&amp;</span>__nav </span><span class="token punctuation">{</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>vh<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 固定位置</span>        <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">1500</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__list </span><span class="token punctuation">{</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-<span class="token number">50%</span>, -<span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 有序号的情况下,我更喜欢左对齐</span>        <span class="token property">text-align</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__item </span><span class="token punctuation">{</span>        <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">1</span>rem<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__link </span><span class="token punctuation">{</span>        <span class="token selector"><span class="token parent important">&amp;</span>:link,        <span class="token parent important">&amp;</span>:visited </span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 内联块可以transform</span>            <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">3</span>rem<span class="token punctuation">;</span>            <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">;</span>            <span class="token property">text-transform</span><span class="token punctuation">:</span> uppercase<span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color-white</span><span class="token punctuation">;</span>            <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">1</span>rem <span class="token number">2</span>rem<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 纯色渐变</span>            <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span><span class="token number">120</span>deg, transparent <span class="token number">0%</span>, transparent <span class="token number">50%</span>, <span class="token variable">$color-white</span> <span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 放大时,会出现红色往右移动的错觉</span>            <span class="token property">background-size</span><span class="token punctuation">:</span> <span class="token number">220%</span><span class="token punctuation">;</span>            <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">0.4</span>s<span class="token punctuation">;</span>            <span class="token selector">span </span><span class="token punctuation">{</span>                <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token number">1.2</span>rem<span class="token punctuation">;</span>                <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token parent important">&amp;</span>:hover,        <span class="token parent important">&amp;</span>:active </span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 背景定位会100%的位置</span>            <span class="token property">background-position</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color-primary</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 向右移动一点</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span><span class="token number">1</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><img src="img_119.png" alt="img_119.png"> </p><h2 id="building-the-navigation-p2-实现打开关闭的动画"><a href="#building-the-navigation-p2-实现打开关闭的动画" class="headerlink" title="building the navigation p2 (实现打开关闭的动画)"></a>building the navigation p2 (实现打开关闭的动画)</h2><p><img src="img_118.png" alt="img_118.png"><img src="img_120.png" alt="img_120.png"><img src="img_121.png" alt="在线创建动画计时函数"></p><pre class=" language-scss"><code class="language-scss"><span class="token selector">.navigation </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// label的样式</span>    <span class="token selector"><span class="token parent important">&amp;</span>__button </span><span class="token punctuation">{</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-white</span><span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">7</span>rem<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">7</span>rem<span class="token punctuation">;</span>        <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">6</span>rem<span class="token punctuation">;</span>        <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">6</span>rem<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 圆形</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>        <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">2000</span><span class="token punctuation">;</span>        <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">1</span>rem <span class="token number">3</span>rem <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-black</span>, <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 放在按钮下面,hover时放大占据屏幕,实现动效</span>    <span class="token selector"><span class="token parent important">&amp;</span>__background </span><span class="token punctuation">{</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">6</span>rem<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">6</span>rem<span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 滚动页面时,不会改变位置</span>        <span class="token comment" spellcheck="true">// 允许指定其位置</span>        <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">6.5</span>rem<span class="token punctuation">;</span>        <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">6.5</span>rem<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 径向渐变(从中心向四周渐变)</span>        <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">radial-gradient</span><span class="token punctuation">(</span><span class="token variable">$color-primary-light</span>, <span class="token variable">$color-primary-dark</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">1000</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 放大</span>        <span class="token comment" spellcheck="true">// transform: scale(80);</span>        <span class="token property">transition</span><span class="token punctuation">:</span> transform <span class="token number">0.8</span>s<span class="token punctuation">;</span>        <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">0.8</span>s <span class="token function">cubic-bezier</span><span class="token punctuation">(</span><span class="token number">0.86</span>, <span class="token number">0</span>, <span class="token number">0.07</span>, <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 点击后打开的nav界面样式</span>    <span class="token selector"><span class="token parent important">&amp;</span>__nav </span><span class="token punctuation">{</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>vh<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 固定位置</span>        <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">1500</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 透明</span>        <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 只有透明不行,元素还在,所以要宽度为0</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// cubic-bezier三次贝塞尔函数</span>        <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">0.8</span>s <span class="token function">cubic-bezier</span><span class="token punctuation">(</span><span class="token number">0.68</span>, -<span class="token number">0.55</span>, <span class="token number">0.265</span>, <span class="token number">1.55</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__list </span><span class="token punctuation">{</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>        <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">50%</span>, -<span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 有序号的情况下,我更喜欢左对齐</span>        <span class="token property">text-align</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__item </span><span class="token punctuation">{</span>        <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">1</span>rem<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__link </span><span class="token punctuation">{</span>        <span class="token selector"><span class="token parent important">&amp;</span>:link,        <span class="token parent important">&amp;</span>:visited </span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 内联块可以transform</span>            <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">3</span>rem<span class="token punctuation">;</span>            <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">;</span>            <span class="token property">text-transform</span><span class="token punctuation">:</span> uppercase<span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color-white</span><span class="token punctuation">;</span>            <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">1</span>rem <span class="token number">2</span>rem<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 纯色渐变</span>            <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span><span class="token number">120</span>deg, transparent <span class="token number">0%</span>, transparent <span class="token number">50%</span>, <span class="token variable">$color-white</span> <span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 放大时,会出现红色往右移动的错觉</span>            <span class="token property">background-size</span><span class="token punctuation">:</span> <span class="token number">220%</span><span class="token punctuation">;</span>            <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">0.4</span>s<span class="token punctuation">;</span>            <span class="token selector">span </span><span class="token punctuation">{</span>                <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token number">1.2</span>rem<span class="token punctuation">;</span>                <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token parent important">&amp;</span>:hover,        <span class="token parent important">&amp;</span>:active </span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 背景定位会100%的位置</span>            <span class="token property">background-position</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color-primary</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 向右移动一点</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span><span class="token number">1</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__checkbox </span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 隐藏复选框</span>        <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 点击按钮(checkbox),放大背景</span>    <span class="token selector"><span class="token parent important">&amp;</span>__checkbox:checked ~ <span class="token parent important">&amp;</span>__background </span><span class="token punctuation">{</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__checkbox:checked ~ <span class="token parent important">&amp;</span>__nav </span><span class="token punctuation">{</span>        <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> </code></pre><h2 id="building-the-navigation-p3"><a href="#building-the-navigation-p3" class="headerlink" title="building the navigation p3"></a>building the navigation p3</h2><h3 id="index-html-22"><a href="#index-html-22" class="headerlink" title="index.html"></a>index.html</h3><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!doctype html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span>        <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, user-scalable<span class="token punctuation">=</span>no, initial-scale<span class="token punctuation">=</span>1.0, maximum-scale<span class="token punctuation">=</span>1.0, minimum-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ie<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--google字体,数字表示粗细--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://fonts.googleapis.com/css?family<span class="token punctuation">=</span>Lato:100,300,400,700,900<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>css/icon-font.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>css/style.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--网站标题栏的小图标--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>shortcut icon<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>image/png<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/favicon.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Natours | Exciting tours for adventurous people<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation__checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navi-toggle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navi-toggle<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation__button<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation__icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation__background<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation__nav<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation__list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation__item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation__link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>01<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                        About Natours                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation__item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation__link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>02<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                        Your benfits                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation__item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation__link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>03<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                        Popular tours                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation__item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation__link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>04<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                        Stories                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation__item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>navigation__link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>05<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                        Book now                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    ......<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="layout-navigation-1"><a href="#layout-navigation-1" class="headerlink" title="layout/navigation"></a>layout/navigation</h3><pre class=" language-scss"><code class="language-scss"><span class="token selector">.navigation </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// label的样式</span>    <span class="token selector"><span class="token parent important">&amp;</span>__button </span><span class="token punctuation">{</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-white</span><span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">7</span>rem<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">7</span>rem<span class="token punctuation">;</span>        <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">6</span>rem<span class="token punctuation">;</span>        <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">6</span>rem<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 圆形</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>        <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">2000</span><span class="token punctuation">;</span>        <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">1</span>rem <span class="token number">3</span>rem <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-black</span>, <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// span水平居中</span>        <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 放在按钮下面,hover时放大占据屏幕,实现动效</span>    <span class="token selector"><span class="token parent important">&amp;</span>__background </span><span class="token punctuation">{</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">6</span>rem<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">6</span>rem<span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 滚动页面时,不会改变位置</span>        <span class="token comment" spellcheck="true">// 允许指定其位置</span>        <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">6.5</span>rem<span class="token punctuation">;</span>        <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">6.5</span>rem<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 径向渐变(从中心向四周渐变)</span>        <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">radial-gradient</span><span class="token punctuation">(</span><span class="token variable">$color-primary-light</span>, <span class="token variable">$color-primary-dark</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">1000</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 放大</span>        <span class="token comment" spellcheck="true">// transform: scale(80);</span>        <span class="token property">transition</span><span class="token punctuation">:</span> transform <span class="token number">0.8</span>s<span class="token punctuation">;</span>        <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">0.8</span>s <span class="token function">cubic-bezier</span><span class="token punctuation">(</span><span class="token number">0.86</span>, <span class="token number">0</span>, <span class="token number">0.07</span>, <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 点击后打开的nav界面样式</span>    <span class="token selector"><span class="token parent important">&amp;</span>__nav </span><span class="token punctuation">{</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>vh<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 固定位置</span>        <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">1500</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 透明</span>        <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 只有透明不行,元素还在,所以要宽度为0</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// cubic-bezier三次贝塞尔函数</span>        <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">0.8</span>s <span class="token function">cubic-bezier</span><span class="token punctuation">(</span><span class="token number">0.68</span>, -<span class="token number">0.55</span>, <span class="token number">0.265</span>, <span class="token number">1.55</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__list </span><span class="token punctuation">{</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>        <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">50%</span>, -<span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 有序号的情况下,我更喜欢左对齐</span>        <span class="token property">text-align</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__item </span><span class="token punctuation">{</span>        <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">1</span>rem<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__link </span><span class="token punctuation">{</span>        <span class="token selector"><span class="token parent important">&amp;</span>:link,        <span class="token parent important">&amp;</span>:visited </span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 内联块可以transform</span>            <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">3</span>rem<span class="token punctuation">;</span>            <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">;</span>            <span class="token property">text-transform</span><span class="token punctuation">:</span> uppercase<span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color-white</span><span class="token punctuation">;</span>            <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">1</span>rem <span class="token number">2</span>rem<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 纯色渐变</span>            <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span><span class="token number">120</span>deg, transparent <span class="token number">0%</span>, transparent <span class="token number">50%</span>, <span class="token variable">$color-white</span> <span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 放大时,会出现红色往右移动的错觉</span>            <span class="token property">background-size</span><span class="token punctuation">:</span> <span class="token number">220%</span><span class="token punctuation">;</span>            <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">0.4</span>s<span class="token punctuation">;</span>            <span class="token selector">span </span><span class="token punctuation">{</span>                <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token number">1.2</span>rem<span class="token punctuation">;</span>                <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token parent important">&amp;</span>:hover,        <span class="token parent important">&amp;</span>:active </span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 背景定位会100%的位置</span>            <span class="token property">background-position</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color-primary</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 向右移动一点</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span><span class="token number">1</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__checkbox </span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 隐藏复选框</span>        <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// FUNCTIONALITY</span>    <span class="token comment" spellcheck="true">// 点击按钮(checkbox),放大背景</span>    <span class="token selector"><span class="token parent important">&amp;</span>__checkbox:checked ~ <span class="token parent important">&amp;</span>__background </span><span class="token punctuation">{</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__checkbox:checked ~ <span class="token parent important">&amp;</span>__nav </span><span class="token punctuation">{</span>        <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// ICON</span>    <span class="token selector"><span class="token parent important">&amp;</span>__icon </span><span class="token punctuation">{</span>        <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>        <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">3.5</span>rem<span class="token punctuation">;</span>        <span class="token selector"><span class="token parent important">&amp;</span>,        <span class="token parent important">&amp;</span>::after,        <span class="token parent important">&amp;</span>::before </span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">3</span>rem<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">2</span>px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-grey-dark-3</span><span class="token punctuation">;</span>            <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>            <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">0.2</span>s<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token parent important">&amp;</span>::after,        <span class="token parent important">&amp;</span>::before </span><span class="token punctuation">{</span>            <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 定位两个伪元素</span>            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>            <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token parent important">&amp;</span>::after </span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 旋转的中心点(绕哪一点旋转)</span>            <span class="token comment" spellcheck="true">// transform-origin: left;</span>            <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0.8</span>rem<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token parent important">&amp;</span>::before </span><span class="token punctuation">{</span>            <span class="token property">top</span><span class="token punctuation">:</span> -<span class="token number">0.8</span>rem<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__button:hover <span class="token parent important">&amp;</span>__icon::before </span><span class="token punctuation">{</span>        <span class="token property">top</span><span class="token punctuation">:</span> -<span class="token number">1</span>rem<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__button:hover <span class="token parent important">&amp;</span>__icon::after </span><span class="token punctuation">{</span>        <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">1</span>rem<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__checkbox:checked + <span class="token parent important">&amp;</span>__button <span class="token parent important">&amp;</span>__icon </span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 变为不可见</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__checkbox:checked + <span class="token parent important">&amp;</span>__button <span class="token parent important">&amp;</span>__icon::before </span><span class="token punctuation">{</span>        <span class="token property">top</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">135</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__checkbox:checked + <span class="token parent important">&amp;</span>__button <span class="token parent important">&amp;</span>__icon::after </span><span class="token punctuation">{</span>        <span class="token property">top</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>-<span class="token number">135</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><img src="img_122.png" alt="img_122.png"></p><h1 id="pure-css-popup-弹出框"><a href="#pure-css-popup-弹出框" class="headerlink" title="pure css popup (弹出框)"></a>pure css popup (弹出框)</h1><h2 id="p1"><a href="#p1" class="headerlink" title="p1"></a>p1</h2><p><img src="img_123.png" alt="img_123.png"><img src="img_124.png" alt="生成一段文字https://loremipsum.io/"></p><h3 id="index-html-23"><a href="#index-html-23" class="headerlink" title="index.html"></a>index.html</h3><pre class=" language-html"><code class="language-html">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>popup<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>popup__content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>popup__left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/nat-8.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Tour photo<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>popup__img<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/nat-9.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Tour photo<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>popup__img<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>popup__right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-secondary u-margin-bottom-small<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    Start booking now                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-tertiary u-margin-bottom-small<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    Important <span class="token entity" title="&ndash;">&amp;ndash;</span> Please read these terms before booking                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>popup__text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore                    et dolore magna aliqua. Tincidunt vitae semper quis lectus nulla at volutpat diam. Cras adipiscing                    enim eu turpis egestas pretium aenean pharetra. In mollis nunc sed id semper. Amet facilisis magna                    etiam tempor orci eu. Convallis posuere morbi leo urna molestie at elementum eu facilisis. Tellus in                    hac habitasse platea dictumst vestibulum rhoncus. Adipiscing bibendum est ultricies integer quis                    auctor. Consectetur lorem donec massa sapien faucibus. Dui sapien eget mi proin sed. Sem integer                    vitae justo eget magna fermentum iaculis eu. Dictum fusce ut placerat orci nulla pellentesque                    dignissim. Auctor elit sed vulputate mi. Dui id ornare arcu odio ut sem nulla pharetra. Nibh tortor                    id aliquet lectus proin.                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn--green<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Book now<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><h3 id="components-popup"><a href="#components-popup" class="headerlink" title="components/popup"></a>components/popup</h3><pre class=" language-scss"><code class="language-scss"><span class="token selector">.popup </span><span class="token punctuation">{</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>vh<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 暗色背景</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-black</span>, <span class="token number">0.8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">9999</span><span class="token punctuation">;</span>    <span class="token selector"><span class="token parent important">&amp;</span>__content </span><span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">75%</span><span class="token punctuation">;</span>        <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">2</span>rem <span class="token number">4</span>rem <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-black</span>, <span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-white</span><span class="token punctuation">;</span>        <span class="token keyword">@include</span> absCenter<span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">3</span>px<span class="token punctuation">;</span>        <span class="token property">display</span><span class="token punctuation">:</span> table<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 让图片不要遮住圆角</span>        <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__left </span><span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">33.333333%</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// float: left;</span>        <span class="token comment" spellcheck="true">// 父元素需要设置为display: table</span>        <span class="token property">display</span><span class="token punctuation">:</span> table-cell<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__right </span><span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">66.666667%</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// float: right;</span>        <span class="token property">display</span><span class="token punctuation">:</span> table-cell<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 垂直居中对齐</span>        <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">3</span>rem <span class="token number">5</span>rem<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__img </span><span class="token punctuation">{</span>        <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__text </span><span class="token punctuation">{</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">1.4</span>rem<span class="token punctuation">;</span>        <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">4</span>rem<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 文字创建为两列</span>        <span class="token property">-moz-column-count</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token property">column-count</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 列和列的间隔(默认1em)</span>        <span class="token comment" spellcheck="true">// 1em=14px(因为这里指定font-size为14px)</span>        <span class="token property">-moz-column-gap</span><span class="token punctuation">:</span> <span class="token number">4</span>rem<span class="token punctuation">;</span>        <span class="token property">column-gap</span><span class="token punctuation">:</span> <span class="token number">4</span>rem<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 列直接的分割线</span>        <span class="token property">-moz-column-rule</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token variable">$color-grey-light-2</span><span class="token punctuation">;</span>        <span class="token property">column-rule</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token variable">$color-grey-light-2</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 单词遇到换行被拆分时自动显示连字符</span>        <span class="token comment" spellcheck="true">// 有前缀的是为了兼容(有更好的工具来解决->autoprefix,后面才讲)</span>        <span class="token property">-moz-hyphens</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>        <span class="token property">-ms-hyphens</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>        <span class="token property">-webkit-hyphens</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>        <span class="token property">hyphens</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> </code></pre><p><img src="img_125.png" alt="img_125.png"></p><h2 id="p2"><a href="#p2" class="headerlink" title="p2"></a>p2</h2><h3 id="components-popup-1"><a href="#components-popup-1" class="headerlink" title="components/popup"></a>components/popup</h3><pre class=" language-scss"><code class="language-scss"><span class="token selector">.popup </span><span class="token punctuation">{</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>vh<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 暗色背景</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-black</span>, <span class="token number">0.8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">9999</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 隐藏元素</span>    <span class="token comment" spellcheck="true">// 使用display: none;则动画会失效!!!</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">0.3</span>s<span class="token punctuation">;</span>    <span class="token selector"><span class="token parent important">&amp;</span>__content </span><span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">75%</span><span class="token punctuation">;</span>        <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">2</span>rem <span class="token number">4</span>rem <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token variable">$color-black</span>, <span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-white</span><span class="token punctuation">;</span>        <span class="token keyword">@include</span> absCenter<span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">3</span>px<span class="token punctuation">;</span>        <span class="token property">display</span><span class="token punctuation">:</span> table<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 让图片不要遮住圆角</span>        <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 初始状态为缩小</span>        <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 写translate(-50%,-50%)是因为已经有声明transform</span>        <span class="token comment" spellcheck="true">// 为了让两个都生效,所以多写一遍</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-<span class="token number">50%</span>, -<span class="token number">50%</span><span class="token punctuation">)</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">0.25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// .2s是延迟</span>        <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">0.4</span>s <span class="token number">0.2</span>s<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__left </span><span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">33.333333%</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// float: left;</span>        <span class="token comment" spellcheck="true">// 父元素需要设置为display: table</span>        <span class="token property">display</span><span class="token punctuation">:</span> table-cell<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__right </span><span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">66.666667%</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// float: right;</span>        <span class="token property">display</span><span class="token punctuation">:</span> table-cell<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 垂直居中对齐</span>        <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">3</span>rem <span class="token number">5</span>rem<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__img </span><span class="token punctuation">{</span>        <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__text </span><span class="token punctuation">{</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">1.4</span>rem<span class="token punctuation">;</span>        <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">4</span>rem<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 文字创建为两列</span>        <span class="token property">-moz-column-count</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token property">column-count</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 列和列的间隔(默认1em)</span>        <span class="token comment" spellcheck="true">// 1em=14px(因为这里指定font-size为14px)</span>        <span class="token property">-moz-column-gap</span><span class="token punctuation">:</span> <span class="token number">4</span>rem<span class="token punctuation">;</span>        <span class="token property">column-gap</span><span class="token punctuation">:</span> <span class="token number">4</span>rem<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 列直接的分割线</span>        <span class="token property">-moz-column-rule</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token variable">$color-grey-light-2</span><span class="token punctuation">;</span>        <span class="token property">column-rule</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token variable">$color-grey-light-2</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 单词遇到换行被拆分时自动显示连字符</span>        <span class="token comment" spellcheck="true">// 有前缀的是为了兼容(有更好的工具来解决->autoprefix,后面才讲)</span>        <span class="token property">-moz-hyphens</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>        <span class="token property">-ms-hyphens</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>        <span class="token property">-webkit-hyphens</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>        <span class="token property">hyphens</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// target就是a标签跳转的目标元素</span>    <span class="token comment" spellcheck="true">// localhost:xx/#popup</span>    <span class="token selector"><span class="token parent important">&amp;</span>:target </span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// open state</span>        <span class="token comment" spellcheck="true">// 显示</span>        <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token property">visibility</span><span class="token punctuation">:</span> visible<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>:target <span class="token parent important">&amp;</span>__content </span><span class="token punctuation">{</span>        <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-<span class="token number">50%</span>, -<span class="token number">50%</span><span class="token punctuation">)</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>__close </span><span class="token punctuation">{</span>        <span class="token selector"><span class="token parent important">&amp;</span>:link,        <span class="token parent important">&amp;</span>:visited </span><span class="token punctuation">{</span>            <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color-grey-dark</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 将定位到第一个relative的父级 -> popup__content</span>            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>            <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">2.5</span>rem<span class="token punctuation">;</span>            <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">2.5</span>rem<span class="token punctuation">;</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">3</span>rem<span class="token punctuation">;</span>            <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>            <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">0.2</span>s<span class="token punctuation">;</span>            <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token parent important">&amp;</span>:hover </span><span class="token punctuation">{</span>            <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$color-primary</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> </code></pre><h3 id="index-html-24"><a href="#index-html-24" class="headerlink" title="index.html"></a>index.html</h3><pre class=" language-html"><code class="language-html">    <span class="token comment" spellcheck="true">&lt;!-- 点击按钮弹出 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>popup<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>popup<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>popup__content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>popup__left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/nat-8.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Tour photo<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>popup__img<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/nat-9.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Tour photo<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>popup__img<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>popup__right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token comment" spellcheck="true">&lt;!-- 点下后target变成section-tours --></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#section-tours<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>popup__close<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity" title="&times;">&amp;times;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-secondary u-margin-bottom-small<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    Start booking now                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heading-tertiary u-margin-bottom-small<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    Important <span class="token entity" title="&ndash;">&amp;ndash;</span> Please read these terms before booking                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>popup__text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore                    et dolore magna aliqua. Tincidunt vitae semper quis lectus nulla at volutpat diam. Cras adipiscing                    enim eu turpis egestas pretium aenean pharetra. In mollis nunc sed id semper. Amet facilisis magna                    etiam tempor orci eu. Convallis posuere morbi leo urna molestie at elementum eu facilisis. Tellus in                    hac habitasse platea dictumst vestibulum rhoncus. Adipiscing bibendum est ultricies integer quis                    auctor. Consectetur lorem donec massa sapien faucibus. Dui sapien eget mi proin sed. Sem integer                    vitae justo eget magna fermentum iaculis eu. Dictum fusce ut placerat orci nulla pellentesque                    dignissim. Auctor elit sed vulputate mi. Dui id ornare arcu odio ut sem nulla pharetra. Nibh tortor                    id aliquet lectus proin.                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn--green<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Book now<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><h1 id="mobile-first-vs-desktop-first-and-breakpoints"><a href="#mobile-first-vs-desktop-first-and-breakpoints" class="headerlink" title="mobile-first vs desktop-first and breakpoints"></a>mobile-first vs desktop-first and breakpoints</h1><p><img src="img_126.png" alt="img_126.png"><img src="img_128.png" alt="媒体查询"></p><blockquote><p>移动优先,更注重内容,但是在大屏会显得很空<br>桌面优先,有更多空间,可用做更自由的设计</p></blockquote><p><img src="img_130.png" alt="img_130.png"><br><img src="img_131.png" alt="不同的响应式实现方案"><img src="img_132.png" alt="img_132.png"></p><h1 id="let’s-use-the-power-of-sass-mixins-to-write-media-queries"><a href="#let’s-use-the-power-of-sass-mixins-to-write-media-queries" class="headerlink" title="let’s use the power of sass mixins to write media queries"></a>let’s use the power of sass mixins to write media queries</h1><p><img src="img_133.png" alt="img_133.png"></p><h2 id="base-base"><a href="#base-base" class="headerlink" title="base/base"></a>base/base</h2><pre class=" language-scss"><code class="language-scss"><span class="token comment" spellcheck="true">// 基本样式(如重置页面)</span><span class="token comment" spellcheck="true">// 下划线开头的sass文件不会被编译,但可以被引用</span><span class="token comment" spellcheck="true">// ......</span><span class="token selector">html </span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">/*设置根元素font-size*/</span>  <span class="token comment" spellcheck="true">/*设置为10是因为方便换算 1rem=10px -> 16px=1.6rem*/</span>  <span class="token comment" spellcheck="true">/*font-size: 10px;*/</span>  <span class="token comment" spellcheck="true">/*写死为10px是不好的(比如用户修改浏览器默认字体大小?放大缩小),我们应该基于浏览器的默认font-size(16px)的百分比*/</span>  <span class="token comment" spellcheck="true">/*0.625*16=10*/</span>  <span class="token comment" spellcheck="true">/*老ie不兼容rem*/</span>  <span class="token comment" spellcheck="true">// 1rem = 10px | 1em = 16px -> 10/16 = 62.5%</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">62.5%</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/*改变盒子模型,以便不再添加边框和填充到总宽度和总高度*/</span>  <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// mixin{ content }</span>  <span class="token comment" spellcheck="true">// @include respond-phone {</span>  <span class="token comment" spellcheck="true">//   // 解析为@content</span>  <span class="token comment" spellcheck="true">//   font-size: 50%;</span>  <span class="token comment" spellcheck="true">// }</span>  <span class="token comment" spellcheck="true">// 先判断大的,再判断小的</span>  <span class="token keyword">@include</span> <span class="token function">respond</span><span class="token punctuation">(</span>big-desktop<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">75%</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 1rem = 12px , 12/16 = 75%</span>  <span class="token punctuation">}</span>  <span class="token keyword">@include</span> <span class="token function">respond</span><span class="token punctuation">(</span>tab-land<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// width &lt; 1200?</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">56.25%</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 1rem = 9px , 9/16 = 56.25%</span>  <span class="token punctuation">}</span>  <span class="token keyword">@include</span> <span class="token function">respond</span><span class="token punctuation">(</span>tab-port<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// width &lt; 900?</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 1rem = 8px , 8/16 = 50%</span>  <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token comment" spellcheck="true">/* basic reset end */</span></code></pre><h2 id="abstracts-mixins"><a href="#abstracts-mixins" class="headerlink" title="abstracts/mixins"></a>abstracts/mixins</h2><pre class=" language-scss"><code class="language-scss"><span class="token comment" spellcheck="true">// 清除浮动塌陷</span><span class="token keyword">@mixin</span> <span class="token selector">clearfix </span><span class="token punctuation">{</span>  <span class="token selector"><span class="token parent important">&amp;</span>::after </span><span class="token punctuation">{</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> table<span class="token punctuation">;</span>    <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 居中</span><span class="token keyword">@mixin</span> <span class="token selector">absCenter </span><span class="token punctuation">{</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-<span class="token number">50%</span>, -<span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 响应式: 媒体查询</span><span class="token comment" spellcheck="true">/*  0-600px: Phone  600-900px: tablet portrait  900-1200px: tablet landscape    1200-1800px: is where our normal styles apply &lt;- 桌面优先  1800px↑: big desktop */</span><span class="token comment" spellcheck="true">// @mixin respond-phone {</span><span class="token comment" spellcheck="true">//   @media (max-width: 600px) {</span><span class="token comment" spellcheck="true">//     @content;</span><span class="token comment" spellcheck="true">//   }</span><span class="token comment" spellcheck="true">// }</span><span class="token comment" spellcheck="true">/*  通过变量控制使用哪个尺寸的媒体查询  $breakpoint:    - phone   - tab-port  - tab-land  - big-desktop*/</span><span class="token comment" spellcheck="true">// 1em = 16px (浏览器默认大小)</span><span class="token comment" spellcheck="true">// 媒体查询的rem不受用户设置的font-size影响,而是直接等于浏览器默认的font-size</span><span class="token keyword">@mixin</span> <span class="token function">respond</span><span class="token punctuation">(</span><span class="token variable">$breakpoint</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">@if</span> <span class="token selector"><span class="token variable">$breakpoint</span> == phone </span><span class="token punctuation">{</span>    <span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> <span class="token number">37.5</span>em<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// 600px</span>      <span class="token keyword">@content</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">@if</span> <span class="token selector"><span class="token variable">$breakpoint</span> == tab-port </span><span class="token punctuation">{</span>    <span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> <span class="token number">56.25</span>em<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// 900px</span>      <span class="token keyword">@content</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">@if</span> <span class="token selector"><span class="token variable">$breakpoint</span> == tab-land </span><span class="token punctuation">{</span>    <span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> <span class="token number">75</span>em<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// 1200px</span>      <span class="token keyword">@content</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">@if</span> <span class="token selector"><span class="token variable">$breakpoint</span> == big-desktop </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 这里是min-width</span>    <span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> <span class="token number">112.5</span>em<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// 1800px</span>      <span class="token keyword">@content</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span> </code></pre><h2 id="writing-media-queries"><a href="#writing-media-queries" class="headerlink" title="writing media queries"></a>writing media queries</h2><blockquote><p>先在谷歌f12里看效果,然后找到开始变样的地方,进行媒体查询断点调整<br><img src="img_134.png" alt="img_134.png"><img src="img_135.png" alt="img_135.png"></p></blockquote><h3 id="网站-查看在不同终端上的效果"><a href="#网站-查看在不同终端上的效果" class="headerlink" title="网站: 查看在不同终端上的效果"></a>网站: 查看在不同终端上的效果</h3><p><img src="img_136.png" alt="img_136.png"><br>这里就不贴代码了</p><h1 id="responsive-images"><a href="#responsive-images" class="headerlink" title="responsive images"></a>responsive images</h1><h2 id="an-overview-of-responsive-images"><a href="#an-overview-of-responsive-images" class="headerlink" title="an overview of responsive images"></a>an overview of responsive images</h2><p><img src="img_137.png" alt="img_137.png"></p><ul><li>分辨率切换 </li><li>密度切换 1x(用一个像素来表示单个点) 2x(用两个像素表示单个点), 在高分辨率屏幕,也要用高密度的图来显示更好效果</li><li>艺术指导</li></ul><p><img src="img_138.png" alt="img_138.png"></p><h2 id="responsive-images-in-html"><a href="#responsive-images-in-html" class="headerlink" title="responsive images in html"></a>responsive images in html</h2><h3 id="art-direction-and-density-switching"><a href="#art-direction-and-density-switching" class="headerlink" title="art direction and density switching"></a>art direction and density switching</h3><p><img src="img_139.png" alt="img_139.png"><br><img src="img_141.png" alt="密度切换"><br><img src="img_140.png" alt="img_140.png"><br><img src="img_147.png" alt="密度切换+艺术指导"><br><img src="img_142.png" alt="确实使用了小图"></p><h2 id="density-and-resolution-switching"><a href="#density-and-resolution-switching" class="headerlink" title="density and resolution switching"></a>density and resolution switching</h2><p><img src="img_145.png" alt="img_145.png"><br><img src="img_146.png" alt="这里调整分辨率"><br><img src="img_144.png" alt="这里可以看用的是哪个图片"></p><h3 id="改造那三张图"><a href="#改造那三张图" class="headerlink" title="改造那三张图"></a>改造那三张图</h3><p><img src="img_149.png" alt="img_149.png"><br><img src="img_150.png" alt="小屏用nat-"><br><img src="img_151.png" alt="大屏用nat-large-"></p><h2 id="responsive-image-in-css"><a href="#responsive-image-in-css" class="headerlink" title="responsive image in css"></a>responsive image in css</h2><p><img src="img_152.png" alt="img_152.png"><br><img src="img_154.png" alt="img_154.png"><br><img src="img_153.png" alt="(这个颜色是为了测试)分辨率高了确实有改变"></p><h1 id="testing-for-browser-support-with-supports"><a href="#testing-for-browser-support-with-supports" class="headerlink" title="testing for browser support with @supports"></a>testing for browser support with @supports</h1><blockquote><p>我们使用了很多现代css,它们可能无法兼容旧浏览器<br> 优雅降级: graceful degradation</p></blockquote><p><img src="img_155.png" alt="如何使用特征查询"></p><p><img src="img_156.png" alt="img_156.png"><br><img src="img_157.png" alt="img_157.png"><br><img src="img_158.png" alt="img_158.png"><img src="img_159.png" alt="img_159.png"></p><h1 id="setting-up-a-simple-build-process-with-npm-scripts-使用npm自动构建"><a href="#setting-up-a-simple-build-process-with-npm-scripts-使用npm自动构建" class="headerlink" title="setting up a simple build process with npm scripts (使用npm自动构建)"></a>setting up a simple build process with npm scripts (使用npm自动构建)</h1><p><img src="img_160.png" alt="img_160.png"></p><pre class=" language-shell"><code class="language-shell"># 拼接css文件npm i concat --save-dev --registry=https://registry.npmmirror.com# 自动加前缀 node-sass 压缩npm i autoprefixer postcss postcss-cli node-sass --save-dev --registry=https://registry.npmmirror.com# 一次运行多个任务npm i npm-run-all --save-dev --registry=https://registry.npmmirror.com</code></pre><pre class=" language-json"><code class="language-json">  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"watch:sass"</span><span class="token operator">:</span> <span class="token string">"sass sass/main.scss css/style.css -w"</span><span class="token punctuation">,</span>        <span class="token property">"live"</span><span class="token operator">:</span> <span class="token string">"live-server --port=8965 --host=0.0.0.0"</span><span class="token punctuation">,</span>        <span class="token property">"start"</span><span class="token operator">:</span> <span class="token string">"npm-run-all --parallel live watch:sass"</span><span class="token punctuation">,</span>        <span class="token property">"compile:sass"</span><span class="token operator">:</span> <span class="token string">"sass sass/main.scss css/style.comp.css"</span><span class="token punctuation">,</span>        <span class="token property">"concat:css"</span><span class="token operator">:</span> <span class="token string">"concat -o css/style.concat.css css/icon-font.css css/style.comp.css"</span><span class="token punctuation">,</span>        <span class="token property">"prefix:css"</span><span class="token operator">:</span> <span class="token string">"postcss --use autoprefixer -b 'last 10 versions' css/style.concat.css -o css/style.prefix.css"</span><span class="token punctuation">,</span>        <span class="token property">"compress:css"</span><span class="token operator">:</span> <span class="token string">"node-sass css/style.prefix.css css/style.min.css --output-style compressed"</span><span class="token punctuation">,</span>        <span class="token property">"build:css"</span><span class="token operator">:</span> <span class="token string">"npm-run-all compile:sass concat:css prefix:css compress:css"</span>  <span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
          <category> 高阶 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> css </tag>
            
            <tag> 高阶 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>udemy-PythonPRO训练营</title>
      <link href="/2023/02/12/ai/udemy-pythonpro-xun-lian-ying/udemy-pythonpro-xun-lian-ying/udemy-pythonpro-xun-lian-ying/"/>
      <url>/2023/02/12/ai/udemy-pythonpro-xun-lian-ying/udemy-pythonpro-xun-lian-ying/udemy-pythonpro-xun-lian-ying/</url>
      
        <content type="html"><![CDATA[<h1 id="day1"><a href="#day1" class="headerlink" title="day1"></a>day1</h1><p><img src="img.png" alt="img.png"></p><blockquote><p>本节将做一个命令行交互界面,生成乐队名称<br><img src="img_1.png" alt="本节项目演示地址"></p></blockquote><h2 id="print-打印"><a href="#print-打印" class="headerlink" title="print() 打印"></a>print() 打印</h2><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"hello world!"</span><span class="token punctuation">)</span></code></pre><h2 id="input-接收输入"><a href="#input-接收输入" class="headerlink" title="input() 接收输入"></a>input() 接收输入</h2><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"hello "</span> <span class="token operator">+</span> input<span class="token punctuation">(</span><span class="token string">"What is your name? "</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h2 id="作业-1-3-打印输入的字符串的长度"><a href="#作业-1-3-打印输入的字符串的长度" class="headerlink" title="作业 1.3 打印输入的字符串的长度"></a>作业 1.3 打印输入的字符串的长度</h2><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>len<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"What is your name? "</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h2 id="variable-变量"><a href="#variable-变量" class="headerlink" title="variable 变量"></a>variable 变量</h2><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># variable</span>name <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"What is your name? "</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>name <span class="token operator">=</span> <span class="token string">"柯莱"</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>length <span class="token operator">=</span> len<span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>length<span class="token punctuation">)</span> </code></pre><h2 id="1-4-练习"><a href="#1-4-练习" class="headerlink" title="1.4 练习"></a>1.4 练习</h2><h3 id="交换变量"><a href="#交换变量" class="headerlink" title="交换变量"></a>交换变量</h3><pre><code>a=1b=2c=aa=bb=cprint(a)print(b)</code></pre><h2 id="项目-乐队名称生成器"><a href="#项目-乐队名称生成器" class="headerlink" title="项目: 乐队名称生成器"></a>项目: 乐队名称生成器</h2><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># Project_Band Name Generator </span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Welcome to the band name generator."</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># \n可以让输入的位置变到下一行(而不是和input输出的语句在同一行)</span>city <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"Which city did you grow up in? \n"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># print(city)</span>pet <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"What is the name of a pet? \n"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># print(pet)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Your band name could be "</span> <span class="token operator">+</span> city <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> pet<span class="token punctuation">)</span></code></pre><p><img src="img_2.png" alt="测试"></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>udemy-Python数据科学和机器学习训练营</title>
      <link href="/2023/02/12/ai/udemy-python-shu-ju-ke-xue-he-ji-qi-xue-xi-xun-lian-ying/udemy-python-shu-ju-ke-xue-he-ji-qi-xue-xi-xun-lian-ying/udemy-python-shu-ju-ke-xue-he-ji-qi-xue-xi-xun-lian-ying/"/>
      <url>/2023/02/12/ai/udemy-python-shu-ju-ke-xue-he-ji-qi-xue-xi-xun-lian-ying/udemy-python-shu-ju-ke-xue-he-ji-qi-xue-xi-xun-lian-ying/udemy-python-shu-ju-ke-xue-he-ji-qi-xue-xi-xun-lian-ying/</url>
      
        <content type="html"><![CDATA[<h1 id="数据科学"><a href="#数据科学" class="headerlink" title="数据科学"></a>数据科学</h1><blockquote><p>从数据提取价值</p></blockquote><ol><li><strong>data engineer</strong> 收集数据</li><li><strong>data scientist</strong> 分析,可视化</li><li><strong>machine learning expert</strong> 智能算法分析新数据, 得出结论</li></ol><p><img src="5C1676184385567.png" alt="1676184385567"></p><h1 id="用数据科学解决问题-线性回归"><a href="#用数据科学解决问题-线性回归" class="headerlink" title="用数据科学解决问题 + 线性回归"></a>用数据科学解决问题 + 线性回归</h1><blockquote><p>线性回归 -&gt; 建模, 发现潜在联系</p></blockquote><p>数据分析科学家会: </p><ol><li><strong>formulate question</strong> 提出要回答的问题</li><li><strong>gather data</strong> 收集(有助于回答问题的)数据</li><li><strong>clean data</strong> 清理无用数据(噪声)</li><li><strong>explore &amp; visualise</strong> 探究与可视化</li><li><strong>train algorithm</strong> 训练算法 (本节的算法是线性回归)</li><li><strong>evaluate</strong> 评估结果</li></ol><p><img src="5C1676185079157.png" alt="数据科学步骤"></p><h2 id="step1-一个好问题"><a href="#step1-一个好问题" class="headerlink" title="step1 一个好问题"></a>step1 一个好问题</h2><ul><li>我的电影能赚多少💴 =&gt; 不是好问题, 太模糊fake了, 金钱money的定义?</li><li>我的电影可以赚多少收入(revenue) =&gt; 比金钱money更具体, 可以更好地定量分析(测量, 追踪)</li><li>我们可以使用电影预算来预测电影收入吗 =&gt; 多了一个x自变量, 他是可测试的(可以检查预算x和收入y是否存在关系) , 这里的<strong>y</strong>就是<strong>dependent variable <strong>或 机器学习中的</strong>target</strong>, 而<strong>x</strong>则是 <strong>independent variable</strong> 或 机器学习中的 <strong>feature</strong></li></ul><p><img src="5C1676185484462.png" alt="1676185484462"></p><h2 id="step2-收集数据"><a href="#step2-收集数据" class="headerlink" title="step2 收集数据"></a>step2 收集数据</h2><ol><li><strong>data on feature</strong> 自变量x 电影预算</li><li><strong>data on target</strong> 因变量y 电影收入</li></ol><p><img src="5C1676185936970.png" alt="1676185936970"></p><h3 id="去哪获取数据-the-numbers"><a href="#去哪获取数据-the-numbers" class="headerlink" title="去哪获取数据? the numbers"></a>去哪获取数据? the numbers</h3><p><a href="https://www.the-numbers.com/">the numbers</a></p><p><a href="https://www.the-numbers.com/movie/budgets/all">budgets</a></p><p><img src="5C1676186758255.png" alt="课程资料的csv文件"></p><p><img src="5C1676186853728.png" alt="存在空数据,需要进行处理"></p><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><blockquote><p>数据 -&gt; 排序和筛选 -&gt; 不需要包含标题 -&gt; 排序列 -&gt; 排序</p></blockquote><p><img src="5C1676187177869.png" alt="1676187177869"></p><blockquote><p>为0的数据可能是因为从未上映(没有数据) 或 数据有问题/争议</p></blockquote><p><img src="5C1676187203915.png" alt="排序结果"></p><h2 id="step3-清理数据"><a href="#step3-清理数据" class="headerlink" title="step3 清理数据"></a>step3 清理数据</h2><ol><li><p>选取所有含0数据的项 -&gt; 右键删除</p></li><li><p>删除前三列和最后一列,留下Production Budget和Worldwide Gross, 因为对计算没有用</p></li><li><p>将$x,000,000 格式转为纯数字格式</p></li><li><p>重命名列名(去掉特殊符号)</p></li></ol><p><img src="5C1676188509895.png" alt="转换格式"></p><p><img src="5C1676188624574.png" alt="1676188624574"><img src="5C1676188639640.png" alt="1676188639640"></p><p><img src="5C1676188831845.png" alt="列名"></p><p><img src="5C1676188889862.png" alt="数据清洗步骤"></p><h2 id="step4-可视化数据"><a href="#step4-可视化数据" class="headerlink" title="step4 可视化数据"></a>step4 可视化数据</h2><h3 id="使用Jupyter"><a href="#使用Jupyter" class="headerlink" title="使用Jupyter"></a>使用Jupyter</h3><p><img src="img.png" alt="img.png"></p><h4 id="shift-enter-gt-执行代码"><a href="#shift-enter-gt-执行代码" class="headerlink" title="shift+enter => 执行代码"></a>shift+enter =&gt; 执行代码</h4><h4 id="将csv文件上传到jupyter"><a href="#将csv文件上传到jupyter" class="headerlink" title="将csv文件上传到jupyter"></a>将csv文件上传到jupyter</h4><p><img src="img_2.png" alt="upload"></p><h3 id="使用pandas读取csv"><a href="#使用pandas读取csv" class="headerlink" title="使用pandas读取csv"></a>使用pandas读取csv</h3><p><img src="img_3.png" alt="img_3.png"><br><img src="img_4.png" alt="读取"><br><img src="img_5.png" alt="得到data的一些汇总统计数据"> </p><h4 id="Linear-Regression-ipynb"><a href="#Linear-Regression-ipynb" class="headerlink" title="Linear Regression.ipynb"></a>Linear Regression.ipynb</h4><pre class=" language-jupyter"><code class="language-jupyter">#%%import pandas #%%data = pandas.read_csv('008 cost-revenue-clean.csv')#%%data#%%data.describe()#%%from pandas import DataFrame#%%# 拆分datax = DataFrame(data,columns=['production_budget_usd'])y = DataFrame(data,columns=['worldwide_gross_usd'])#%%# 绘图import matplotlib.pyplot as plt#%%# 散点图# 图像大小plt.figure(figsize=(10,6))# alpha: 透明度plt.scatter(x,y,alpha=0.3) # matplotlib.pyplot.scatter(x,y)# matplotlib.pyplot.show()plt.title('File Cost vs Global Revenue') # 图表标题plt.xlabel('Production Budget $') # x轴标签plt.ylabel('Worldwide Gross $')# 设置y轴的最小值和最大值plt.ylim(0,3000000000)plt.xlim(0,450000000)plt.show()#%% </code></pre><p><img src="img_6.png" alt="散点图"></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> 数据科学 </category>
          
          <category> ai </category>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 数据科学 </tag>
            
            <tag> ai </tag>
            
            <tag> 人工智能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue3实现低代码编辑器</title>
      <link href="/2023/02/07/frontend/vue/vue3-shi-xian-di-dai-ma-bian-ji-qi/vue3-shi-xian-di-dai-ma-bian-ji-qi/vue3-shi-xian-di-dai-ma-bian-ji-qi/"/>
      <url>/2023/02/07/frontend/vue/vue3-shi-xian-di-dai-ma-bian-ji-qi/vue3-shi-xian-di-dai-ma-bian-ji-qi/vue3-shi-xian-di-dai-ma-bian-ji-qi/</url>
      
        <content type="html"><![CDATA[<p><img src="img.png" alt="低代码的作用"></p><h1 id="拖拽编辑器搭建"><a href="#拖拽编辑器搭建" class="headerlink" title="拖拽编辑器搭建"></a>拖拽编辑器搭建</h1><pre class=" language-shell"><code class="language-shell">vue create low-codeyarn add element-plus</code></pre><p><img src="img_1.png" alt="img_1.png"><br><img src="img_2.png" alt="img_2.png"><br><img src="img_3.png" alt="img_3.png"></p><blockquote><p>把拖曳组件的数据保存到一个json文件里</p></blockquote><h1 id="package"><a href="#package" class="headerlink" title="package/"></a>package/</h1><h2 id="editor-block-jsx"><a href="#editor-block-jsx" class="headerlink" title="editor-block.jsx"></a>editor-block.jsx</h2><pre class=" language-jsx"><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> computed<span class="token punctuation">,</span> defineComponent<span class="token punctuation">,</span> inject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  props<span class="token punctuation">:</span> <span class="token punctuation">{</span>    block<span class="token punctuation">:</span> <span class="token punctuation">{</span> type<span class="token punctuation">:</span> Object <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">setup</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> blockStyles <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>      top<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>props<span class="token punctuation">.</span>block<span class="token punctuation">.</span>top<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px`</span></span><span class="token punctuation">,</span>      left<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>props<span class="token punctuation">.</span>block<span class="token punctuation">.</span>left<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px`</span></span><span class="token punctuation">,</span>      zIndex<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>props<span class="token punctuation">.</span>block<span class="token punctuation">.</span>zIndex<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token function">inject</span><span class="token punctuation">(</span><span class="token string">"config"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// 根据key获取组件</span>      <span class="token keyword">const</span> component <span class="token operator">=</span> config<span class="token punctuation">.</span>componentMap<span class="token punctuation">[</span>props<span class="token punctuation">.</span>block<span class="token punctuation">.</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// 获取渲染组件</span>      <span class="token keyword">const</span> RenderComponent <span class="token operator">=</span> component<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">return</span> <span class="token punctuation">(</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editor-block<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>blockStyles<span class="token punctuation">.</span>value<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>          <span class="token punctuation">{</span>RenderComponent<span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre><h2 id="editor-jsx"><a href="#editor-jsx" class="headerlink" title="editor.jsx"></a>editor.jsx</h2><pre class=" language-jsx"><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> computed<span class="token punctuation">,</span> defineComponent<span class="token punctuation">,</span> inject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"./editor.scss"</span><span class="token punctuation">;</span><span class="token keyword">import</span> EditorBlock <span class="token keyword">from</span> <span class="token string">"./editor-block"</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  props<span class="token punctuation">:</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 接收父级传来的数据</span>    modelValue<span class="token punctuation">:</span> <span class="token punctuation">{</span> type<span class="token punctuation">:</span> Object <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">setup</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> props<span class="token punctuation">.</span>modelValue<span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// console.log(props.data);</span>    <span class="token comment" spellcheck="true">// console.log(props.modelValue);</span>    <span class="token comment" spellcheck="true">// console.log(data.value);</span>    <span class="token keyword">const</span> containerStyles <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>      width<span class="token punctuation">:</span> data<span class="token punctuation">.</span>value<span class="token punctuation">.</span>container<span class="token punctuation">.</span>width <span class="token operator">+</span> <span class="token string">"px"</span><span class="token punctuation">,</span>      height<span class="token punctuation">:</span> data<span class="token punctuation">.</span>value<span class="token punctuation">.</span>container<span class="token punctuation">.</span>height <span class="token operator">+</span> <span class="token string">"px"</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token function">inject</span><span class="token punctuation">(</span><span class="token string">"config"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editor<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editor-left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* 根据注册列表,渲染物料区 */</span><span class="token punctuation">}</span>          <span class="token punctuation">{</span>config<span class="token punctuation">.</span>componentList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editor-left-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>component<span class="token punctuation">.</span>label<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>component<span class="token punctuation">.</span><span class="token function">preview</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editor-top<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>菜单栏<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editor-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>属性控制栏<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editor-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* 负责产生滚动条 */</span><span class="token punctuation">}</span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editor-container-canvas<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* 产生内容区域 */</span><span class="token punctuation">}</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>              <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editor-container-canvas__content<span class="token punctuation">"</span></span>              <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>containerStyles<span class="token punctuation">.</span>value<span class="token punctuation">}</span></span>            <span class="token punctuation">></span></span>              <span class="token punctuation">{</span>data<span class="token punctuation">.</span>value<span class="token punctuation">.</span>blocks<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EditorBlock</span> <span class="token attr-name">block</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>block<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EditorBlock</span><span class="token punctuation">></span></span>              <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre><h2 id="editor-scss"><a href="#editor-scss" class="headerlink" title="editor.scss"></a>editor.scss</h2><pre class=" language-scss"><code class="language-scss"><span class="token selector">.editor </span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token selector"><span class="token parent important">&amp;</span>-left,    <span class="token parent important">&amp;</span>-right </span><span class="token punctuation">{</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">270</span>px<span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>-left </span><span class="token punctuation">{</span>        <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token selector"><span class="token parent important">&amp;</span>-item </span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">250</span>px<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">20</span>px auto<span class="token punctuation">;</span>            <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>            <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>            <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>            <span class="token property">cursor</span><span class="token punctuation">:</span> move<span class="token punctuation">;</span>            <span class="token property">user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">min-height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>            <span class="token selector">> span </span><span class="token punctuation">{</span>                <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>                <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span><span class="token number">96</span>, <span class="token number">205</span>, <span class="token number">224</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>                <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">4</span>px<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector"><span class="token parent important">&amp;</span>::after </span><span class="token punctuation">{</span>                <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>                <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>                <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#ccc</span><span class="token punctuation">;</span>                <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0.2</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>-right </span><span class="token punctuation">{</span>        <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>-top </span><span class="token punctuation">{</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">280</span>px<span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">280</span>px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">80</span>px<span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token parent important">&amp;</span>-container </span><span class="token punctuation">{</span>        <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">80</span>px <span class="token number">270</span>px <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>        <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>        <span class="token selector"><span class="token parent important">&amp;</span>-canvas </span><span class="token punctuation">{</span>            <span class="token property">overflow</span><span class="token punctuation">:</span> scroll<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>            <span class="token selector"><span class="token parent important">&amp;</span>__content </span><span class="token punctuation">{</span>                <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">20</span>px auto<span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// width: 550px;</span>                <span class="token comment" spellcheck="true">// height: 550px;</span>                <span class="token property">background</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>                <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token selector">.editor-block </span><span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token punctuation">}</span> </code></pre><h1 id="utils"><a href="#utils" class="headerlink" title="utils/"></a>utils/</h1><h2 id="editor-config-jsx"><a href="#editor-config-jsx" class="headerlink" title="editor-config.jsx"></a>editor-config.jsx</h2><pre class=" language-jsx"><code class="language-jsx"><span class="token comment" spellcheck="true">// 列表区,可以显示所有的物料</span><span class="token comment" spellcheck="true">// key对应的组件映射关系</span><span class="token keyword">import</span> <span class="token punctuation">{</span> ElButton<span class="token punctuation">,</span> ElInput <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"element-plus"</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">createEditorConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> componentList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> componentMap <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    componentList<span class="token punctuation">,</span>    componentMap<span class="token punctuation">,</span>    register<span class="token punctuation">:</span> <span class="token punctuation">(</span>component<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// 存放</span>      componentList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span><span class="token punctuation">;</span>      componentMap<span class="token punctuation">[</span>component<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> component<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">let</span> registerConfig <span class="token operator">=</span> <span class="token function">createEditorConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>registerConfig<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 注册组件,渲染物料区的示例组件</span>registerConfig<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  label<span class="token punctuation">:</span> <span class="token string">"文本"</span><span class="token punctuation">,</span>  preview<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"预览文本"</span><span class="token punctuation">,</span>  render<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"渲染文本"</span><span class="token punctuation">,</span>  key<span class="token punctuation">:</span> <span class="token string">"text"</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>registerConfig<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  label<span class="token punctuation">:</span> <span class="token string">"按钮"</span><span class="token punctuation">,</span>  preview<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ElButton</span><span class="token punctuation">></span></span>预览<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ElButton</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>  render<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ElButton</span><span class="token punctuation">></span></span>渲染按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ElButton</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>  key<span class="token punctuation">:</span> <span class="token string">"button"</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>registerConfig<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  label<span class="token punctuation">:</span> <span class="token string">"输入框"</span><span class="token punctuation">,</span>  preview<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ElInput</span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>预览输入框<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ElInput</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>  render<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ElInput</span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>渲染输入框<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ElInput</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>  key<span class="token punctuation">:</span> <span class="token string">"input"</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre><h1 id="src"><a href="#src" class="headerlink" title="src/"></a>src/</h1><h2 id="App-vue"><a href="#App-vue" class="headerlink" title="App.vue"></a>App.vue</h2><pre class=" language-vue"><code class="language-vue"><template>  <div class="app">    <Editor v-model="state"></Editor>  </div></template><script>import { provide, ref } from "vue";// 编辑器的设置和代码块的数据import data from "./data.json";import Editor from "./package/editor";import { registerConfig as config } from "./utils/editor-config";export default {    components: {    Editor,  },  setup() {    // console.log(data);    const state = ref(data);    // console.log(state.value);    // 暴露组件(物料)的配置    provide("config", config);    return { state };  },};</script><style lang="scss" scoped>.app {  position: fixed;  top: 20px;  left: 20px;  right: 20px;  bottom: 20px;}</style> </code></pre><h2 id="data-json"><a href="#data-json" class="headerlink" title="data.json"></a>data.json</h2><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"container"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"width"</span><span class="token operator">:</span> <span class="token number">550</span><span class="token punctuation">,</span>        <span class="token property">"height"</span><span class="token operator">:</span> <span class="token number">550</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"blocks"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span>            <span class="token property">"top"</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>            <span class="token property">"left"</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>            <span class="token property">"zIndex"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"key"</span><span class="token operator">:</span> <span class="token string">"text"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"top"</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>            <span class="token property">"left"</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>            <span class="token property">"zIndex"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"key"</span><span class="token operator">:</span> <span class="token string">"button"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"top"</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>            <span class="token property">"left"</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>            <span class="token property">"zIndex"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>            <span class="token property">"key"</span><span class="token operator">:</span> <span class="token string">"input"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><h2 id="main-js"><a href="#main-js" class="headerlink" title="main.js"></a>main.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App.vue'</span> <span class="token keyword">import</span> ElementPlus <span class="token keyword">from</span> <span class="token string">'element-plus'</span><span class="token keyword">import</span> <span class="token string">'element-plus/dist/index.css'</span><span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElementPlus<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span> </code></pre><h1 id="拖拽的实现"><a href="#拖拽的实现" class="headerlink" title="拖拽的实现"></a>拖拽的实现</h1><blockquote><p>drag,h5提供的</p></blockquote><pre class=" language-shell"><code class="language-shell"># 用于深度拷贝 yarn add deepcopy --registry=https://registry.npmmirror.com</code></pre><p><img src="img_4.png" alt="vue3语法糖"></p><h2 id="package-1"><a href="#package-1" class="headerlink" title="package"></a>package</h2><h3 id="editor-block-jsx-1"><a href="#editor-block-jsx-1" class="headerlink" title="editor-block.jsx"></a>editor-block.jsx</h3><pre class=" language-jsx"><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> computed<span class="token punctuation">,</span> defineComponent<span class="token punctuation">,</span> inject<span class="token punctuation">,</span> onMounted<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  props<span class="token punctuation">:</span> <span class="token punctuation">{</span>    block<span class="token punctuation">:</span> <span class="token punctuation">{</span> type<span class="token punctuation">:</span> Object <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">setup</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> blockStyles <span class="token operator">=</span> <span class="token operator">...</span>    <span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token function">inject</span><span class="token punctuation">(</span><span class="token string">"config"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// console.log(config);</span>    <span class="token keyword">const</span> blockRef <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// new -> 拖拽释放后居中</span>    <span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// 拖拽放入时,获取该元素</span>      <span class="token comment" spellcheck="true">// console.log(blockRef.value);</span>      <span class="token keyword">let</span> <span class="token punctuation">{</span> offsetWidth<span class="token punctuation">,</span> offsetHeight <span class="token punctuation">}</span> <span class="token operator">=</span> blockRef<span class="token punctuation">.</span>value<span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// 有这个属性,说明是拖拽松手放置的,要居中(渲染后鼠标在这个组件正中间)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>props<span class="token punctuation">.</span>block<span class="token punctuation">.</span>alignCenter<span class="token punctuation">)</span> <span class="token punctuation">{</span>        props<span class="token punctuation">.</span>block<span class="token punctuation">.</span>left <span class="token operator">=</span> props<span class="token punctuation">.</span>block<span class="token punctuation">.</span>left <span class="token operator">-</span> offsetWidth <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>        props<span class="token punctuation">.</span>block<span class="token punctuation">.</span>top <span class="token operator">=</span> props<span class="token punctuation">.</span>block<span class="token punctuation">.</span>top <span class="token operator">-</span> offsetHeight <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>        props<span class="token punctuation">.</span>block<span class="token punctuation">.</span>alignCenter <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// new </span>    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// ......</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre><h3 id="editor-jsx-1"><a href="#editor-jsx-1" class="headerlink" title="editor.jsx"></a>editor.jsx</h3><pre class=" language-jsx"><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> computed<span class="token punctuation">,</span> defineComponent<span class="token punctuation">,</span> inject<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"./editor.scss"</span><span class="token punctuation">;</span><span class="token keyword">import</span> EditorBlock <span class="token keyword">from</span> <span class="token string">"./editor-block"</span><span class="token punctuation">;</span><span class="token keyword">import</span> deepcopy <span class="token keyword">from</span> <span class="token string">"deepcopy"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">{</span> useMenuDrager <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./useMenuDragger"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">{</span> useFocus <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./useFocus"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">{</span> useBlockDragger <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./useBlockDragger"</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  props<span class="token punctuation">:</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 接收父级传来的数据</span>    <span class="token comment" spellcheck="true">// v-model是语法糖,其传进来的props名称就是modelValue</span>    <span class="token comment" spellcheck="true">// &lt;input modelValue="xxx" @change="xxx" /></span>    modelValue<span class="token punctuation">:</span> <span class="token punctuation">{</span> type<span class="token punctuation">:</span> Object <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  emits<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"update:modelValue"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 要触发的事件</span>  <span class="token function">setup</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> ctx<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> props<span class="token punctuation">.</span>modelValue<span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token keyword">set</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"set"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// console.log(newValue);</span>        <span class="token comment" spellcheck="true">// 触发事件更新数据,(v-model语法糖提供的)</span>        ctx<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">"update:modelValue"</span><span class="token punctuation">,</span> <span class="token function">deepcopy</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// console.log(props.data);</span>    <span class="token comment" spellcheck="true">// console.log(props.modelValue);</span>    <span class="token comment" spellcheck="true">// console.log(data.value);</span>    <span class="token keyword">const</span> containerStyles <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>      width<span class="token punctuation">:</span> data<span class="token punctuation">.</span>value<span class="token punctuation">.</span>container<span class="token punctuation">.</span>width <span class="token operator">+</span> <span class="token string">"px"</span><span class="token punctuation">,</span>      height<span class="token punctuation">:</span> data<span class="token punctuation">.</span>value<span class="token punctuation">.</span>container<span class="token punctuation">.</span>height <span class="token operator">+</span> <span class="token string">"px"</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token function">inject</span><span class="token punctuation">(</span><span class="token string">"config"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> containerRef <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 获取内容区域对应的dom元素</span>    <span class="token comment" spellcheck="true">// 1,实现菜单拖拽功能</span>    <span class="token keyword">const</span> <span class="token punctuation">{</span> dragstart<span class="token punctuation">,</span> dragend <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useMenuDrager</span><span class="token punctuation">(</span>containerRef<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 2,实现获取焦点</span>    <span class="token comment" spellcheck="true">// 实现组件拖拽</span>    <span class="token keyword">let</span> <span class="token punctuation">{</span> blockMousedown<span class="token punctuation">,</span> focusData <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useFocus</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// 有可能选中后直接进行拖拽</span>      <span class="token comment" spellcheck="true">// console.log(focusData.value.focus);</span>      <span class="token function">mousedown</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 3,实现拖拽多个元素的功能</span>    <span class="token keyword">let</span> <span class="token punctuation">{</span> mousedown <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useBlockDragger</span><span class="token punctuation">(</span>focusData<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 收集获取和没有获取焦点的组件(block)</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editor<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editor-left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* 根据注册列表,渲染物料区,可以实现h5的拖拽 */</span><span class="token punctuation">}</span>          <span class="token punctuation">{</span>config<span class="token punctuation">.</span>componentList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>            <span class="token operator">&lt;</span>div              draggable              <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"editor-left-item"</span>              onDrag<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">dragstart</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> component<span class="token punctuation">)</span><span class="token punctuation">}</span>              <span class="token comment" spellcheck="true">// onDragEnd={dragend} 原生的无法绑定,不知道为啥</span>            <span class="token operator">></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>component<span class="token punctuation">.</span>label<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>component<span class="token punctuation">.</span><span class="token function">preview</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editor-top<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>菜单栏<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editor-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>属性控制栏<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editor-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* 负责产生滚动条 */</span><span class="token punctuation">}</span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>editor-container-canvas<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* 产生内容区域 */</span><span class="token punctuation">}</span>            <span class="token operator">&lt;</span>div              <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"editor-container-canvas__content"</span>              ref<span class="token operator">=</span><span class="token punctuation">{</span>containerRef<span class="token punctuation">}</span>              style<span class="token operator">=</span><span class="token punctuation">{</span>containerStyles<span class="token punctuation">.</span>value<span class="token punctuation">}</span>              <span class="token comment" spellcheck="true">// 点击组件以外的内容区,可以把focus取消</span>              <span class="token comment" spellcheck="true">// onMouseDown={containerMouseDown}</span>            <span class="token operator">></span>              <span class="token punctuation">{</span>data<span class="token punctuation">.</span>value<span class="token punctuation">.</span>blocks<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>                <span class="token operator">&lt;</span>EditorBlock                  <span class="token keyword">class</span><span class="token operator">=</span><span class="token punctuation">{</span>block<span class="token punctuation">.</span>focus <span class="token operator">?</span> <span class="token string">"editor-block-focus"</span> <span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">}</span> <span class="token comment" spellcheck="true">// focus的话需要添加样式</span>                  block<span class="token operator">=</span><span class="token punctuation">{</span>block<span class="token punctuation">}</span>                  onMousedown<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">blockMousedown</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> block<span class="token punctuation">)</span><span class="token punctuation">}</span>                <span class="token operator">></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EditorBlock</span><span class="token punctuation">></span></span>              <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre><h3 id="editor-scss-1"><a href="#editor-scss-1" class="headerlink" title="editor.scss"></a>editor.scss</h3><pre class=" language-scss"><code class="language-scss"><span class="token selector">.editor </span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//......</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 添加一个伪类</span><span class="token selector">.editor-block </span><span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 防止被选中</span>    <span class="token selector"><span class="token parent important">&amp;</span>::after </span><span class="token punctuation">{</span>        <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token selector">.editor-block-focus </span><span class="token punctuation">{</span>    <span class="token selector"><span class="token parent important">&amp;</span>::after </span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 虚线</span>        <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">3</span>px dashed red<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="useBlockDragger-js"><a href="#useBlockDragger-js" class="headerlink" title="useBlockDragger.js"></a>useBlockDragger.js</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">useBlockDragger</span><span class="token punctuation">(</span>focusData<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 记录起始位置</span>    <span class="token keyword">let</span> dragState <span class="token operator">=</span> <span class="token punctuation">{</span>        startX<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        startY<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> mouseup <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        document<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">"mousemove"</span><span class="token punctuation">,</span> mousemove<span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">"mouseup"</span><span class="token punctuation">,</span> mouseup<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> mousemove <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 获取移动后的距离</span>        <span class="token keyword">let</span> <span class="token punctuation">{</span> clientX<span class="token punctuation">:</span> moveX<span class="token punctuation">,</span> clientY<span class="token punctuation">:</span> moveY <span class="token punctuation">}</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>        <span class="token keyword">let</span> durX <span class="token operator">=</span> moveX <span class="token operator">-</span> dragState<span class="token punctuation">.</span>startX<span class="token punctuation">;</span>        <span class="token keyword">let</span> durY <span class="token operator">=</span> moveY <span class="token operator">-</span> dragState<span class="token punctuation">.</span>startY<span class="token punctuation">;</span>        focusData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>focus<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>block<span class="token punctuation">,</span> idx<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            block<span class="token punctuation">.</span>top <span class="token operator">=</span> dragState<span class="token punctuation">.</span>startPos<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">.</span>top <span class="token operator">+</span> durY<span class="token punctuation">;</span>            block<span class="token punctuation">.</span>left <span class="token operator">=</span> dragState<span class="token punctuation">.</span>startPos<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">.</span>left <span class="token operator">+</span> durX<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> mousedown <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        dragState <span class="token operator">=</span> <span class="token punctuation">{</span>            startX<span class="token punctuation">:</span> e<span class="token punctuation">.</span>clientX<span class="token punctuation">,</span>            startY<span class="token punctuation">:</span> e<span class="token punctuation">.</span>clientY<span class="token punctuation">,</span>            <span class="token comment" spellcheck="true">// 记录每一个选中的位置</span>            startPos<span class="token punctuation">:</span> focusData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>focus<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> top<span class="token punctuation">,</span> left <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token punctuation">{</span> top<span class="token punctuation">,</span> left <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"mousemove"</span><span class="token punctuation">,</span> mousemove<span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"mouseup"</span><span class="token punctuation">,</span> mouseup<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>        mousedown    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="useFocus-js"><a href="#useFocus-js" class="headerlink" title="useFocus.js"></a>useFocus.js</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> computed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">useFocus</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 获取哪些元素被选中</span>  <span class="token keyword">const</span> focusData <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> focus <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> unfocused <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    data<span class="token punctuation">.</span>value<span class="token punctuation">.</span>blocks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span>      <span class="token punctuation">(</span>block<span class="token punctuation">.</span>focus <span class="token operator">?</span> focus <span class="token punctuation">:</span> unfocused<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      focus<span class="token punctuation">,</span>      unfocused<span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> clearBlockFocus <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    data<span class="token punctuation">.</span>value<span class="token punctuation">.</span>blocks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>block<span class="token punctuation">.</span>focus <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// Mousedown事件仅需要按键被按下，而不需要松开即可发生</span>  <span class="token keyword">const</span> blockMousedown <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">,</span> block<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    e<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// block上我们定义一个属性focus,获取焦点后就将focus变为true</span>    <span class="token comment" spellcheck="true">// 如果是按住shift的情况,就可以多选</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>shiftKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>      block<span class="token punctuation">.</span>focus <span class="token operator">=</span> <span class="token operator">!</span>block<span class="token punctuation">.</span>focus<span class="token punctuation">;</span>      <span class="token function">callback</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>block<span class="token punctuation">.</span>focus<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">clearBlockFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      block<span class="token punctuation">.</span>focus <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 要清空其他block的focus,实现单选</span>      <span class="token function">callback</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    block<span class="token punctuation">.</span>focus <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token function">callback</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> containerMouseDown <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token function">clearBlockFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 点击容器,让选中的block失去焦点</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 不知道为啥直接onxxxx绑定失效了</span>  Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    document      <span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">".editor-container-canvas__content"</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"mousedown"</span><span class="token punctuation">,</span> containerMouseDown<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    blockMousedown<span class="token punctuation">,</span>    focusData<span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span> </code></pre><h3 id="useMenuDragger-js"><a href="#useMenuDragger-js" class="headerlink" title="useMenuDragger.js"></a>useMenuDragger.js</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">useMenuDrager</span><span class="token punctuation">(</span>containerRef<span class="token punctuation">,</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">let</span> currentComponent <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 记录拖拽的组件,drop时渲染</span>  <span class="token keyword">const</span> dragenter <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"enter"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 该属性控制在拖放操作中给用户的反馈（通常是视觉上的）。它会影响在拖拽过程中光标的手势</span>    e<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span>dropEffect <span class="token operator">=</span> <span class="token string">"move"</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> dragover <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// !!!</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"over"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> dragleave <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"leave"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    e<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span>dropEffect <span class="token operator">=</span> <span class="token string">"none"</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> drop <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"drop"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> blocks <span class="token operator">=</span> data<span class="token punctuation">.</span>value<span class="token punctuation">.</span>blocks<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 内部已经渲染的组件</span>    <span class="token comment" spellcheck="true">// console.log(data.value);</span>    <span class="token comment" spellcheck="true">// 更新组件的属性</span>    data<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token punctuation">{</span>      <span class="token operator">...</span>data<span class="token punctuation">.</span>value<span class="token punctuation">,</span>      blocks<span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token operator">...</span>blocks<span class="token punctuation">,</span>        <span class="token punctuation">{</span>          top<span class="token punctuation">:</span> e<span class="token punctuation">.</span>offsetY<span class="token punctuation">,</span>          left<span class="token punctuation">:</span> e<span class="token punctuation">.</span>offsetX<span class="token punctuation">,</span>          zIndex<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>          key<span class="token punctuation">:</span> currentComponent<span class="token punctuation">.</span>key<span class="token punctuation">,</span>          alignCenter<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 松手时居中</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    currentComponent <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> dragstart <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">,</span> component<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// dragenter进入元素,添加移动标识</span>    <span class="token comment" spellcheck="true">// dragover经过元素,要阻止默认行为,负责不能触发drop</span>    <span class="token comment" spellcheck="true">// dragleave离开元素,增加禁用标识</span>    <span class="token comment" spellcheck="true">// drop松手时,根据拖拽的组件添加到内容区</span>    <span class="token comment" spellcheck="true">// console.log(containerRef.value);</span>    <span class="token comment" spellcheck="true">// e.dataTransfer.dropEffect = "move";</span>    containerRef<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"dragover"</span><span class="token punctuation">,</span> dragover<span class="token punctuation">)</span><span class="token punctuation">;</span>    containerRef<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"dragenter"</span><span class="token punctuation">,</span> dragenter<span class="token punctuation">)</span><span class="token punctuation">;</span>    containerRef<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"dragleave"</span><span class="token punctuation">,</span> dragleave<span class="token punctuation">)</span><span class="token punctuation">;</span>    containerRef<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"drop"</span><span class="token punctuation">,</span> drop<span class="token punctuation">)</span><span class="token punctuation">;</span>    currentComponent <span class="token operator">=</span> component<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    document      <span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">".editor-left-item"</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"dragend"</span><span class="token punctuation">,</span> dragend<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 拖拽结束,清理事件</span>  <span class="token keyword">const</span> dragend <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"end! remove listener"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    containerRef<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">"dragover"</span><span class="token punctuation">,</span> dragover<span class="token punctuation">)</span><span class="token punctuation">;</span>    containerRef<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">"dragenter"</span><span class="token punctuation">,</span> dragenter<span class="token punctuation">)</span><span class="token punctuation">;</span>    containerRef<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">"dragleave"</span><span class="token punctuation">,</span> dragleave<span class="token punctuation">)</span><span class="token punctuation">;</span>    containerRef<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">"drop"</span><span class="token punctuation">,</span> drop<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    dragstart<span class="token punctuation">,</span>    dragend<span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span> </code></pre><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p><img src="img_5.png" alt="img_5.png"></p><h1 id="实现拖动的辅助线效果"><a href="#实现拖动的辅助线效果" class="headerlink" title="实现拖动的辅助线效果"></a>实现拖动的辅助线效果</h1><p><img src="img_6.png" alt="img_6.png"><img src="img_7.png" alt="img_7.png"></p><h2 id="useBlockDragger-js-1"><a href="#useBlockDragger-js-1" class="headerlink" title="useBlockDragger.js"></a>useBlockDragger.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span> <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">useBlockDragger</span><span class="token punctuation">(</span>focusData<span class="token punctuation">,</span> lastSelectBlock<span class="token punctuation">,</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 记录起始位置</span>    <span class="token keyword">let</span> dragState <span class="token operator">=</span> <span class="token punctuation">{</span>        startX<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        startY<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 响应式,让x,y双向绑定</span>    <span class="token keyword">let</span> markline <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        x<span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>        y<span class="token punctuation">:</span> <span class="token keyword">null</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">const</span> mouseup <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        document<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">"mousemove"</span><span class="token punctuation">,</span> mousemove<span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">"mouseup"</span><span class="token punctuation">,</span> mouseup<span class="token punctuation">)</span><span class="token punctuation">;</span>        markline<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token keyword">null</span>        markline<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token keyword">null</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> mousemove <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 获取移动后的距离</span>        <span class="token keyword">let</span> <span class="token punctuation">{</span> clientX<span class="token punctuation">:</span> moveX<span class="token punctuation">,</span> clientY<span class="token punctuation">:</span> moveY <span class="token punctuation">}</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 计算最新的left和top,去lines里找要显示的线</span>        <span class="token comment" spellcheck="true">// 鼠标移动后 - 鼠标移动前 + left</span>        <span class="token keyword">let</span> left <span class="token operator">=</span> moveX <span class="token operator">-</span> dragState<span class="token punctuation">.</span>startX <span class="token operator">+</span> dragState<span class="token punctuation">.</span>startLeft        <span class="token keyword">let</span> top <span class="token operator">=</span> moveY <span class="token operator">-</span> dragState<span class="token punctuation">.</span>startY <span class="token operator">+</span> dragState<span class="token punctuation">.</span>startTop        <span class="token comment" spellcheck="true">// 计算线 距离参照物还有5px就显示</span>        <span class="token keyword">let</span> x<span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token keyword">null</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> dragState<span class="token punctuation">.</span>lines<span class="token punctuation">.</span>y<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">const</span> <span class="token punctuation">{</span> top<span class="token punctuation">:</span> t<span class="token punctuation">,</span> showTop<span class="token punctuation">:</span> s <span class="token punctuation">}</span> <span class="token operator">=</span> dragState<span class="token punctuation">.</span>lines<span class="token punctuation">.</span>y<span class="token punctuation">[</span>i<span class="token punctuation">]</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>t <span class="token operator">-</span> top<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                y <span class="token operator">=</span> s <span class="token comment" spellcheck="true">// 线要显示的位置</span>                <span class="token comment" spellcheck="true">// 实现快速贴合</span>                <span class="token comment" spellcheck="true">// 容器距离顶部的距离+目标高度</span>                moveY <span class="token operator">=</span> dragState<span class="token punctuation">.</span>startY <span class="token operator">-</span> dragState<span class="token punctuation">.</span>startTop <span class="token operator">+</span> t                <span class="token keyword">break</span> <span class="token comment" spellcheck="true">// 找到一根线就跳出循环   </span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> dragState<span class="token punctuation">.</span>lines<span class="token punctuation">.</span>x<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">const</span> <span class="token punctuation">{</span> left<span class="token punctuation">:</span> l<span class="token punctuation">,</span> showLeft<span class="token punctuation">:</span> s <span class="token punctuation">}</span> <span class="token operator">=</span> dragState<span class="token punctuation">.</span>lines<span class="token punctuation">.</span>x<span class="token punctuation">[</span>i<span class="token punctuation">]</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>l <span class="token operator">-</span> left<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                x <span class="token operator">=</span> s <span class="token comment" spellcheck="true">// 线要显示的位置</span>                <span class="token comment" spellcheck="true">// 实现快速贴合</span>                <span class="token comment" spellcheck="true">// 容器距离顶部的距离+目标高度</span>                moveX <span class="token operator">=</span> dragState<span class="token punctuation">.</span>startX <span class="token operator">-</span> dragState<span class="token punctuation">.</span>startLeft <span class="token operator">+</span> l                <span class="token keyword">break</span> <span class="token comment" spellcheck="true">// 找到一根线就跳出循环   </span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 实现视图更新</span>        markline<span class="token punctuation">.</span>x <span class="token operator">=</span> x        markline<span class="token punctuation">.</span>y <span class="token operator">=</span> y        <span class="token comment" spellcheck="true">// .....</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> mousedown <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 获取宽高</span>        <span class="token keyword">const</span> <span class="token punctuation">{</span> width<span class="token punctuation">:</span> BWidth<span class="token punctuation">,</span> height<span class="token punctuation">:</span> BHeight <span class="token punctuation">}</span> <span class="token operator">=</span> lastSelectBlock<span class="token punctuation">.</span>value <span class="token comment" spellcheck="true">// 拖拽的最后一个元素</span>        dragState <span class="token operator">=</span> <span class="token punctuation">{</span>            startX<span class="token punctuation">:</span> e<span class="token punctuation">.</span>clientX<span class="token punctuation">,</span>            startY<span class="token punctuation">:</span> e<span class="token punctuation">.</span>clientY<span class="token punctuation">,</span>            startTop<span class="token punctuation">:</span> lastSelectBlock<span class="token punctuation">.</span>value<span class="token punctuation">.</span>top<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 拖拽前的位置    </span>            startLeft<span class="token punctuation">:</span> lastSelectBlock<span class="token punctuation">.</span>value<span class="token punctuation">.</span>left<span class="token punctuation">,</span>            <span class="token comment" spellcheck="true">// 记录每一个选中的位置</span>            startPos<span class="token punctuation">:</span> focusData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>focus<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> top<span class="token punctuation">,</span> left <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token punctuation">{</span> top<span class="token punctuation">,</span> left <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            lines<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>                <span class="token keyword">const</span> <span class="token punctuation">{</span> unfocused <span class="token punctuation">}</span> <span class="token operator">=</span> focusData<span class="token punctuation">.</span>value <span class="token comment" spellcheck="true">// 获取其他没选中的,以它们的位置做辅助</span>                <span class="token keyword">let</span> lines <span class="token operator">=</span> <span class="token punctuation">{</span> x<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token comment" spellcheck="true">// 计算横线的位置用y存放 x存纵向</span>                unfocused<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                    top<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                    left<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                    width<span class="token punctuation">:</span> data<span class="token punctuation">.</span>value<span class="token punctuation">.</span>container<span class="token punctuation">.</span>width<span class="token punctuation">,</span>                    height<span class="token punctuation">:</span> data<span class="token punctuation">.</span>value<span class="token punctuation">.</span>container<span class="token punctuation">.</span>height                <span class="token punctuation">}</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// console.log(unfocused)</span>                unfocused<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>                    <span class="token keyword">const</span> <span class="token punctuation">{</span> top<span class="token punctuation">:</span> ATop<span class="token punctuation">,</span> left<span class="token punctuation">:</span> ALeft<span class="token punctuation">,</span> width<span class="token punctuation">:</span> AWidth<span class="token punctuation">,</span> height<span class="token punctuation">:</span> AHeight <span class="token punctuation">}</span> <span class="token operator">=</span> block                    <span class="token comment" spellcheck="true">// 当此元素拖动到A元素和top一致时,要显示这辅助线,辅助线的位置就是ATop</span>                    lines<span class="token punctuation">.</span>y<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> showTop<span class="token punctuation">:</span> ATop<span class="token punctuation">,</span> top<span class="token punctuation">:</span> ATop <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 顶对顶</span>                    lines<span class="token punctuation">.</span>y<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> showTop<span class="token punctuation">:</span> ATop<span class="token punctuation">,</span> top<span class="token punctuation">:</span> ATop <span class="token operator">-</span> BHeight <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 顶对底</span>                    lines<span class="token punctuation">.</span>y<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> showTop<span class="token punctuation">:</span> ATop <span class="token operator">+</span> AHeight <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> top<span class="token punctuation">:</span> ATop <span class="token operator">-</span> BHeight <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 中对中</span>                    lines<span class="token punctuation">.</span>y<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> showTop<span class="token punctuation">:</span> ATop <span class="token operator">+</span> AHeight<span class="token punctuation">,</span> top<span class="token punctuation">:</span> ATop <span class="token operator">+</span> AHeight <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 底对顶</span>                    lines<span class="token punctuation">.</span>y<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> showTop<span class="token punctuation">:</span> ATop <span class="token operator">+</span> AHeight<span class="token punctuation">,</span> top<span class="token punctuation">:</span> ATop <span class="token operator">+</span> AHeight <span class="token operator">+</span> BHeight <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 底对底</span>                    lines<span class="token punctuation">.</span>x<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> showLeft<span class="token punctuation">:</span> ALeft<span class="token punctuation">,</span> left<span class="token punctuation">:</span> ALeft <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 左对左</span>                    lines<span class="token punctuation">.</span>x<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> showLeft<span class="token punctuation">:</span> ALeft <span class="token operator">+</span> AWidth<span class="token punctuation">,</span> left<span class="token punctuation">:</span> ALeft <span class="token operator">+</span> AWidth <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 右对左</span>                    lines<span class="token punctuation">.</span>x<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> showLeft<span class="token punctuation">:</span> ALeft <span class="token operator">+</span> AWidth <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> left<span class="token punctuation">:</span> ALeft <span class="token operator">+</span> AWidth <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> BWidth <span class="token operator">/</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 中对中</span>                    lines<span class="token punctuation">.</span>x<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> showLeft<span class="token punctuation">:</span> ALeft <span class="token operator">+</span> AWidth<span class="token punctuation">,</span> left<span class="token punctuation">:</span> ALeft <span class="token operator">+</span> AWidth <span class="token operator">-</span> BWidth <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 右对右</span>                    lines<span class="token punctuation">.</span>x<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> showLeft<span class="token punctuation">:</span> ALeft<span class="token punctuation">,</span> left<span class="token punctuation">:</span> ALeft <span class="token operator">+</span> AWidth <span class="token operator">-</span> BWidth <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 左对右</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// console.log(lines) </span>                <span class="token keyword">return</span> lines            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"mousemove"</span><span class="token punctuation">,</span> mousemove<span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"mouseup"</span><span class="token punctuation">,</span> mouseup<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>        mousedown<span class="token punctuation">,</span>        markline    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="useFocus-js-获取最后一个拖拽元素"><a href="#useFocus-js-获取最后一个拖拽元素" class="headerlink" title="useFocus.js 获取最后一个拖拽元素"></a>useFocus.js 获取最后一个拖拽元素</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> computed<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">useFocus</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> selectIndex <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 记录最后点击的组件的索引</span>  <span class="token keyword">const</span> lastSelectBlock <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> data<span class="token punctuation">.</span>value<span class="token punctuation">.</span>blocks<span class="token punctuation">[</span>selectIndex<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 最后点击的元素</span>  <span class="token comment" spellcheck="true">// 获取哪些元素被选中</span>  <span class="token keyword">const</span> focusData <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> focus <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> unfocused <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    data<span class="token punctuation">.</span>value<span class="token punctuation">.</span>blocks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span>      <span class="token punctuation">(</span>block<span class="token punctuation">.</span>focus <span class="token operator">?</span> focus <span class="token punctuation">:</span> unfocused<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      focus<span class="token punctuation">,</span>      unfocused<span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> clearBlockFocus <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    data<span class="token punctuation">.</span>value<span class="token punctuation">.</span>blocks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>block<span class="token punctuation">.</span>focus <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    selectIndex<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// Mousedown事件仅需要按键被按下，而不需要松开即可发生</span>  <span class="token keyword">const</span> blockMousedown <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">,</span> block<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    e<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// block上我们定义一个属性focus,获取焦点后就将focus变为true</span>    <span class="token comment" spellcheck="true">// 如果是按住shift的情况,就可以多选</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>shiftKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// 如果只有一个选中的block,每次点击时就不需要切换focus状态</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>focusData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>focus<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        block<span class="token punctuation">.</span>focus <span class="token operator">=</span> <span class="token boolean">true</span>        selectIndex<span class="token punctuation">.</span>value <span class="token operator">=</span> index        <span class="token function">callback</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span>      <span class="token punctuation">}</span>      block<span class="token punctuation">.</span>focus <span class="token operator">=</span> <span class="token operator">!</span>block<span class="token punctuation">.</span>focus<span class="token punctuation">;</span>      selectIndex<span class="token punctuation">.</span>value <span class="token operator">=</span> index      <span class="token function">callback</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>block<span class="token punctuation">.</span>focus<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">clearBlockFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      block<span class="token punctuation">.</span>focus <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 要清空其他block的focus,实现单选</span>      selectIndex<span class="token punctuation">.</span>value <span class="token operator">=</span> index      <span class="token function">callback</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// block.focus = false; // 已经被选中,则再次点击时还是选中状态</span>    selectIndex<span class="token punctuation">.</span>value <span class="token operator">=</span> index    <span class="token function">callback</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// .....</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    blockMousedown<span class="token punctuation">,</span>    focusData<span class="token punctuation">,</span>    lastSelectBlock  <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span> </code></pre><h2 id="editor-js"><a href="#editor-js" class="headerlink" title="editor.js"></a>editor.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> computed<span class="token punctuation">,</span> defineComponent<span class="token punctuation">,</span> inject<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"./editor.scss"</span><span class="token punctuation">;</span><span class="token keyword">import</span> EditorBlock <span class="token keyword">from</span> <span class="token string">"./editor-block"</span><span class="token punctuation">;</span><span class="token keyword">import</span> deepcopy <span class="token keyword">from</span> <span class="token string">"deepcopy"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">{</span> useMenuDrager <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./useMenuDragger"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">{</span> useFocus <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./useFocus"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">{</span> useBlockDragger <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./useBlockDragger"</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  props<span class="token punctuation">:</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 接收父级传来的数据</span>    <span class="token comment" spellcheck="true">// v-model是语法糖,其传进来的props名称就是modelValue</span>    <span class="token comment" spellcheck="true">// &lt;input modelValue="xxx" @change="xxx" /></span>    modelValue<span class="token punctuation">:</span> <span class="token punctuation">{</span> type<span class="token punctuation">:</span> Object <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  emits<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"update:modelValue"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 要触发的事件</span>  <span class="token function">setup</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> ctx<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> props<span class="token punctuation">.</span>modelValue<span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token keyword">set</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"set"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// console.log(newValue);</span>        <span class="token comment" spellcheck="true">// 触发事件更新数据,(v-model语法糖提供的)</span>        ctx<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">"update:modelValue"</span><span class="token punctuation">,</span> <span class="token function">deepcopy</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// console.log(props.data);</span>    <span class="token comment" spellcheck="true">// console.log(props.modelValue);</span>    <span class="token comment" spellcheck="true">// console.log(data.value);</span>    <span class="token keyword">const</span> containerStyles <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>      width<span class="token punctuation">:</span> data<span class="token punctuation">.</span>value<span class="token punctuation">.</span>container<span class="token punctuation">.</span>width <span class="token operator">+</span> <span class="token string">"px"</span><span class="token punctuation">,</span>      height<span class="token punctuation">:</span> data<span class="token punctuation">.</span>value<span class="token punctuation">.</span>container<span class="token punctuation">.</span>height <span class="token operator">+</span> <span class="token string">"px"</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token function">inject</span><span class="token punctuation">(</span><span class="token string">"config"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> containerRef <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 获取内容区域对应的dom元素</span>    <span class="token comment" spellcheck="true">// 1,实现菜单拖拽功能</span>    <span class="token keyword">const</span> <span class="token punctuation">{</span> dragstart<span class="token punctuation">,</span> dragend <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useMenuDrager</span><span class="token punctuation">(</span>containerRef<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 2,实现获取焦点</span>    <span class="token comment" spellcheck="true">// 实现组件拖拽</span>    <span class="token keyword">let</span> <span class="token punctuation">{</span> blockMousedown<span class="token punctuation">,</span> focusData<span class="token punctuation">,</span> lastSelectBlock <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useFocus</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// 有可能选中后直接进行拖拽</span>      <span class="token comment" spellcheck="true">// console.log(focusData.value.focus);</span>      <span class="token function">mousedown</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 3,实现拖拽多个元素的功能</span>    <span class="token keyword">let</span> <span class="token punctuation">{</span> mousedown<span class="token punctuation">,</span> markline <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useBlockDragger</span><span class="token punctuation">(</span>      focusData<span class="token punctuation">,</span>      lastSelectBlock<span class="token punctuation">,</span>      data    <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 收集获取和没有获取焦点的组件(block)</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"editor"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"editor-left"</span><span class="token operator">></span>          <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* 根据注册列表,渲染物料区,可以实现h5的拖拽 */</span><span class="token punctuation">}</span>          <span class="token punctuation">{</span>config<span class="token punctuation">.</span>componentList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>            <span class="token operator">&lt;</span>div              draggable              <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"editor-left-item"</span>              onDrag<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">dragstart</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> component<span class="token punctuation">)</span><span class="token punctuation">}</span>              <span class="token comment" spellcheck="true">// onDragEnd={dragend} 原生的无法绑定,不知道为啥</span>            <span class="token operator">></span>              <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token punctuation">{</span>component<span class="token punctuation">.</span>label<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>              <span class="token operator">&lt;</span>div<span class="token operator">></span><span class="token punctuation">{</span>component<span class="token punctuation">.</span><span class="token function">preview</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"editor-top"</span><span class="token operator">></span>菜单栏<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"editor-right"</span><span class="token operator">></span>属性控制栏<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"editor-container"</span><span class="token operator">></span>          <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* 负责产生滚动条 */</span><span class="token punctuation">}</span>          <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"editor-container-canvas"</span><span class="token operator">></span>            <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* 产生内容区域 */</span><span class="token punctuation">}</span>            <span class="token operator">&lt;</span>div              <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"editor-container-canvas__content"</span>              ref<span class="token operator">=</span><span class="token punctuation">{</span>containerRef<span class="token punctuation">}</span>              style<span class="token operator">=</span><span class="token punctuation">{</span>containerStyles<span class="token punctuation">.</span>value<span class="token punctuation">}</span>              <span class="token comment" spellcheck="true">// 点击组件以外的内容区,可以把focus取消</span>              <span class="token comment" spellcheck="true">// onMouseDown={containerMouseDown}</span>            <span class="token operator">></span>              <span class="token punctuation">{</span>data<span class="token punctuation">.</span>value<span class="token punctuation">.</span>blocks<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>block<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>                <span class="token operator">&lt;</span>EditorBlock                  <span class="token keyword">class</span><span class="token operator">=</span><span class="token punctuation">{</span>block<span class="token punctuation">.</span>focus <span class="token operator">?</span> <span class="token string">"editor-block-focus"</span> <span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">}</span> <span class="token comment" spellcheck="true">// focus的话需要添加样式</span>                  block<span class="token operator">=</span><span class="token punctuation">{</span>block<span class="token punctuation">}</span>                  onMousedown<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">blockMousedown</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> block<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">}</span>                <span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>EditorBlock<span class="token operator">></span>              <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>              <span class="token punctuation">{</span>markline<span class="token punctuation">.</span>x <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"line-x"</span> style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> left<span class="token punctuation">:</span> markline<span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token string">"px"</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>              <span class="token punctuation">)</span><span class="token punctuation">}</span>              <span class="token punctuation">{</span>markline<span class="token punctuation">.</span>y <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"line-y"</span> style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> top<span class="token punctuation">:</span> markline<span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token string">"px"</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>              <span class="token punctuation">)</span><span class="token punctuation">}</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="scss"><a href="#scss" class="headerlink" title="scss"></a>scss</h2><pre class=" language-scss"><code class="language-scss"><span class="token selector">.line-x </span><span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">border-left</span><span class="token punctuation">:</span> <span class="token number">1</span>px dashed red<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.line-y </span><span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">1</span>px dashed red<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 前端 </tag>
            
            <tag> 造轮子 </tag>
            
            <tag> 框架 </tag>
            
            <tag> javaScript </tag>
            
            <tag> vue </tag>
            
            <tag> 低代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>flutter简易聊天页面</title>
      <link href="/2023/02/06/frontend/flutter/ytb/socketio-flutter/"/>
      <url>/2023/02/06/frontend/flutter/ytb/socketio-flutter/</url>
      
        <content type="html"><![CDATA[<h1 id="首页home-page"><a href="#首页home-page" class="headerlink" title="首页home_page"></a>首页home_page</h1><pre class=" language-dart"><code class="language-dart"><span class="token keyword">import</span> <span class="token string">'package:fchatapp/src/pages/group/group_page.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:uuid/uuid.dart'</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">HomePage</span> <span class="token keyword">extends</span> <span class="token class-name">StatefulWidget</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> <span class="token function">HomePage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>Key<span class="token operator">?</span> key<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token metadata symbol">@override</span>  State<span class="token operator">&lt;</span>HomePage<span class="token operator">></span> <span class="token function">createState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">_HomePageState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">_HomePageState</span> <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token operator">&lt;</span>HomePage<span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 输入框控制器</span>  TextEditingController nameController <span class="token operator">=</span> <span class="token function">TextEditingController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// form的key</span>  <span class="token keyword">final</span> formKey <span class="token operator">=</span> GlobalKey<span class="token operator">&lt;</span>FormState<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// user唯一标识</span>  <span class="token keyword">var</span> uuid <span class="token operator">=</span> <span class="token function">Uuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token metadata symbol">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>      appBar<span class="token punctuation">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>        centerTitle<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        title<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">'Group Chat App'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>      body<span class="token punctuation">:</span> <span class="token function">Center</span><span class="token punctuation">(</span>        child<span class="token punctuation">:</span> <span class="token function">TextButton</span><span class="token punctuation">(</span>          onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">showDialog</span><span class="token punctuation">(</span>            context<span class="token punctuation">:</span> context<span class="token punctuation">,</span>            builder<span class="token punctuation">:</span> <span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">AlertDialog</span><span class="token punctuation">(</span>              title<span class="token punctuation">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">'请输入你的昵称'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token comment" spellcheck="true">// 在form里才能触发校验</span>              content<span class="token punctuation">:</span> <span class="token function">Form</span><span class="token punctuation">(</span>                key<span class="token punctuation">:</span> formKey<span class="token punctuation">,</span>                child<span class="token punctuation">:</span> <span class="token function">TextFormField</span><span class="token punctuation">(</span>                  <span class="token comment" spellcheck="true">// 输入框</span>                  controller<span class="token punctuation">:</span> nameController<span class="token punctuation">,</span>                  <span class="token comment" spellcheck="true">// 校验</span>                  validator<span class="token punctuation">:</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> value<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                      <span class="token keyword">return</span> <span class="token string">'User must provide name(at least 3 char)'</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>                  <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">)</span><span class="token punctuation">,</span>              actions<span class="token punctuation">:</span> <span class="token punctuation">[</span>                <span class="token function">TextButton</span><span class="token punctuation">(</span>                  onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">// 清空表单</span>                    nameController<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">// 从navigation里弹出当前页(dialog)</span>                    Navigator<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token punctuation">}</span><span class="token punctuation">,</span>                  child<span class="token punctuation">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>                    <span class="token string">'取消'</span><span class="token punctuation">,</span>                    style<span class="token punctuation">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>                      fontSize<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">,</span>                      color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>green<span class="token punctuation">,</span>                    <span class="token punctuation">)</span><span class="token punctuation">,</span>                  <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token function">TextButton</span><span class="token punctuation">(</span>                  onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">// 如果校验不通过</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>formKey<span class="token punctuation">.</span>currentState<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                      <span class="token keyword">return</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    String name <span class="token operator">=</span> nameController<span class="token punctuation">.</span>text<span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">// 清空表单</span>                    nameController<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">// 关闭dialog(否则当从group_page返回时,dialog依然存在)</span>                    Navigator<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>                    Navigator<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>                      context<span class="token punctuation">,</span>                      <span class="token comment" spellcheck="true">// 跳转到group_page</span>                      <span class="token function">MaterialPageRoute</span><span class="token punctuation">(</span>                        builder<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">GroupPage</span><span class="token punctuation">(</span>                          name<span class="token punctuation">:</span> name<span class="token punctuation">,</span>                          userId<span class="token punctuation">:</span> uuid<span class="token punctuation">.</span><span class="token function">v1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        <span class="token punctuation">)</span><span class="token punctuation">,</span>                      <span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token punctuation">}</span><span class="token punctuation">,</span>                  child<span class="token punctuation">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>                    <span class="token string">'进入'</span><span class="token punctuation">,</span>                    style<span class="token punctuation">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>                      fontSize<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">,</span>                      color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>                    <span class="token punctuation">)</span><span class="token punctuation">,</span>                  <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>          child<span class="token punctuation">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>            <span class="token string">'进入聊天室'</span><span class="token punctuation">,</span>            style<span class="token punctuation">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>              color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>teal<span class="token punctuation">,</span>              fontSize<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h1 id="依赖-socketio-2-0-对应-node的socketio服务器-3-x和4-x"><a href="#依赖-socketio-2-0-对应-node的socketio服务器-3-x和4-x" class="headerlink" title="依赖(socketio 2.0 对应 node的socketio服务器 3.x和4.x)"></a>依赖(socketio 2.0 对应 node的socketio服务器 3.x和4.x)</h1><p><img src="1.png" alt="image.png"></p><h1 id="other-msg-widget-dart"><a href="#other-msg-widget-dart" class="headerlink" title="other_msg_widget.dart"></a>other_msg_widget.dart</h1><pre class=" language-dart"><code class="language-dart"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">OtherMsgWidget</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token keyword">final</span> String sender<span class="token punctuation">;</span>  <span class="token keyword">final</span> String msg<span class="token punctuation">;</span>  <span class="token keyword">const</span> <span class="token function">OtherMsgWidget</span><span class="token punctuation">(</span><span class="token punctuation">{</span>Key<span class="token operator">?</span> key<span class="token punctuation">,</span> required <span class="token keyword">this</span><span class="token punctuation">.</span>msg<span class="token punctuation">,</span> required <span class="token keyword">this</span><span class="token punctuation">.</span>sender<span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token punctuation">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token metadata symbol">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">Align</span><span class="token punctuation">(</span>      <span class="token comment" spellcheck="true">// 居于右下侧</span>      alignment<span class="token punctuation">:</span> Alignment<span class="token punctuation">.</span>bottomLeft<span class="token punctuation">,</span>      child<span class="token punctuation">:</span> <span class="token function">ConstrainedBox</span><span class="token punctuation">(</span>        constraints<span class="token punctuation">:</span> <span class="token function">BoxConstraints</span><span class="token punctuation">(</span>          <span class="token comment" spellcheck="true">// 当文字占满一行,让container不要占整个屏幕</span>          maxWidth<span class="token punctuation">:</span> MediaQuery<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span>size<span class="token punctuation">.</span>width <span class="token operator">-</span> <span class="token number">60</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>        child<span class="token punctuation">:</span> <span class="token function">Card</span><span class="token punctuation">(</span>          <span class="token comment" spellcheck="true">// 圆角边框</span>          shape<span class="token punctuation">:</span> <span class="token function">RoundedRectangleBorder</span><span class="token punctuation">(</span>            borderRadius<span class="token punctuation">:</span> BorderRadius<span class="token punctuation">.</span><span class="token function">circular</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>          color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>orange<span class="token punctuation">,</span>          child<span class="token punctuation">:</span> <span class="token function">Padding</span><span class="token punctuation">(</span>            padding<span class="token punctuation">:</span> <span class="token keyword">const</span> EdgeInsets<span class="token punctuation">.</span><span class="token function">symmetric</span><span class="token punctuation">(</span>horizontal<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span> vertical<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            child<span class="token punctuation">:</span> <span class="token function">Column</span><span class="token punctuation">(</span>              <span class="token comment" spellcheck="true">// 对齐</span>              mainAxisAlignment<span class="token punctuation">:</span> MainAxisAlignment<span class="token punctuation">.</span>start<span class="token punctuation">,</span>              crossAxisAlignment<span class="token punctuation">:</span> CrossAxisAlignment<span class="token punctuation">.</span>start<span class="token punctuation">,</span>              children<span class="token punctuation">:</span> <span class="token punctuation">[</span>                <span class="token comment" spellcheck="true">// 昵称</span>                <span class="token function">Text</span><span class="token punctuation">(</span>                  sender<span class="token punctuation">,</span>                  style<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>                    fontSize<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">,</span>                    fontWeight<span class="token punctuation">:</span> FontWeight<span class="token punctuation">.</span>bold<span class="token punctuation">,</span>                    color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>red<span class="token punctuation">,</span>                  <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token comment" spellcheck="true">// 间隔</span>                <span class="token keyword">const</span> <span class="token function">SizedBox</span><span class="token punctuation">(</span>                  height<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token comment" spellcheck="true">// 信息</span>                <span class="token function">Text</span><span class="token punctuation">(</span>                  msg<span class="token punctuation">,</span>                  style<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>                    fontSize<span class="token punctuation">:</span> <span class="token number">14</span><span class="token punctuation">,</span>                    fontWeight<span class="token punctuation">:</span> FontWeight<span class="token punctuation">.</span>bold<span class="token punctuation">,</span>                    color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>black<span class="token punctuation">,</span>                  <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h1 id="own-msg-widget-dart"><a href="#own-msg-widget-dart" class="headerlink" title="own_msg_widget.dart"></a>own_msg_widget.dart</h1><pre class=" language-dart"><code class="language-dart"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">OwnMsgWidget</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token keyword">final</span> String sender<span class="token punctuation">;</span>  <span class="token keyword">final</span> String msg<span class="token punctuation">;</span>  <span class="token keyword">const</span> <span class="token function">OwnMsgWidget</span><span class="token punctuation">(</span><span class="token punctuation">{</span>Key<span class="token operator">?</span> key<span class="token punctuation">,</span> required <span class="token keyword">this</span><span class="token punctuation">.</span>msg<span class="token punctuation">,</span> required <span class="token keyword">this</span><span class="token punctuation">.</span>sender<span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token punctuation">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token metadata symbol">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">Align</span><span class="token punctuation">(</span>      <span class="token comment" spellcheck="true">// 居于右下侧</span>      alignment<span class="token punctuation">:</span> Alignment<span class="token punctuation">.</span>bottomRight<span class="token punctuation">,</span>      child<span class="token punctuation">:</span> <span class="token function">ConstrainedBox</span><span class="token punctuation">(</span>        constraints<span class="token punctuation">:</span> <span class="token function">BoxConstraints</span><span class="token punctuation">(</span>          <span class="token comment" spellcheck="true">// 当文字占满一行,让container不要占整个屏幕</span>          maxWidth<span class="token punctuation">:</span> MediaQuery<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span>size<span class="token punctuation">.</span>width <span class="token operator">-</span> <span class="token number">60</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>        child<span class="token punctuation">:</span> <span class="token function">Card</span><span class="token punctuation">(</span>          <span class="token comment" spellcheck="true">// 圆角边框</span>          shape<span class="token punctuation">:</span> <span class="token function">RoundedRectangleBorder</span><span class="token punctuation">(</span>            borderRadius<span class="token punctuation">:</span> BorderRadius<span class="token punctuation">.</span><span class="token function">circular</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>          color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>teal<span class="token punctuation">,</span>          child<span class="token punctuation">:</span> <span class="token function">Padding</span><span class="token punctuation">(</span>            padding<span class="token punctuation">:</span> <span class="token keyword">const</span> EdgeInsets<span class="token punctuation">.</span><span class="token function">symmetric</span><span class="token punctuation">(</span>horizontal<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span> vertical<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            child<span class="token punctuation">:</span> <span class="token function">Column</span><span class="token punctuation">(</span>              <span class="token comment" spellcheck="true">// 对齐</span>              mainAxisAlignment<span class="token punctuation">:</span> MainAxisAlignment<span class="token punctuation">.</span>start<span class="token punctuation">,</span>              crossAxisAlignment<span class="token punctuation">:</span> CrossAxisAlignment<span class="token punctuation">.</span>start<span class="token punctuation">,</span>              children<span class="token punctuation">:</span> <span class="token punctuation">[</span>                <span class="token comment" spellcheck="true">// 昵称</span>                <span class="token function">Text</span><span class="token punctuation">(</span>                  sender<span class="token punctuation">,</span>                  style<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>                    fontSize<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">,</span>                    fontWeight<span class="token punctuation">:</span> FontWeight<span class="token punctuation">.</span>bold<span class="token punctuation">,</span>                    color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>yellow<span class="token punctuation">,</span>                  <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token comment" spellcheck="true">// 间隔</span>                <span class="token keyword">const</span> <span class="token function">SizedBox</span><span class="token punctuation">(</span>                  height<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token comment" spellcheck="true">// 信息</span>                <span class="token function">Text</span><span class="token punctuation">(</span>                  msg<span class="token punctuation">,</span>                  style<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>                    fontSize<span class="token punctuation">:</span> <span class="token number">14</span><span class="token punctuation">,</span>                    fontWeight<span class="token punctuation">:</span> FontWeight<span class="token punctuation">.</span>bold<span class="token punctuation">,</span>                    color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>white<span class="token punctuation">,</span>                  <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h1 id="group-page-dart"><a href="#group-page-dart" class="headerlink" title="group_page.dart"></a>group_page.dart</h1><pre class=" language-dart"><code class="language-dart"><span class="token keyword">import</span> <span class="token string">'package:fchatapp/src/foundation/msg_widget/other_msg_widget.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:fchatapp/src/foundation/msg_widget/own_msg_widget.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:fchatapp/src/pages/group/msg_model.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:socket_io_client/socket_io_client.dart'</span> <span class="token operator">as</span> IO<span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">GroupPage</span> <span class="token keyword">extends</span> <span class="token class-name">StatefulWidget</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 用户名称</span>  <span class="token keyword">final</span> String name<span class="token punctuation">;</span>  <span class="token keyword">final</span> String userId<span class="token punctuation">;</span>  <span class="token keyword">const</span> <span class="token function">GroupPage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>Key<span class="token operator">?</span> key<span class="token punctuation">,</span> required <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span> required <span class="token keyword">this</span><span class="token punctuation">.</span>userId<span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token punctuation">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token metadata symbol">@override</span>  State<span class="token operator">&lt;</span>GroupPage<span class="token operator">></span> <span class="token function">createState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">_GroupPageState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">_GroupPageState</span> <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token operator">&lt;</span>GroupPage<span class="token operator">></span> <span class="token punctuation">{</span>  IO<span class="token punctuation">.</span>Socket<span class="token operator">?</span> socket<span class="token punctuation">;</span>  List<span class="token operator">&lt;</span>MsgMoel<span class="token operator">></span> msgList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  TextEditingController _msgController <span class="token operator">=</span> <span class="token function">TextEditingController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 初始化时执行</span>  <span class="token metadata symbol">@override</span>  <span class="token keyword">void</span> <span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">void</span> <span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 本地测试,记得在同一个网络(热点/wifi)下</span>    socket <span class="token operator">=</span> IO<span class="token punctuation">.</span><span class="token function">io</span><span class="token punctuation">(</span><span class="token string">"http://192.168.2.228:3000"</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>String<span class="token punctuation">,</span> <span class="token keyword">dynamic</span><span class="token operator">></span><span class="token punctuation">{</span>      <span class="token string">'transports'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'websocket'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token string">'autoConnect'</span><span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    socket<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"we're here"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    socket<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">onConnect</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"connect"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      socket<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"broadcastMsg"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>model<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">print</span><span class="token punctuation">(</span>model<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 动态改变list,才能触发页面变化</span>        <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token comment" spellcheck="true">// 不是我们发的信息才添加到列表</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>model<span class="token punctuation">[</span><span class="token string">'userId'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> widget<span class="token punctuation">.</span>userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token comment" spellcheck="true">// 形参是动态类型(dynamic),不能直接作为msgModel加到list里</span>              msgList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>                <span class="token function">MsgMoel</span><span class="token punctuation">(</span>                  msg<span class="token punctuation">:</span> model<span class="token punctuation">[</span><span class="token string">'msg'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                  type<span class="token punctuation">:</span> model<span class="token punctuation">[</span><span class="token string">"type"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                  sender<span class="token punctuation">:</span> model<span class="token punctuation">[</span><span class="token string">'senderName'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// 通过服务器发送msg</span>  <span class="token keyword">void</span> <span class="token function">sendMsg</span><span class="token punctuation">(</span>String msg<span class="token punctuation">,</span> String senderName<span class="token punctuation">)</span> <span class="token punctuation">{</span>    MsgMoel ownMsg <span class="token operator">=</span> <span class="token function">MsgMoel</span><span class="token punctuation">(</span>msg<span class="token punctuation">:</span> msg<span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">"ownMsg"</span><span class="token punctuation">,</span> sender<span class="token punctuation">:</span> senderName<span class="token punctuation">)</span><span class="token punctuation">;</span>    msgList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>ownMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      msgList<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 触发msg事件</span>    socket<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span>      <span class="token string">'sendMsg'</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>        <span class="token string">"type"</span><span class="token punctuation">:</span> <span class="token string">"ownMsg"</span><span class="token punctuation">,</span>        <span class="token string">"msg"</span><span class="token punctuation">:</span> msg<span class="token punctuation">,</span>        <span class="token string">"senderName"</span><span class="token punctuation">:</span> senderName<span class="token punctuation">,</span>        <span class="token string">"userId"</span><span class="token punctuation">:</span> widget<span class="token punctuation">.</span>userId<span class="token punctuation">,</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token metadata symbol">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>      appBar<span class="token punctuation">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>        centerTitle<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        title<span class="token punctuation">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">'Anomynous Group'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>      body<span class="token punctuation">:</span> <span class="token function">Column</span><span class="token punctuation">(</span>        children<span class="token punctuation">:</span> <span class="token punctuation">[</span>          <span class="token comment" spellcheck="true">// Expanded占据所有剩余空间</span>          <span class="token function">Expanded</span><span class="token punctuation">(</span>            child<span class="token punctuation">:</span> ListView<span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span>              itemCount<span class="token punctuation">:</span> msgList<span class="token punctuation">.</span>length<span class="token punctuation">,</span>              itemBuilder<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>msgList<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>type <span class="token operator">==</span> <span class="token string">"ownMsg"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                  <span class="token keyword">return</span> <span class="token function">OwnMsgWidget</span><span class="token punctuation">(</span>                      msg<span class="token punctuation">:</span> msgList<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>msg<span class="token punctuation">,</span> sender<span class="token punctuation">:</span> msgList<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>sender<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                  <span class="token keyword">return</span> <span class="token function">OtherMsgWidget</span><span class="token punctuation">(</span>                      msg<span class="token punctuation">:</span> msgList<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>msg<span class="token punctuation">,</span> sender<span class="token punctuation">:</span> msgList<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>sender<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>              <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token function">Padding</span><span class="token punctuation">(</span>            padding<span class="token punctuation">:</span> <span class="token keyword">const</span> EdgeInsets<span class="token punctuation">.</span><span class="token function">symmetric</span><span class="token punctuation">(</span>horizontal<span class="token punctuation">:</span> <span class="token number">15</span><span class="token punctuation">,</span> vertical<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            child<span class="token punctuation">:</span> <span class="token function">Row</span><span class="token punctuation">(</span>              children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>                <span class="token comment" spellcheck="true">// Expanded占据所有剩余空间</span>                <span class="token function">Expanded</span><span class="token punctuation">(</span>                  child<span class="token punctuation">:</span> <span class="token function">TextFormField</span><span class="token punctuation">(</span>                    controller<span class="token punctuation">:</span> _msgController<span class="token punctuation">,</span>                    <span class="token comment" spellcheck="true">// 边框样式</span>                    decoration<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token function">InputDecoration</span><span class="token punctuation">(</span>                      <span class="token comment" spellcheck="true">// placeholder</span>                      hintText<span class="token punctuation">:</span> <span class="token string">"在这里输入内容..."</span><span class="token punctuation">,</span>                      border<span class="token punctuation">:</span> <span class="token function">OutlineInputBorder</span><span class="token punctuation">(</span>                        borderSide<span class="token punctuation">:</span> <span class="token function">BorderSide</span><span class="token punctuation">(</span>                          width<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>                        <span class="token punctuation">)</span><span class="token punctuation">,</span>                      <span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token punctuation">)</span><span class="token punctuation">,</span>                  <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token function">IconButton</span><span class="token punctuation">(</span>                    onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                      String msg <span class="token operator">=</span> _msgController<span class="token punctuation">.</span>text<span class="token punctuation">;</span>                      <span class="token comment" spellcheck="true">// 清空表单</span>                      _msgController<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                      <span class="token keyword">if</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span>isEmpty<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">return</span><span class="token punctuation">;</span>                      <span class="token punctuation">}</span>                      <span class="token comment" spellcheck="true">// 发信息</span>                      <span class="token function">sendMsg</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> widget<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token punctuation">,</span>                    icon<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token function">Icon</span><span class="token punctuation">(</span>                      Icons<span class="token punctuation">.</span>send<span class="token punctuation">,</span>                      color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>teal<span class="token punctuation">,</span>                    <span class="token punctuation">)</span><span class="token punctuation">)</span>              <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h1 id="msg-model-dart"><a href="#msg-model-dart" class="headerlink" title="msg_model.dart"></a>msg_model.dart</h1><pre class=" language-dart"><code class="language-dart"><span class="token keyword">class</span> <span class="token class-name">MsgMoel</span> <span class="token punctuation">{</span>  String type<span class="token punctuation">;</span>  String msg<span class="token punctuation">;</span>  String sender<span class="token punctuation">;</span>  <span class="token function">MsgMoel</span><span class="token punctuation">(</span><span class="token punctuation">{</span>required <span class="token keyword">this</span><span class="token punctuation">.</span>msg<span class="token punctuation">,</span> required <span class="token keyword">this</span><span class="token punctuation">.</span>type<span class="token punctuation">,</span> required <span class="token keyword">this</span><span class="token punctuation">.</span>sender<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> socket.io </category>
          
          <category> flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> socket.io </tag>
            
            <tag> flutter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手写redux(一种思路)</title>
      <link href="/2023/02/06/frontend/react/shou-xie-redux/shou-xie-redux/"/>
      <url>/2023/02/06/frontend/react/shou-xie-redux/shou-xie-redux/</url>
      
        <content type="html"><![CDATA[<h1 id="初始项目"><a href="#初始项目" class="headerlink" title="初始项目"></a>初始项目</h1><blockquote><p>使用原生的provider和context</p></blockquote><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useContext <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 创建上下文</span><span class="token keyword">const</span> appContext <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> <span class="token punctuation">[</span>appState<span class="token punctuation">,</span> setAppState<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    user<span class="token punctuation">:</span> <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"frank"</span><span class="token punctuation">,</span> age<span class="token punctuation">:</span> <span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 初始化上下文</span>  <span class="token keyword">const</span> contextValue <span class="token operator">=</span> <span class="token punctuation">{</span> appState<span class="token punctuation">,</span> setAppState <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token comment" spellcheck="true">// 传递上下文</span>    <span class="token operator">&lt;</span>appContext<span class="token punctuation">.</span>Provider value<span class="token operator">=</span><span class="token punctuation">{</span>contextValue<span class="token punctuation">}</span><span class="token operator">></span>      <span class="token operator">&lt;</span>大儿子 <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>二儿子 <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>幺儿子 <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>appContext<span class="token punctuation">.</span>Provider<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> 大儿子 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>  <span class="token operator">&lt;</span>section<span class="token operator">></span>    大儿子    <span class="token operator">&lt;</span>User <span class="token operator">/</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>section<span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> 二儿子 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>  <span class="token operator">&lt;</span>section<span class="token operator">></span>    二儿子    <span class="token operator">&lt;</span>UserModifier <span class="token operator">/</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>section<span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> 幺儿子 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>section<span class="token operator">></span>幺儿子<span class="token operator">&lt;</span><span class="token operator">/</span>section<span class="token operator">></span><span class="token punctuation">;</span><span class="token keyword">const</span> User <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> contextValue <span class="token operator">=</span> <span class="token function">useContext</span><span class="token punctuation">(</span>appContext<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// console.log(contextValue);</span>  <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">></span>User<span class="token punctuation">:</span><span class="token punctuation">{</span>contextValue<span class="token punctuation">.</span>appState<span class="token punctuation">.</span>user<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> UserModifier <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> contextValue <span class="token operator">=</span> <span class="token function">useContext</span><span class="token punctuation">(</span>appContext<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> <span class="token punctuation">{</span> appState<span class="token punctuation">,</span> setAppState <span class="token punctuation">}</span> <span class="token operator">=</span> contextValue<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// const {appState, setAppState} = useContext(appContext)</span>  <span class="token comment" spellcheck="true">// console.log(contextValue)</span>  <span class="token comment" spellcheck="true">// console.log(appState)</span>  <span class="token keyword">const</span> onChange <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    appState<span class="token punctuation">.</span>user<span class="token punctuation">.</span>name <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 修改上下文</span>    <span class="token function">setAppState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span>contextValue<span class="token punctuation">.</span>appState <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>input value<span class="token operator">=</span><span class="token punctuation">{</span>contextValue<span class="token punctuation">.</span>appState<span class="token punctuation">.</span>user<span class="token punctuation">.</span>name<span class="token punctuation">}</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span> </code></pre><h1 id="手写reducer"><a href="#手写reducer" class="headerlink" title="手写reducer"></a>手写reducer</h1><blockquote><p>上文的代码中, 直接修改了state的原始内容, 不符合规范, 新增reducer来规范state创建流程 </p></blockquote><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 请从课程简介里下载本代码</span><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useContext <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 创建上下文</span><span class="token keyword">const</span> appContext <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> <span class="token punctuation">[</span>appState<span class="token punctuation">,</span> setAppState<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    user<span class="token punctuation">:</span> <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"frank"</span><span class="token punctuation">,</span> age<span class="token punctuation">:</span> <span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 初始化上下文</span>  <span class="token keyword">const</span> contextValue <span class="token operator">=</span> <span class="token punctuation">{</span> appState<span class="token punctuation">,</span> setAppState <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token comment" spellcheck="true">// 传递上下文</span>    <span class="token operator">&lt;</span>appContext<span class="token punctuation">.</span>Provider value<span class="token operator">=</span><span class="token punctuation">{</span>contextValue<span class="token punctuation">}</span><span class="token operator">></span>      <span class="token operator">&lt;</span>大儿子 <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>二儿子 <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>幺儿子 <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>appContext<span class="token punctuation">.</span>Provider<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> 大儿子 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>  <span class="token operator">&lt;</span>section<span class="token operator">></span>    大儿子    <span class="token operator">&lt;</span>User <span class="token operator">/</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>section<span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> 二儿子 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>  <span class="token operator">&lt;</span>section<span class="token operator">></span>    二儿子    <span class="token operator">&lt;</span>UserModifier <span class="token operator">/</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>section<span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> 幺儿子 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>section<span class="token operator">></span>幺儿子<span class="token operator">&lt;</span><span class="token operator">/</span>section<span class="token operator">></span><span class="token punctuation">;</span><span class="token keyword">const</span> User <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> contextValue <span class="token operator">=</span> <span class="token function">useContext</span><span class="token punctuation">(</span>appContext<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// console.log(contextValue);</span>  <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">></span>User<span class="token punctuation">:</span><span class="token punctuation">{</span>contextValue<span class="token punctuation">.</span>appState<span class="token punctuation">.</span>user<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 规范state创建流程</span><span class="token keyword">const</span> reducer <span class="token operator">=</span> <span class="token punctuation">(</span>state<span class="token punctuation">,</span> <span class="token punctuation">{</span> type<span class="token punctuation">,</span> payload <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">"updateUser"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      <span class="token operator">...</span>state<span class="token punctuation">,</span>      user<span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token operator">...</span>state<span class="token punctuation">.</span>user<span class="token punctuation">,</span>        <span class="token operator">...</span>payload<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 其实payload就是data</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> state<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> UserModifier <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> contextValue <span class="token operator">=</span> <span class="token function">useContext</span><span class="token punctuation">(</span>appContext<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> <span class="token punctuation">{</span> appState<span class="token punctuation">,</span> setAppState <span class="token punctuation">}</span> <span class="token operator">=</span> contextValue<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// const {appState, setAppState} = useContext(appContext)</span>  <span class="token comment" spellcheck="true">// console.log(contextValue)</span>  <span class="token comment" spellcheck="true">// console.log(appState)</span>  <span class="token keyword">const</span> onChange <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// appState.user.name = e.target.value;</span>    <span class="token comment" spellcheck="true">// 修改上下文</span>    <span class="token comment" spellcheck="true">// setAppState({ ...contextValue.appState });</span>    <span class="token comment" spellcheck="true">// 不是直接修改,而是创建新的state</span>    <span class="token comment" spellcheck="true">// 传入旧的state,创建新的</span>    <span class="token function">setAppState</span><span class="token punctuation">(</span>      <span class="token function">reducer</span><span class="token punctuation">(</span>appState<span class="token punctuation">,</span> <span class="token punctuation">{</span>        type<span class="token punctuation">:</span> <span class="token string">"updateUser"</span><span class="token punctuation">,</span>        payload<span class="token punctuation">:</span> <span class="token punctuation">{</span>          name<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>input value<span class="token operator">=</span><span class="token punctuation">{</span>contextValue<span class="token punctuation">.</span>appState<span class="token punctuation">.</span>user<span class="token punctuation">.</span>name<span class="token punctuation">}</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span> </code></pre><h1 id="手写dispatch"><a href="#手写dispatch" class="headerlink" title="手写dispatch"></a>手写dispatch</h1><blockquote><p>修改state需要setxxx, 如果多次, 则会在onChange函数里添加太多的set逻辑, 我们将他抽取出来, 作为一个function, <strong>规范setState流程</strong> </p></blockquote><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 请从课程简介里下载本代码</span><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useContext <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 创建上下文</span><span class="token keyword">const</span> appContext <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> <span class="token punctuation">[</span>appState<span class="token punctuation">,</span> setAppState<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    user<span class="token punctuation">:</span> <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"frank"</span><span class="token punctuation">,</span> age<span class="token punctuation">:</span> <span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 初始化上下文</span>  <span class="token keyword">const</span> contextValue <span class="token operator">=</span> <span class="token punctuation">{</span> appState<span class="token punctuation">,</span> setAppState <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token comment" spellcheck="true">// 传递上下文</span>    <span class="token operator">&lt;</span>appContext<span class="token punctuation">.</span>Provider value<span class="token operator">=</span><span class="token punctuation">{</span>contextValue<span class="token punctuation">}</span><span class="token operator">></span>      <span class="token operator">&lt;</span>大儿子 <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>二儿子 <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>幺儿子 <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>appContext<span class="token punctuation">.</span>Provider<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> 大儿子 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>  <span class="token operator">&lt;</span>section<span class="token operator">></span>    大儿子    <span class="token operator">&lt;</span>User <span class="token operator">/</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>section<span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> 二儿子 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>  <span class="token operator">&lt;</span>section<span class="token operator">></span>    二儿子    <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* &lt;UserModifier /> */</span><span class="token punctuation">}</span>    <span class="token operator">&lt;</span>Wrapper <span class="token operator">/</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>section<span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> 幺儿子 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>section<span class="token operator">></span>幺儿子<span class="token operator">&lt;</span><span class="token operator">/</span>section<span class="token operator">></span><span class="token punctuation">;</span><span class="token keyword">const</span> User <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> contextValue <span class="token operator">=</span> <span class="token function">useContext</span><span class="token punctuation">(</span>appContext<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// console.log(contextValue);</span>  <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">></span>User<span class="token punctuation">:</span><span class="token punctuation">{</span>contextValue<span class="token punctuation">.</span>appState<span class="token punctuation">.</span>user<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 规范state创建流程</span><span class="token keyword">const</span> reducer <span class="token operator">=</span> <span class="token punctuation">(</span>state<span class="token punctuation">,</span> <span class="token punctuation">{</span> type<span class="token punctuation">,</span> payload <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">"updateUser"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      <span class="token operator">...</span>state<span class="token punctuation">,</span>      user<span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token operator">...</span>state<span class="token punctuation">.</span>user<span class="token punctuation">,</span>        <span class="token operator">...</span>payload<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 其实payload就是data</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> state<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// context只能在组件内部访问,则这里创建一个组件来封装dispatch的逻辑,然后通过这个组件获取context(权宜之计)</span><span class="token keyword">const</span> Wrapper <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> contextValue <span class="token operator">=</span> <span class="token function">useContext</span><span class="token punctuation">(</span>appContext<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> <span class="token punctuation">{</span> appState<span class="token punctuation">,</span> setAppState <span class="token punctuation">}</span> <span class="token operator">=</span> contextValue<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 规范setState流程</span>  <span class="token keyword">const</span> dispatch <span class="token operator">=</span> <span class="token punctuation">(</span>action<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token function">setAppState</span><span class="token punctuation">(</span><span class="token function">reducer</span><span class="token punctuation">(</span>appState<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token operator">&lt;</span>UserModifier dispatch<span class="token operator">=</span><span class="token punctuation">{</span>dispatch<span class="token punctuation">}</span> state<span class="token operator">=</span><span class="token punctuation">{</span>appState<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> UserModifier <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> dispatch<span class="token punctuation">,</span> state <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>   <span class="token keyword">const</span> onChange <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>     <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      type<span class="token punctuation">:</span> <span class="token string">"updateUser"</span><span class="token punctuation">,</span>      payload<span class="token punctuation">:</span> <span class="token punctuation">{</span>        name<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">,</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>input value<span class="token operator">=</span><span class="token punctuation">{</span>state<span class="token punctuation">.</span>user<span class="token punctuation">.</span>name<span class="token punctuation">}</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h1 id="connect-高阶组件"><a href="#connect-高阶组件" class="headerlink" title="connect 高阶组件"></a>connect 高阶组件</h1><blockquote><p>高阶组件: 一个函数,接收一个组件,返回一个新组件,这个组件就是高阶组件<br>connect: 将组件和全局的state联系起来</p></blockquote><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 请从课程简介里下载本代码</span><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useContext <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 创建上下文</span><span class="token keyword">const</span> appContext <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> <span class="token punctuation">[</span>appState<span class="token punctuation">,</span> setAppState<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    user<span class="token punctuation">:</span> <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"frank"</span><span class="token punctuation">,</span> age<span class="token punctuation">:</span> <span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 初始化上下文</span>  <span class="token keyword">const</span> contextValue <span class="token operator">=</span> <span class="token punctuation">{</span> appState<span class="token punctuation">,</span> setAppState <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token comment" spellcheck="true">// 传递上下文</span>    <span class="token operator">&lt;</span>appContext<span class="token punctuation">.</span>Provider value<span class="token operator">=</span><span class="token punctuation">{</span>contextValue<span class="token punctuation">}</span><span class="token operator">></span>      <span class="token operator">&lt;</span>大儿子 <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>二儿子 <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>幺儿子 <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>appContext<span class="token punctuation">.</span>Provider<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> 大儿子 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>  <span class="token operator">&lt;</span>section<span class="token operator">></span>    大儿子    <span class="token operator">&lt;</span>User <span class="token operator">/</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>section<span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> 二儿子 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>  <span class="token operator">&lt;</span>section<span class="token operator">></span>    二儿子    <span class="token operator">&lt;</span>UserModifier x<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">"x"</span><span class="token punctuation">}</span><span class="token operator">></span>内容<span class="token operator">&lt;</span><span class="token operator">/</span>UserModifier<span class="token operator">></span>    <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* &lt;Wrapper /> */</span><span class="token punctuation">}</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>section<span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> 幺儿子 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>section<span class="token operator">></span>幺儿子<span class="token operator">&lt;</span><span class="token operator">/</span>section<span class="token operator">></span><span class="token punctuation">;</span><span class="token keyword">const</span> User <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> contextValue <span class="token operator">=</span> <span class="token function">useContext</span><span class="token punctuation">(</span>appContext<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// console.log(contextValue);</span>  <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">></span>User<span class="token punctuation">:</span><span class="token punctuation">{</span>contextValue<span class="token punctuation">.</span>appState<span class="token punctuation">.</span>user<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 规范state创建流程</span><span class="token keyword">const</span> reducer <span class="token operator">=</span> <span class="token punctuation">(</span>state<span class="token punctuation">,</span> <span class="token punctuation">{</span> type<span class="token punctuation">,</span> payload <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">"updateUser"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      <span class="token operator">...</span>state<span class="token punctuation">,</span>      user<span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token operator">...</span>state<span class="token punctuation">.</span>user<span class="token punctuation">,</span>        <span class="token operator">...</span>payload<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 其实payload就是data</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> state<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 每次自己写warpper包装dispatch太麻烦,封装一个return wrapper的函数</span><span class="token keyword">const</span> connent <span class="token operator">=</span> <span class="token punctuation">(</span>Component<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// context只能在组件内部访问,则这里创建一个组件来封装dispatch的逻辑,然后通过这个组件获取context(权宜之计)</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> contextValue <span class="token operator">=</span> <span class="token function">useContext</span><span class="token punctuation">(</span>appContext<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token punctuation">{</span> appState<span class="token punctuation">,</span> setAppState <span class="token punctuation">}</span> <span class="token operator">=</span> contextValue<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 规范setState流程</span>    <span class="token keyword">const</span> dispatch <span class="token operator">=</span> <span class="token punctuation">(</span>action<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      <span class="token function">setAppState</span><span class="token punctuation">(</span><span class="token function">reducer</span><span class="token punctuation">(</span>appState<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 如果组件有传值,应该传递(props)</span>    <span class="token keyword">return</span> <span class="token operator">&lt;</span>Component <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> dispatch<span class="token operator">=</span><span class="token punctuation">{</span>dispatch<span class="token punctuation">}</span> state<span class="token operator">=</span><span class="token punctuation">{</span>appState<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 传入组件,将组件和全局state联系起来,就是connect的含义</span><span class="token keyword">const</span> UserModifier <span class="token operator">=</span> <span class="token function">connent</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> dispatch<span class="token punctuation">,</span> state<span class="token punctuation">,</span> <span class="token operator">...</span>props <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> children <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> onChange <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      type<span class="token punctuation">:</span> <span class="token string">"updateUser"</span><span class="token punctuation">,</span>      payload<span class="token punctuation">:</span> <span class="token punctuation">{</span>        name<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">,</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>div<span class="token operator">></span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>input value<span class="token operator">=</span><span class="token punctuation">{</span>state<span class="token punctuation">.</span>user<span class="token punctuation">.</span>name<span class="token punctuation">}</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h1 id="实现精准render"><a href="#实现精准render" class="headerlink" title="实现精准render"></a>实现精准render</h1><blockquote><p>当前每次都是重新渲染, 把没有改变的也更新了, 浪费性能(影响其实不大, 但是太多也不好)</p></blockquote><p><img src="5C1675999650847.png" alt="1675999701929"></p><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 请从课程简介里下载本代码</span><span class="token keyword">import</span> <span class="token punctuation">{</span> update <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"lodash"</span><span class="token punctuation">;</span><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useContext<span class="token punctuation">,</span> useMemo<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 创建上下文</span><span class="token keyword">const</span> appContext <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 方案2: 将组件的state提取到外部的store</span><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token punctuation">{</span>  state<span class="token punctuation">:</span> <span class="token punctuation">{</span>    user<span class="token punctuation">:</span> <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"frank"</span><span class="token punctuation">,</span> age<span class="token punctuation">:</span> <span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">setState</span><span class="token punctuation">(</span>newState<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// console.log(newState); 没有调用组件的setState,所以不会刷新</span>    store<span class="token punctuation">.</span>state <span class="token operator">=</span> newState<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 遍历监听者列表,调用用户传入的(更新)方法</span>    store<span class="token punctuation">.</span>listeners<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">fn</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span>state<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 监听者</span>  listeners<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 让所有使用store的组件监听store的变化,实现更新渲染</span>  <span class="token function">subscribe</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>    store<span class="token punctuation">.</span>listeners<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 返回取消订阅的函数</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      <span class="token keyword">const</span> index <span class="token operator">=</span> store<span class="token punctuation">.</span>listeners<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">;</span>      store<span class="token punctuation">.</span>listeners<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 只要改变了组件(app)的state,其返回的所有组件都会重新执行</span>  <span class="token comment" spellcheck="true">// useMemo(() => {</span>  <span class="token comment" spellcheck="true">//   return &lt;幺儿子 />;</span>  <span class="token comment" spellcheck="true">// }, []); // 方案1: 使用缓存,传空数组表示以后不再更新</span>  <span class="token comment" spellcheck="true">// const [appState, setAppState] = useState({</span>  <span class="token comment" spellcheck="true">//   user: { name: "frank", age: 18 },</span>  <span class="token comment" spellcheck="true">// });</span>  <span class="token comment" spellcheck="true">// 初始化上下文</span>  <span class="token comment" spellcheck="true">// const contextValue = { appState, setAppState };</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token comment" spellcheck="true">// 传递上下文</span>    <span class="token operator">&lt;</span>appContext<span class="token punctuation">.</span>Provider value<span class="token operator">=</span><span class="token punctuation">{</span>store<span class="token punctuation">}</span><span class="token operator">></span>      <span class="token operator">&lt;</span>大儿子 <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>二儿子 <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>幺儿子 <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>appContext<span class="token punctuation">.</span>Provider<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> 大儿子 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"大儿子"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>section<span class="token operator">></span>      大儿子      <span class="token operator">&lt;</span>User <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>section<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> 二儿子 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"二儿子"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>section<span class="token operator">></span>      二儿子      <span class="token operator">&lt;</span>UserModifier x<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">"x"</span><span class="token punctuation">}</span><span class="token operator">></span>内容<span class="token operator">&lt;</span><span class="token operator">/</span>UserModifier<span class="token operator">></span>      <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* &lt;Wrapper /> */</span><span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>section<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> 幺儿子 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"三儿子"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token operator">&lt;</span>section<span class="token operator">></span>幺儿子<span class="token operator">&lt;</span><span class="token operator">/</span>section<span class="token operator">></span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 每次自己写warpper包装dispatch太麻烦,封装一个return wrapper的函数</span><span class="token keyword">const</span> connent <span class="token operator">=</span> <span class="token punctuation">(</span>Component<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// context只能在组件内部访问,则这里创建一个组件来封装dispatch的逻辑,然后通过这个组件获取context(权宜之计)</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 在wrapper使用state,调用更新方法,可以实现更新</span>    <span class="token comment" spellcheck="true">// 而且wrapper包装的是用到state的组件,所以更新时不会影响其他组件</span>    <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> update<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// const contextValue = useContext(appContext);</span>    <span class="token keyword">const</span> <span class="token punctuation">{</span> state<span class="token punctuation">,</span> setState <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useContext</span><span class="token punctuation">(</span>appContext<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// const { appState, setAppState } = contextValue;</span>    <span class="token comment" spellcheck="true">// 只订阅一次</span>    <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      store<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 规范setState流程</span>    <span class="token keyword">const</span> dispatch <span class="token operator">=</span> <span class="token punctuation">(</span>action<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// setAppState(reducer(appState, action));</span>      <span class="token function">setState</span><span class="token punctuation">(</span><span class="token function">reducer</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// update({}); // 但是,其他使用store的无法根据store内的改变而重新渲染</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 如果组件有传值,应该传递(props)</span>    <span class="token keyword">return</span> <span class="token operator">&lt;</span>Component <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> dispatch<span class="token operator">=</span><span class="token punctuation">{</span>dispatch<span class="token punctuation">}</span> state<span class="token operator">=</span><span class="token punctuation">{</span>state<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> User <span class="token operator">=</span> <span class="token function">connent</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> state<span class="token punctuation">,</span> dispatch <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// const contextValue = useContext(appContext);</span>  <span class="token comment" spellcheck="true">// const { state } = useContext(appContext);</span>  <span class="token comment" spellcheck="true">// console.log(state);</span>  <span class="token comment" spellcheck="true">// console.log(contextValue);</span>  <span class="token comment" spellcheck="true">// return &lt;div>User:{contextValue.appState.user.name}&lt;/div>;</span>  <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">></span>User<span class="token punctuation">:</span><span class="token punctuation">{</span>state<span class="token punctuation">.</span>user<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 规范state创建流程</span><span class="token keyword">const</span> reducer <span class="token operator">=</span> <span class="token punctuation">(</span>state<span class="token punctuation">,</span> <span class="token punctuation">{</span> type<span class="token punctuation">,</span> payload <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">"updateUser"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      <span class="token operator">...</span>state<span class="token punctuation">,</span>      user<span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token operator">...</span>state<span class="token punctuation">.</span>user<span class="token punctuation">,</span>        <span class="token operator">...</span>payload<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 其实payload就是data</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> state<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 传入组件,将组件和全局state联系起来,就是connect的含义</span><span class="token keyword">const</span> UserModifier <span class="token operator">=</span> <span class="token function">connent</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> dispatch<span class="token punctuation">,</span> state<span class="token punctuation">,</span> <span class="token operator">...</span>props <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> children <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> onChange <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      type<span class="token punctuation">:</span> <span class="token string">"updateUser"</span><span class="token punctuation">,</span>      payload<span class="token punctuation">:</span> <span class="token punctuation">{</span>        name<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">,</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>div<span class="token operator">></span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>input value<span class="token operator">=</span><span class="token punctuation">{</span>state<span class="token punctuation">.</span>user<span class="token punctuation">.</span>name<span class="token punctuation">}</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre><p><img src="5C1676000932952.png" alt="1676000932952"></p><h1 id="redux乍现"><a href="#redux乍现" class="headerlink" title="redux乍现"></a>redux乍现</h1><h2 id="App-jsx"><a href="#App-jsx" class="headerlink" title="App.jsx"></a>App.jsx</h2><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 请从课程简介里下载本代码</span><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// Uncaught SyntaxError: Unexpected token '&lt;'</span><span class="token keyword">import</span> <span class="token punctuation">{</span> appContext<span class="token punctuation">,</span> store<span class="token punctuation">,</span> connent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./redux.jsx"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 方案2: 将组件的state提取到外部的store</span><span class="token keyword">export</span> <span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 只要改变了组件(app)的state,其返回的所有组件都会重新执行</span>  <span class="token comment" spellcheck="true">// useMemo(() => {</span>  <span class="token comment" spellcheck="true">//   return &lt;幺儿子 />;</span>  <span class="token comment" spellcheck="true">// }, []); // 方案1: 使用缓存,传空数组表示以后不再更新</span>  <span class="token comment" spellcheck="true">// const [appState, setAppState] = useState({</span>  <span class="token comment" spellcheck="true">//   user: { name: "frank", age: 18 },</span>  <span class="token comment" spellcheck="true">// });</span>  <span class="token comment" spellcheck="true">// 初始化上下文</span>  <span class="token comment" spellcheck="true">// const contextValue = { appState, setAppState };</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token comment" spellcheck="true">// 传递上下文</span>    <span class="token operator">&lt;</span>appContext<span class="token punctuation">.</span>Provider value<span class="token operator">=</span><span class="token punctuation">{</span>store<span class="token punctuation">}</span><span class="token operator">></span>      <span class="token operator">&lt;</span>大儿子 <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>二儿子 <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>幺儿子 <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>appContext<span class="token punctuation">.</span>Provider<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> 大儿子 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"大儿子"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>section<span class="token operator">></span>      大儿子      <span class="token operator">&lt;</span>User <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>section<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> 二儿子 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"二儿子"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>section<span class="token operator">></span>      二儿子      <span class="token operator">&lt;</span>UserModifier x<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">"x"</span><span class="token punctuation">}</span><span class="token operator">></span>内容<span class="token operator">&lt;</span><span class="token operator">/</span>UserModifier<span class="token operator">></span>      <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* &lt;Wrapper /> */</span><span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>section<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> 幺儿子 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"三儿子"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token operator">&lt;</span>section<span class="token operator">></span>幺儿子<span class="token operator">&lt;</span><span class="token operator">/</span>section<span class="token operator">></span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> User <span class="token operator">=</span> <span class="token function">connent</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> state<span class="token punctuation">,</span> dispatch <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// const contextValue = useContext(appContext);</span>  <span class="token comment" spellcheck="true">// const { state } = useContext(appContext);</span>  <span class="token comment" spellcheck="true">// console.log(state);</span>  <span class="token comment" spellcheck="true">// console.log(contextValue);</span>  <span class="token comment" spellcheck="true">// return &lt;div>User:{contextValue.appState.user.name}&lt;/div>;</span>  <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">></span>User<span class="token punctuation">:</span><span class="token punctuation">{</span>state<span class="token punctuation">.</span>user<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 传入组件,将组件和全局state联系起来,就是connect的含义</span><span class="token keyword">const</span> UserModifier <span class="token operator">=</span> <span class="token function">connent</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> dispatch<span class="token punctuation">,</span> state<span class="token punctuation">,</span> <span class="token operator">...</span>props <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> children <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> onChange <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      type<span class="token punctuation">:</span> <span class="token string">"updateUser"</span><span class="token punctuation">,</span>      payload<span class="token punctuation">:</span> <span class="token punctuation">{</span>        name<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">,</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>div<span class="token operator">></span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>input value<span class="token operator">=</span><span class="token punctuation">{</span>state<span class="token punctuation">.</span>user<span class="token punctuation">.</span>name<span class="token punctuation">}</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="redux-jsx"><a href="#redux-jsx" class="headerlink" title="redux.jsx"></a>redux.jsx</h2><pre class=" language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useContext<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 每次自己写warpper包装dispatch太麻烦,封装一个return wrapper的函数</span><span class="token keyword">export</span> <span class="token keyword">const</span> connent <span class="token operator">=</span> <span class="token punctuation">(</span>Component<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// context只能在组件内部访问,则这里创建一个组件来封装dispatch的逻辑,然后通过这个组件获取context(权宜之计)</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 在wrapper使用state,调用更新方法,可以实现更新</span>        <span class="token comment" spellcheck="true">// 而且wrapper包装的是用到state的组件,所以更新时不会影响其他组件</span>        <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> update<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// const contextValue = useContext(appContext);</span>        <span class="token keyword">const</span> <span class="token punctuation">{</span> state<span class="token punctuation">,</span> setState <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useContext</span><span class="token punctuation">(</span>appContext<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// const { appState, setAppState } = contextValue;</span>        <span class="token comment" spellcheck="true">// 只订阅一次</span>        <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            store<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>                <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 规范setState流程</span>        <span class="token keyword">const</span> dispatch <span class="token operator">=</span> <span class="token punctuation">(</span>action<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// setAppState(reducer(appState, action));</span>            <span class="token function">setState</span><span class="token punctuation">(</span><span class="token function">reducer</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// update({}); // 但是,其他使用store的无法根据store内的改变而重新渲染</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 如果组件有传值,应该传递(props)</span>        <span class="token keyword">return</span> <span class="token operator">&lt;</span>Component <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> dispatch<span class="token operator">=</span><span class="token punctuation">{</span>dispatch<span class="token punctuation">}</span> state<span class="token operator">=</span><span class="token punctuation">{</span>state<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 规范state创建流程</span><span class="token keyword">const</span> reducer <span class="token operator">=</span> <span class="token punctuation">(</span>state<span class="token punctuation">,</span> <span class="token punctuation">{</span> type<span class="token punctuation">,</span> payload <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">"updateUser"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token punctuation">{</span>            <span class="token operator">...</span>state<span class="token punctuation">,</span>            user<span class="token punctuation">:</span> <span class="token punctuation">{</span>                <span class="token operator">...</span>state<span class="token punctuation">.</span>user<span class="token punctuation">,</span>                <span class="token operator">...</span>payload<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 其实payload就是data</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> state<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token punctuation">{</span>    state<span class="token punctuation">:</span> <span class="token punctuation">{</span>        user<span class="token punctuation">:</span> <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"frank"</span><span class="token punctuation">,</span> age<span class="token punctuation">:</span> <span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function">setState</span><span class="token punctuation">(</span>newState<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// console.log(newState); 没有调用组件的setState,所以不会刷新</span>        store<span class="token punctuation">.</span>state <span class="token operator">=</span> newState<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 遍历监听者列表,调用用户传入的(更新)方法</span>        store<span class="token punctuation">.</span>listeners<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">fn</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span>state<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 监听者</span>    listeners<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 让所有使用store的组件监听store的变化,实现更新渲染</span>    <span class="token function">subscribe</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>        store<span class="token punctuation">.</span>listeners<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 返回取消订阅的函数</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            <span class="token keyword">const</span> index <span class="token operator">=</span> store<span class="token punctuation">.</span>listeners<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">;</span>            store<span class="token punctuation">.</span>listeners<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> appContext <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span></code></pre><h1 id="让connect支持selector"><a href="#让connect支持selector" class="headerlink" title="让connect支持selector"></a>让connect支持selector</h1><h2 id="App-jsx-1"><a href="#App-jsx-1" class="headerlink" title="App.jsx"></a>App.jsx</h2><pre class=" language-jsx"><code class="language-jsx"><span class="token comment" spellcheck="true">// 请从课程简介里下载本代码</span><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// Uncaught SyntaxError: Unexpected token '&lt;'</span><span class="token keyword">import</span> <span class="token punctuation">{</span> appContext<span class="token punctuation">,</span> store<span class="token punctuation">,</span> connent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./redux.jsx"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 方案2: 将组件的state提取到外部的store</span><span class="token keyword">export</span> <span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>   <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token comment" spellcheck="true">// 传递上下文</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appContext.Provider</span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>store<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>      <span class="token operator">&lt;</span>大儿子 <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>二儿子 <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>幺儿子 <span class="token operator">/</span><span class="token operator">></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appContext.Provider</span><span class="token punctuation">></span></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// const x儿子 ......</span><span class="token keyword">const</span> User <span class="token operator">=</span> <span class="token function">connent</span><span class="token punctuation">(</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 获取局部state,无需再state.xxx.xxx</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span> user<span class="token punctuation">:</span> state<span class="token punctuation">.</span>user <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> user <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>   <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>User<span class="token punctuation">:</span><span class="token punctuation">{</span>user<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 传入组件,将组件和全局state联系起来,就是connect的含义</span><span class="token keyword">const</span> UserModifier <span class="token operator">=</span> <span class="token function">connent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> dispatch<span class="token punctuation">,</span> state<span class="token punctuation">,</span> <span class="token operator">...</span>props <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// ......</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="redux-jsx-1"><a href="#redux-jsx-1" class="headerlink" title="redux.jsx"></a>redux.jsx</h2><pre class=" language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useContext<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 每次自己写warpper包装dispatch太麻烦,封装一个return wrapper的函数</span><span class="token comment" spellcheck="true">// 这个写法表示 先接收一个参数,再接收一个参数</span><span class="token keyword">export</span> <span class="token keyword">const</span> connent <span class="token operator">=</span> <span class="token punctuation">(</span>selector<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>Component<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// context只能在组件内部访问,则这里创建一个组件来封装dispatch的逻辑,然后通过这个组件获取context(权宜之计)</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 在wrapper使用state,调用更新方法,可以实现更新</span>    <span class="token comment" spellcheck="true">// 而且wrapper包装的是用到state的组件,所以更新时不会影响其他组件</span>    <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> update<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// const contextValue = useContext(appContext);</span>    <span class="token keyword">const</span> <span class="token punctuation">{</span> state<span class="token punctuation">,</span> setState <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useContext</span><span class="token punctuation">(</span>appContext<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// const { appState, setAppState } = contextValue;</span>    <span class="token keyword">const</span> data <span class="token operator">=</span> selector <span class="token operator">?</span> <span class="token function">selector</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">{</span> state<span class="token punctuation">:</span> state <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 只订阅一次</span>    <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      store<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 规范setState流程</span>    <span class="token keyword">const</span> dispatch <span class="token operator">=</span> <span class="token punctuation">(</span>action<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// setAppState(reducer(appState, action));</span>      <span class="token function">setState</span><span class="token punctuation">(</span><span class="token function">reducer</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// update({}); // 但是,其他使用store的无法根据store内的改变而重新渲染</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 如果组件有传值,应该传递(props)</span>    <span class="token comment" spellcheck="true">// return &lt;Component {...props} dispatch={dispatch} state={state} />;</span>    <span class="token keyword">return</span> <span class="token operator">&lt;</span>Component <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> dispatch<span class="token operator">=</span><span class="token punctuation">{</span>dispatch<span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token operator">...</span>data<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 规范state创建流程</span><span class="token keyword">const</span> reducer <span class="token operator">=</span> <span class="token punctuation">(</span>state<span class="token punctuation">,</span> <span class="token punctuation">{</span> type<span class="token punctuation">,</span> payload <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// ......</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// ......</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> appContext <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h1 id="精准渲染"><a href="#精准渲染" class="headerlink" title="精准渲染"></a>精准渲染</h1><p><img src="5C1676015232322.png" alt="1676015232322"></p><p><img src="D:\vs-vue\1-blog\hexo-blog\source_posts\手写redux\手写redux\5C1676016677462.png" alt="修改user后,三儿子也改变了"></p><h2 id="redux-jsx-2"><a href="#redux-jsx-2" class="headerlink" title="redux.jsx"></a>redux.jsx</h2><pre class=" language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useContext<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token keyword">const</span> changed <span class="token operator">=</span> <span class="token punctuation">(</span>oldState<span class="token punctuation">,</span> newState<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">let</span> changed <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> oldState<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldState<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">!==</span> newState<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      changed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> changed<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 每次自己写warpper包装dispatch太麻烦,封装一个return wrapper的函数</span><span class="token comment" spellcheck="true">// 这个写法表示 先接收一个参数,再接收一个参数</span><span class="token keyword">export</span> <span class="token keyword">const</span> connent <span class="token operator">=</span> <span class="token punctuation">(</span>selector<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>Component<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// context只能在组件内部访问,则这里创建一个组件来封装dispatch的逻辑,然后通过这个组件获取context(权宜之计)</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 在wrapper使用state,调用更新方法,可以实现更新</span>    <span class="token comment" spellcheck="true">// 而且wrapper包装的是用到state的组件,所以更新时不会影响其他组件</span>    <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> update<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// const contextValue = useContext(appContext);</span>    <span class="token keyword">const</span> <span class="token punctuation">{</span> state<span class="token punctuation">,</span> setState <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useContext</span><span class="token punctuation">(</span>appContext<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// const { appState, setAppState } = contextValue;</span>    <span class="token keyword">const</span> data <span class="token operator">=</span> selector <span class="token operator">?</span> <span class="token function">selector</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">{</span> state<span class="token punctuation">:</span> state <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 只订阅一次</span>    <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//   const unsubscribe =</span>      <span class="token keyword">return</span> store<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token keyword">const</span> newData <span class="token operator">=</span> selector          <span class="token operator">?</span> <span class="token function">selector</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span>state<span class="token punctuation">)</span>          <span class="token punctuation">:</span> <span class="token punctuation">{</span> state<span class="token punctuation">:</span> store<span class="token punctuation">.</span>state <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 判断data(store.state.xxx)是否发生变化</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">changed</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> newData<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"update"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//   return unsubscribe; // 取消订阅</span>      <span class="token comment" spellcheck="true">// 这里最好取消订阅,否则selector变化时可能出现重复订阅</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>selector<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 规范setState流程</span>    <span class="token keyword">const</span> dispatch <span class="token operator">=</span> <span class="token punctuation">(</span>action<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// setAppState(reducer(appState, action));</span>      <span class="token function">setState</span><span class="token punctuation">(</span><span class="token function">reducer</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// update({}); // 但是,其他使用store的无法根据store内的改变而重新渲染</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 如果组件有传值,应该传递(props)</span>    <span class="token comment" spellcheck="true">// return &lt;Component {...props} dispatch={dispatch} state={state} />;</span>    <span class="token keyword">return</span> <span class="token operator">&lt;</span>Component <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> dispatch<span class="token operator">=</span><span class="token punctuation">{</span>dispatch<span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token operator">...</span>data<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 规范state创建流程</span><span class="token keyword">const</span> reducer <span class="token operator">=</span> <span class="token punctuation">(</span>state<span class="token punctuation">,</span> <span class="token punctuation">{</span> type<span class="token punctuation">,</span> payload <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// ......</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// ......</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> appContext <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="App-jsx-2"><a href="#App-jsx-2" class="headerlink" title="App.jsx"></a>App.jsx</h2><pre class=" language-jsx"><code class="language-jsx"><span class="token comment" spellcheck="true">// 请从课程简介里下载本代码</span><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// Uncaught SyntaxError: Unexpected token '&lt;'</span><span class="token keyword">import</span> <span class="token punctuation">{</span> appContext<span class="token punctuation">,</span> store<span class="token punctuation">,</span> connent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./redux.jsx"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 方案2: 将组件的state提取到外部的store</span><span class="token keyword">export</span> <span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>   <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token comment" spellcheck="true">// 传递上下文</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appContext.Provider</span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>store<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>      <span class="token operator">&lt;</span>大儿子 <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>二儿子 <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>幺儿子 <span class="token operator">/</span><span class="token operator">></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appContext.Provider</span><span class="token punctuation">></span></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// ......</span><span class="token keyword">const</span> 幺儿子 <span class="token operator">=</span> <span class="token function">connent</span><span class="token punctuation">(</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>   <span class="token keyword">return</span> <span class="token punctuation">{</span> group<span class="token punctuation">:</span> state<span class="token punctuation">.</span>group <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> group <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"三儿子"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span><span class="token punctuation">></span></span>      幺儿子<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>Group<span class="token punctuation">:</span> <span class="token punctuation">{</span>group<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> User <span class="token operator">=</span> <span class="token function">connent</span><span class="token punctuation">(</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 获取局部state,无需再state.xxx.xxx</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span> user<span class="token punctuation">:</span> state<span class="token punctuation">.</span>user <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> user <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'user'</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>User<span class="token punctuation">:</span><span class="token punctuation">{</span>user<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 传入组件,将组件和全局state联系起来,就是connect的含义</span><span class="token keyword">const</span> UserModifier <span class="token operator">=</span> <span class="token function">connent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> dispatch<span class="token punctuation">,</span> state<span class="token punctuation">,</span> <span class="token operator">...</span>props <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// ......</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre><p><img src="D:\vs-vue\1-blog\hexo-blog\source_posts\手写redux\手写redux\5C1676017417280.png" alt="1676017417280"></p><h1 id="mapDispatcherToProps"><a href="#mapDispatcherToProps" class="headerlink" title="mapDispatcherToProps"></a>mapDispatcherToProps</h1><p><img src="D:\vs-vue\1-blog\hexo-blog\source_posts\手写redux\手写redux\5C1676017628946.png" alt="1676017628946"></p><h2 id="App-jsx-3"><a href="#App-jsx-3" class="headerlink" title="App.jsx"></a>App.jsx</h2><pre class=" language-jsx"><code class="language-jsx"><span class="token comment" spellcheck="true">// 请从课程简介里下载本代码</span><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// Uncaught SyntaxError: Unexpected token '&lt;'</span><span class="token keyword">import</span> <span class="token punctuation">{</span> appContext<span class="token punctuation">,</span> store<span class="token punctuation">,</span> connent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./redux.jsx"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 方案2: 将组件的state提取到外部的store</span><span class="token keyword">export</span> <span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>   <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token comment" spellcheck="true">// 传递上下文</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appContext.Provider</span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>store<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>      <span class="token operator">&lt;</span>大儿子 <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>二儿子 <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>幺儿子 <span class="token operator">/</span><span class="token operator">></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appContext.Provider</span><span class="token punctuation">></span></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// ......</span><span class="token comment" spellcheck="true">// 传入组件,将组件和全局state联系起来,就是connect的含义</span><span class="token keyword">const</span> UserModifier <span class="token operator">=</span> <span class="token function">connent</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>dispatch<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 每次都要传update,简化</span>    updateUser<span class="token punctuation">:</span> <span class="token punctuation">(</span>attr<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token punctuation">:</span> <span class="token string">"update"</span><span class="token punctuation">,</span> payload<span class="token punctuation">:</span> attr <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// })(({ dispatch, state, ...props }) => {</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> updateUser<span class="token punctuation">,</span> state<span class="token punctuation">,</span> <span class="token operator">...</span>props <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> children <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> onChange <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token function">updateUser</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// dispatch({</span>    <span class="token comment" spellcheck="true">//   type: "update",</span>    <span class="token comment" spellcheck="true">//   payload: {</span>    <span class="token comment" spellcheck="true">//     name: e.target.value,</span>    <span class="token comment" spellcheck="true">//   },</span>    <span class="token comment" spellcheck="true">// });</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>state<span class="token punctuation">.</span>user<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </code></pre><h2 id="redux-jsx-3"><a href="#redux-jsx-3" class="headerlink" title="redux.jsx"></a>redux.jsx</h2><pre class=" language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useContext<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token keyword">const</span> changed <span class="token operator">=</span> <span class="token punctuation">(</span>oldState<span class="token punctuation">,</span> newState<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// ......</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 每次自己写warpper包装dispatch太麻烦,封装一个return wrapper的函数</span><span class="token comment" spellcheck="true">// 这个写法表示 先接收一个参数,再接收一个参数</span><span class="token comment" spellcheck="true">// export const connent = (selector,mapDispatchToProps) => (Component) => {</span><span class="token keyword">export</span> <span class="token keyword">const</span> connent <span class="token operator">=</span> <span class="token punctuation">(</span>selector<span class="token punctuation">,</span> dispatchSelector<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>Component<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// context只能在组件内部访问,则这里创建一个组件来封装dispatch的逻辑,然后通过这个组件获取context(权宜之计)</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 在wrapper使用state,调用更新方法,可以实现更新</span>    <span class="token comment" spellcheck="true">// 而且wrapper包装的是用到state的组件,所以更新时不会影响其他组件</span>    <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> update<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// const contextValue = useContext(appContext);</span>    <span class="token keyword">const</span> <span class="token punctuation">{</span> state<span class="token punctuation">,</span> setState <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useContext</span><span class="token punctuation">(</span>appContext<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// const { appState, setAppState } = contextValue;</span>    <span class="token keyword">const</span> data <span class="token operator">=</span> selector <span class="token operator">?</span> <span class="token function">selector</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">{</span> state<span class="token punctuation">:</span> state <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 规范setState流程</span>    <span class="token keyword">const</span> dispatch <span class="token operator">=</span> <span class="token punctuation">(</span>action<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// setAppState(reducer(appState, action));</span>      <span class="token function">setState</span><span class="token punctuation">(</span><span class="token function">reducer</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// update({}); // 但是,其他使用store的无法根据store内的改变而重新渲染</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 每次都要传update,简化</span>    <span class="token keyword">const</span> dispatchers <span class="token operator">=</span> dispatchSelector      <span class="token operator">?</span> <span class="token function">dispatchSelector</span><span class="token punctuation">(</span>dispatch<span class="token punctuation">)</span>      <span class="token punctuation">:</span> <span class="token punctuation">{</span> dispatch <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 只订阅一次</span>    <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//   const unsubscribe =</span>      <span class="token keyword">return</span> store<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token keyword">const</span> newData <span class="token operator">=</span> selector          <span class="token operator">?</span> <span class="token function">selector</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span>state<span class="token punctuation">)</span>          <span class="token punctuation">:</span> <span class="token punctuation">{</span> state<span class="token punctuation">:</span> store<span class="token punctuation">.</span>state <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 判断data(store.state.xxx)是否发生变化</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">changed</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> newData<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"update"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">// return unsubscribe; // 取消订阅</span>      <span class="token comment" spellcheck="true">// 这里最好取消订阅,否则selector变化时可能出现重复订阅</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>selector<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 如果组件有传值,应该传递(props)</span>    <span class="token comment" spellcheck="true">// return &lt;Component {...props} dispatch={dispatch} state={state} />;</span>    <span class="token comment" spellcheck="true">// return &lt;Component {...props} dispatch={dispatch} {...data} />;</span>    <span class="token keyword">return</span> <span class="token operator">&lt;</span>Component <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token operator">...</span>dispatchers<span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token operator">...</span>data<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 规范state创建流程</span><span class="token keyword">const</span> reducer <span class="token operator">=</span> <span class="token punctuation">(</span>state<span class="token punctuation">,</span> <span class="token punctuation">{</span> type<span class="token punctuation">,</span> payload <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// ......</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// ......</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> appContext <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h1 id="connect的意义"><a href="#connect的意义" class="headerlink" title="connect的意义"></a>connect的意义</h1><blockquote><p>多次调用, 每次调用产生半成品, 可以根据不同的半成品来进行读/写操作</p></blockquote><p><img src="D:\vs-vue\1-blog\hexo-blog\source_posts\手写redux\手写redux\5C1676026550867.png" alt="1676026550867"></p><h2 id="connects-connectToUser-js"><a href="#connects-connectToUser-js" class="headerlink" title="connects/connectToUser.js"></a>connects/connectToUser.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> connect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'../redux'</span><span class="token comment" spellcheck="true">// 抽取公共selector和dispatcher</span><span class="token comment" spellcheck="true">// 封装读逻辑</span><span class="token keyword">const</span> userSelector <span class="token operator">=</span> <span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span> user<span class="token punctuation">:</span> state<span class="token punctuation">.</span>user <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 封装写逻辑</span><span class="token keyword">const</span> userDispatcher <span class="token operator">=</span> <span class="token punctuation">(</span>dispatch<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>        updateUser<span class="token punctuation">:</span> <span class="token punctuation">(</span>attrs<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token punctuation">:</span> <span class="token string">"update"</span><span class="token punctuation">,</span> payload<span class="token punctuation">:</span> attrs <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> connentToUser <span class="token operator">=</span> <span class="token function">connect</span><span class="token punctuation">(</span>userSelector<span class="token punctuation">,</span> userDispatcher<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="App-jsx-4"><a href="#App-jsx-4" class="headerlink" title="App.jsx"></a>App.jsx</h2><pre class=" language-jsx"><code class="language-jsx"><span class="token comment" spellcheck="true">// 请从课程简介里下载本代码</span><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// Uncaught SyntaxError: Unexpected token '&lt;'</span><span class="token keyword">import</span> <span class="token punctuation">{</span> appContext<span class="token punctuation">,</span> store<span class="token punctuation">,</span>connect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./redux.jsx"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">{</span> connentToUser <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./connects/connectToUser.js"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 方案2: 将组件的state提取到外部的store</span><span class="token keyword">export</span> <span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>   <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token comment" spellcheck="true">// 传递上下文</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appContext.Provider</span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>store<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>      <span class="token operator">&lt;</span>大儿子 <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>二儿子 <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>幺儿子 <span class="token operator">/</span><span class="token operator">></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appContext.Provider</span><span class="token punctuation">></span></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// ......</span><span class="token keyword">const</span> UserModifier <span class="token operator">=</span> <span class="token function">connentToUser</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> updateUser<span class="token punctuation">,</span> user<span class="token punctuation">,</span> <span class="token operator">...</span>props <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> children <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> onChange <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token function">updateUser</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// dispatch({</span>    <span class="token comment" spellcheck="true">//   type: "update",</span>    <span class="token comment" spellcheck="true">//   payload: {</span>    <span class="token comment" spellcheck="true">//     name: e.target.value,</span>    <span class="token comment" spellcheck="true">//   },</span>    <span class="token comment" spellcheck="true">// });</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>user<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre><h1 id="封装provider和createStore"><a href="#封装provider和createStore" class="headerlink" title="封装provider和createStore"></a>封装provider和createStore</h1><p><img src="D:\vs-vue\1-blog\hexo-blog\source_posts\手写redux\手写redux\5C1676029099571.png" alt="1676029099571"></p><h2 id="redux-jsx-4"><a href="#redux-jsx-4" class="headerlink" title="redux.jsx"></a>redux.jsx</h2><pre class=" language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useContext<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// ......</span><span class="token comment" spellcheck="true">// reduce和store都是写死的,不符合规范</span><span class="token comment" spellcheck="true">// 规范state创建流程</span><span class="token comment" spellcheck="true">// const reducer = (state, { type, payload }) => {</span><span class="token comment" spellcheck="true">//   if (type === "update") {</span><span class="token comment" spellcheck="true">//     return {</span><span class="token comment" spellcheck="true">//       ...state,</span><span class="token comment" spellcheck="true">//       user: {</span><span class="token comment" spellcheck="true">//         ...state.user,</span><span class="token comment" spellcheck="true">//         ...payload, // 其实payload就是data</span><span class="token comment" spellcheck="true">//       },</span><span class="token comment" spellcheck="true">//     };</span><span class="token comment" spellcheck="true">//   } else {</span><span class="token comment" spellcheck="true">//     return state;</span><span class="token comment" spellcheck="true">//   }</span><span class="token comment" spellcheck="true">// };</span><span class="token keyword">export</span> <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// state: {</span>  <span class="token comment" spellcheck="true">// user: { name: "frank", age: 18 },</span>  <span class="token comment" spellcheck="true">// group: { name: "前端组" },</span>  <span class="token comment" spellcheck="true">// },</span>  state<span class="token punctuation">:</span> undefined<span class="token punctuation">,</span>  <span class="token function">setState</span><span class="token punctuation">(</span>newState<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// console.log(newState); 没有调用组件的setState,所以不会刷新</span>    store<span class="token punctuation">.</span>state <span class="token operator">=</span> newState<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 遍历监听者列表,调用用户传入的(更新)方法</span>    store<span class="token punctuation">.</span>listeners<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">fn</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span>state<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  reducer<span class="token punctuation">:</span> undefined<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 监听者</span>  listeners<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 让所有使用store的组件监听store的变化,实现更新渲染</span>  <span class="token function">subscribe</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>    store<span class="token punctuation">.</span>listeners<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 返回取消订阅的函数</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      <span class="token keyword">const</span> index <span class="token operator">=</span> store<span class="token punctuation">.</span>listeners<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">;</span>      store<span class="token punctuation">.</span>listeners<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 创建store和reducer</span><span class="token keyword">export</span> <span class="token keyword">const</span> createStore <span class="token operator">=</span> <span class="token punctuation">(</span>reducer<span class="token punctuation">,</span> initState<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  store<span class="token punctuation">.</span>state <span class="token operator">=</span> initState<span class="token punctuation">;</span>  store<span class="token punctuation">.</span>reducer <span class="token operator">=</span> reducer<span class="token punctuation">;</span>  <span class="token keyword">return</span> store<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> appContext <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> Provider <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> store<span class="token punctuation">,</span> children <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appContext.Provider</span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>store<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appContext.Provider</span><span class="token punctuation">></span></span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h2 id="App-jsx-5"><a href="#App-jsx-5" class="headerlink" title="App.jsx"></a>App.jsx</h2><pre class=" language-jsx"><code class="language-jsx"><span class="token comment" spellcheck="true">// 请从课程简介里下载本代码</span><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// Uncaught SyntaxError: Unexpected token '&lt;'</span><span class="token keyword">import</span> <span class="token punctuation">{</span> appContext<span class="token punctuation">,</span> createStore<span class="token punctuation">,</span> connect<span class="token punctuation">,</span> Provider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./redux.jsx"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">{</span> connentToUser <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./connects/connectToUser.js"</span><span class="token punctuation">;</span><span class="token keyword">const</span> reducer <span class="token operator">=</span> <span class="token punctuation">(</span>state<span class="token punctuation">,</span> <span class="token punctuation">{</span> type<span class="token punctuation">,</span> payload <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">"update"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      <span class="token operator">...</span>state<span class="token punctuation">,</span>      user<span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token operator">...</span>state<span class="token punctuation">.</span>user<span class="token punctuation">,</span>        <span class="token operator">...</span>payload<span class="token punctuation">,</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> state<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> initState <span class="token operator">=</span> <span class="token punctuation">{</span>  user<span class="token punctuation">:</span> <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"frank"</span><span class="token punctuation">,</span> age<span class="token punctuation">:</span> <span class="token number">23</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  group<span class="token punctuation">:</span> <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"前端组"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>reducer<span class="token punctuation">,</span> initState<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 方案2: 将组件的state提取到外部的store</span><span class="token keyword">export</span> <span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token comment" spellcheck="true">// 传递上下文</span>    <span class="token comment" spellcheck="true">// &lt;appContext.Provider value={store}></span>    <span class="token comment" spellcheck="true">//   &lt;大儿子 /></span>    <span class="token comment" spellcheck="true">//   &lt;二儿子 /></span>    <span class="token comment" spellcheck="true">//   &lt;幺儿子 /></span>    <span class="token comment" spellcheck="true">// &lt;/appContext.Provider></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Provider</span> <span class="token attr-name">store</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>store<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>      <span class="token operator">&lt;</span>大儿子 <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>二儿子 <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>幺儿子 <span class="token operator">/</span><span class="token operator">></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Provider</span><span class="token punctuation">></span></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// ......</span><span class="token keyword">const</span> User <span class="token operator">=</span> <span class="token function">connentToUser</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> user <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// ......</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">const</span> UserModifier <span class="token operator">=</span> <span class="token function">connentToUser</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> updateUser<span class="token punctuation">,</span> user<span class="token punctuation">,</span> <span class="token operator">...</span>props <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// ......</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h1 id="redux概念总结"><a href="#redux概念总结" class="headerlink" title="redux概念总结"></a>redux概念总结</h1><p><img src="D:\vs-vue\1-blog\hexo-blog\source_posts\手写redux\手写redux%5CUsers%5C13695%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1676032605733.png" alt="1676032605733"></p><p><img src="C:\Users\13695\AppData\Roaming\Typora\typora-user-images\1676032698339.png" alt="1676032698339"></p><h1 id="代码重构"><a href="#代码重构" class="headerlink" title="代码重构"></a>代码重构</h1><h2 id="redux-jsx-5"><a href="#redux-jsx-5" class="headerlink" title="redux.jsx"></a>redux.jsx</h2><pre class=" language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useContext<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token keyword">const</span> changed <span class="token operator">=</span> <span class="token punctuation">(</span>oldState<span class="token punctuation">,</span> newState<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">let</span> changed <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> oldState<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldState<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">!==</span> newState<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      changed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> changed<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 每次自己写warpper包装dispatch太麻烦,封装一个return wrapper的函数</span><span class="token comment" spellcheck="true">// 这个写法表示 先接收一个参数,再接收一个参数</span><span class="token comment" spellcheck="true">// export const connent = (selector,mapDispatchToProps) => (Component) => {</span><span class="token keyword">export</span> <span class="token keyword">const</span> connect <span class="token operator">=</span> <span class="token punctuation">(</span>selector<span class="token punctuation">,</span> dispatchSelector<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>Component<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// context只能在组件内部访问,则这里创建一个组件来封装dispatch的逻辑,然后通过这个组件获取context(权宜之计)</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 在wrapper使用state,调用更新方法,可以实现更新</span>    <span class="token comment" spellcheck="true">// 而且wrapper包装的是用到state的组件,所以更新时不会影响其他组件</span>    <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> update<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// const contextValue = useContext(appContext);</span>    <span class="token keyword">const</span> <span class="token punctuation">{</span> setState <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useContext</span><span class="token punctuation">(</span>appContext<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// const { appState, setAppState } = contextValue;</span>    <span class="token keyword">const</span> data <span class="token operator">=</span> selector <span class="token operator">?</span> <span class="token function">selector</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">{</span> state<span class="token punctuation">:</span> state <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// // 规范setState流程</span>    <span class="token comment" spellcheck="true">// const dispatch = (action) => {</span>    <span class="token comment" spellcheck="true">//   // setAppState(reducer(appState, action));</span>    <span class="token comment" spellcheck="true">//   setState(reducer(state, action));</span>    <span class="token comment" spellcheck="true">//   // update({}); // 但是,其他使用store的无法根据store内的改变而重新渲染</span>    <span class="token comment" spellcheck="true">// };</span>    <span class="token comment" spellcheck="true">// 每次都要传update,简化</span>    <span class="token keyword">const</span> dispatchers <span class="token operator">=</span> dispatchSelector      <span class="token operator">?</span> <span class="token function">dispatchSelector</span><span class="token punctuation">(</span>dispatch<span class="token punctuation">)</span>      <span class="token punctuation">:</span> <span class="token punctuation">{</span> dispatch <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 只订阅一次</span>    <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//   const unsubscribe =</span>      <span class="token keyword">return</span> store<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token keyword">const</span> newData <span class="token operator">=</span> selector <span class="token operator">?</span> <span class="token function">selector</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">{</span> state <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 判断data(store.state.xxx)是否发生变化</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">changed</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> newData<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"update"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//   return unsubscribe; // 取消订阅</span>      <span class="token comment" spellcheck="true">// 这里最好取消订阅,否则selector变化时可能出现重复订阅</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>selector<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 如果组件有传值,应该传递(props)</span>    <span class="token comment" spellcheck="true">// return &lt;Component {...props} dispatch={dispatch} state={state} />;</span>    <span class="token comment" spellcheck="true">// return &lt;Component {...props} dispatch={dispatch} {...data} />;</span>    <span class="token keyword">return</span> <span class="token operator">&lt;</span>Component <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token operator">...</span>dispatchers<span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token operator">...</span>data<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">let</span> state <span class="token operator">=</span> undefined<span class="token punctuation">;</span><span class="token keyword">let</span> reducer <span class="token operator">=</span> undefined<span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 监听者</span><span class="token keyword">let</span> listeners <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> setState <span class="token operator">=</span> <span class="token punctuation">(</span>newState<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// console.log(newState); 没有调用组件的setState,所以不会刷新</span>  state <span class="token operator">=</span> newState<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 遍历监听者列表,调用用户传入的(更新)方法</span>  listeners<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">fn</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token punctuation">{</span>   <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> state<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 规范setState流程</span>  dispatch<span class="token punctuation">:</span> <span class="token punctuation">(</span>action<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// setAppState(reducer(appState, action));</span>    <span class="token function">setState</span><span class="token punctuation">(</span><span class="token function">reducer</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// update({}); // 但是,其他使用store的无法根据store内的改变而重新渲染</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 让所有使用store的组件监听store的变化,实现更新渲染</span>  <span class="token function">subscribe</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>    listeners<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 返回取消订阅的函数</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      <span class="token keyword">const</span> index <span class="token operator">=</span> listeners<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">;</span>      listeners<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> dispatch <span class="token operator">=</span> store<span class="token punctuation">.</span>dispatch<span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 创建store和reducer</span><span class="token keyword">export</span> <span class="token keyword">const</span> createStore <span class="token operator">=</span> <span class="token punctuation">(</span>_reducer<span class="token punctuation">,</span> initState<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  state <span class="token operator">=</span> initState<span class="token punctuation">;</span>  reducer <span class="token operator">=</span> _reducer<span class="token punctuation">;</span>  <span class="token keyword">return</span> store<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> appContext <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> Provider <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> store<span class="token punctuation">,</span> children <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appContext.Provider</span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>store<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appContext.Provider</span><span class="token punctuation">></span></span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h1 id="redux如何支持异步"><a href="#redux如何支持异步" class="headerlink" title="redux如何支持异步"></a>redux如何支持异步</h1>]]></content>
      
      
      <categories>
          
          <category> redux </category>
          
          <category> 状态管理 </category>
          
          <category> react </category>
          
          <category> 脚手架 </category>
          
          <category> js </category>
          
          <category> javaScript </category>
          
          <category> 造轮子 </category>
          
          <category> 框架 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 前端 </tag>
            
            <tag> 造轮子 </tag>
            
            <tag> 框架 </tag>
            
            <tag> redux </tag>
            
            <tag> 状态管理 </tag>
            
            <tag> react </tag>
            
            <tag> 脚手架 </tag>
            
            <tag> javaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手写pinia(一种思路)</title>
      <link href="/2023/02/06/frontend/vue/shou-xie-pinia/shou-xie-pinia/"/>
      <url>/2023/02/06/frontend/vue/shou-xie-pinia/shou-xie-pinia/</url>
      
        <content type="html"><![CDATA[<h1 id="本笔记内容来自B站up前端小野森森-1的视频"><a href="#本笔记内容来自B站up前端小野森森-1的视频" class="headerlink" title="本笔记内容来自B站up前端小野森森-1的视频"></a>本笔记内容来自B站up<strong>前端小野森森-1</strong>的视频</h1><h1 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h1><pre class=" language-shell"><code class="language-shell">vue create mypinia# 添加pinia依赖yarn add pinia </code></pre><p><img src="img.png" alt="项目结构"><br><img src="img_1.png" alt="main.js"></p><h2 id="store"><a href="#store" class="headerlink" title="store/"></a>store/</h2><h3 id="index-js"><a href="#index-js" class="headerlink" title="index.js"></a>index.js</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> useTodoListStore <span class="token keyword">from</span> <span class="token string">'./todoList'</span><span class="token keyword">export</span> <span class="token punctuation">{</span>    useTodoListStore<span class="token punctuation">}</span></code></pre><h3 id="todoList-js"><a href="#todoList-js" class="headerlink" title="todoList.js"></a>todoList.js</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> defineStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'pinia'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineStore</span><span class="token punctuation">(</span><span class="token string">'todoList'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    state<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>        todos<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// id: number text: string isFinished: boolean</span>        filter<span class="token punctuation">:</span> <span class="token string">'all'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// finished unfinished</span>        nextId<span class="token punctuation">:</span> <span class="token number">0</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    actions<span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 添加todo</span>        <span class="token function">addTodo</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>todos<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                id<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>nextId<span class="token operator">++</span><span class="token punctuation">,</span>                text<span class="token punctuation">,</span>                isFinished<span class="token punctuation">:</span> <span class="token boolean">false</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 转换todo状态</span>        <span class="token function">toggleTodo</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>todos <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>todos<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>todo <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>todos<span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 找到要修改的todo</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>todo<span class="token punctuation">.</span>id <span class="token operator">===</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">// 转换状态    </span>                    todo<span class="token punctuation">.</span>isFinished <span class="token operator">=</span> <span class="token operator">!</span>todo<span class="token punctuation">.</span>isFinished                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>todo<span class="token punctuation">)</span>                <span class="token punctuation">}</span>                <span class="token keyword">return</span> todo            <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token function">removeTodo</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 过滤id对应的元素</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>todos <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>todos<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>todo <span class="token operator">=</span><span class="token operator">></span> todo<span class="token punctuation">.</span>id <span class="token operator">!==</span> id<span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    getters<span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// state=>获取这里的state返回的数据</span>        <span class="token comment" spellcheck="true">// 获取所有已完成的</span>        <span class="token function">finishedTodos</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> state<span class="token punctuation">.</span>todos<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>todo <span class="token operator">=</span><span class="token operator">></span> todo<span class="token punctuation">.</span>isFinished<span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 获取所有未完成的</span>        <span class="token function">undefinedTodos</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> state<span class="token punctuation">.</span>todos<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>todo <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">!</span>todo<span class="token punctuation">.</span>isFinished<span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 获取不同状态的todos</span>        <span class="token function">filterTodos</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>filter<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">case</span> <span class="token string">'finished'</span><span class="token punctuation">:</span>                    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>finishedTodos                <span class="token keyword">case</span> <span class="token string">'unfinished'</span><span class="token punctuation">:</span>                    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>undefinedTodos                <span class="token keyword">default</span><span class="token punctuation">:</span>                    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>todos            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><h2 id="app-vue"><a href="#app-vue" class="headerlink" title="app.vue"></a>app.vue</h2><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> useTodoListStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"@/store"</span><span class="token punctuation">;</span><span class="token keyword">const</span> todoListStore <span class="token operator">=</span> <span class="token function">useTodoListStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>todoListStore<span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span> </code></pre><h2 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h2><blockquote><p>store里的东西(filter,todos…)是ObjectRefImpl<br>getter里的东西(finishedTodos…)是计算属性(computedRefImpl)</p></blockquote><p><img src="img_2.png" alt="img_2.png"></p><h1 id="先实现简单的todos程序"><a href="#先实现简单的todos程序" class="headerlink" title="先实现简单的todos程序"></a>先实现简单的todos程序</h1><h2 id="components-TodoList"><a href="#components-TodoList" class="headerlink" title="components/TodoList/"></a>components/TodoList/</h2><h3 id="index-vue"><a href="#index-vue" class="headerlink" title="index.vue"></a>index.vue</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>todo-tab</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>todo-tab</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>todo-form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>todo-form</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>todos</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>todos</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token keyword">import</span> TodoTab <span class="token keyword">from</span> <span class="token string">"./TodoTab"</span><span class="token punctuation">;</span><span class="token keyword">import</span> TodoForm <span class="token keyword">from</span> <span class="token string">"./TodoForm"</span><span class="token punctuation">;</span><span class="token keyword">import</span> Todos <span class="token keyword">from</span> <span class="token string">"./Todos"</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style language-css"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre><h3 id="TodoForm-vue"><a href="#TodoForm-vue" class="headerlink" title="TodoForm.vue"></a>TodoForm.vue</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>      <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>      <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Please input something...<span class="token punctuation">"</span></span>      <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>inputRef<span class="token punctuation">"</span></span>    <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>addTodo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Add Todo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">{</span> useTodoListStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"@/store"</span><span class="token punctuation">;</span><span class="token keyword">const</span> inputRef <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 绑定input框</span><span class="token keyword">const</span> todoListStore <span class="token operator">=</span> <span class="token function">useTodoListStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> addTodo <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>inputRef<span class="token punctuation">.</span>value <span class="token operator">===</span> <span class="token string">""</span> <span class="token operator">||</span> inputRef<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  todoListStore<span class="token punctuation">.</span><span class="token function">addTodo</span><span class="token punctuation">(</span>inputRef<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 添加todo到全局状态</span>  inputRef<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 清空内容</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style language-css"><span class="token selector">div </span><span class="token punctuation">{</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre><h3 id="Todos-vue"><a href="#Todos-vue" class="headerlink" title="Todos.vue"></a>Todos.vue</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item of todoListStore.filterTodos<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span>        <span class="token attr-name">:checked</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.isFinished<span class="token punctuation">"</span></span>        <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todoListStore.toggleTodo(item.id)<span class="token punctuation">"</span></span>      <span class="token punctuation">/></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{ finished: item.isFinished }<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{ item.text }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todoListStore.removeTodo(item.id)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> useTodoListStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"@/store"</span><span class="token punctuation">;</span><span class="token keyword">const</span> todoListStore <span class="token operator">=</span> <span class="token function">useTodoListStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style language-css"><span class="token selector">div </span><span class="token punctuation">{</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.finished</span> </span><span class="token punctuation">{</span>  <span class="token property">text-decoration</span><span class="token punctuation">:</span> line-through<span class="token punctuation">;</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre><h3 id="TodoTab-vue"><a href="#TodoTab-vue" class="headerlink" title="TodoTab.vue"></a>TodoTab.vue</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>      <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span>      <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>setFilter(<span class="token punctuation">'</span>all<span class="token punctuation">'</span>)<span class="token punctuation">"</span></span>      <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{ active: todoListStore.filter <span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token punctuation">'</span>all<span class="token punctuation">'</span> }<span class="token punctuation">"</span></span>      <span class="token punctuation">></span></span>All<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span>    <span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>      <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span>      <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>setFilter(<span class="token punctuation">'</span>finished<span class="token punctuation">'</span>)<span class="token punctuation">"</span></span>      <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{ active: todoListStore.filter <span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token punctuation">'</span>finished<span class="token punctuation">'</span> }<span class="token punctuation">"</span></span>      <span class="token punctuation">></span></span>Finished<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span>    <span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>      <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span>      <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>setFilter(<span class="token punctuation">'</span>unfinished<span class="token punctuation">'</span>)<span class="token punctuation">"</span></span>      <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{ active: todoListStore.filter <span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token punctuation">'</span>unfinished<span class="token punctuation">'</span> }<span class="token punctuation">"</span></span>      <span class="token punctuation">></span></span>UnFinished<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span>    <span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> useTodoListStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"@/store"</span><span class="token punctuation">;</span><span class="token keyword">const</span> todoListStore <span class="token operator">=</span> <span class="token function">useTodoListStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> setFilter <span class="token operator">=</span> <span class="token punctuation">(</span>filter<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  todoListStore<span class="token punctuation">.</span><span class="token function">$patch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> filter <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style language-css"><span class="token selector">div </span><span class="token punctuation">{</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.active</span> </span><span class="token punctuation">{</span>  <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#000</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">a </span><span class="token punctuation">{</span>  <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p><img src="img_3.png" alt="img_3.png"></p><h1 id="手写pinia"><a href="#手写pinia" class="headerlink" title="手写pinia"></a>手写pinia</h1><p><img src="img_4.png" alt="main.js"><br><img src="img_6.png" alt="store/todoList.js"></p><blockquote><p>猜测: pinia会创建一个根store,所有用户定义的store都会挂到该父store上</p></blockquote><p><img src="img_5.png" alt="img_5.png"></p><h2 id="pinia"><a href="#pinia" class="headerlink" title="pinia/"></a>pinia/</h2><h3 id="index-js-1"><a href="#index-js-1" class="headerlink" title="index.js"></a>index.js</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> createPinia <span class="token keyword">from</span> <span class="token string">'./createPinia'</span><span class="token keyword">import</span> defineStore <span class="token keyword">from</span> <span class="token string">'./defineStore'</span><span class="token keyword">export</span> <span class="token punctuation">{</span>    createPinia<span class="token punctuation">,</span>    defineStore<span class="token punctuation">}</span>   </code></pre><h3 id="createPinia-js"><a href="#createPinia-js" class="headerlink" title="createPinia.js"></a>createPinia.js</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vue'</span> <span class="token comment" spellcheck="true">// 接收一个普通对象然后返回该普通对象的响应式代理(嵌套的都会被代理)</span><span class="token keyword">import</span> <span class="token punctuation">{</span> patch <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'./apis'</span> <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> piniaStore <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 暴露操作piniaStore的方法</span>    <span class="token keyword">function</span> <span class="token function">setSubStore</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> store<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>piniaStore<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            piniaStore<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> store            piniaStore<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">.</span>$patch <span class="token operator">=</span> patch <span class="token comment" spellcheck="true">// 给子store添加patch方法</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> piniaStore    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">install</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 创建pinia实例</span>        <span class="token comment" spellcheck="true">// 暴露piniaStore</span>        <span class="token comment" spellcheck="true">// app.provide('piniaStore',piniaStore)        </span>        app<span class="token punctuation">.</span><span class="token function">provide</span><span class="token punctuation">(</span><span class="token string">'setSubStore'</span><span class="token punctuation">,</span> setSubStore<span class="token punctuation">)</span>     <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>        install    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/** * 可以被vue实例.use的,包含这种结构 *  * { *  install (app) {} * } */</span></code></pre><h3 id="defineStore-js"><a href="#defineStore-js" class="headerlink" title="defineStore.js"></a>defineStore.js</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> inject<span class="token punctuation">,</span> reactive<span class="token punctuation">,</span> toRef<span class="token punctuation">,</span> computed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token keyword">import</span> <span class="token punctuation">{</span>    createActions<span class="token punctuation">,</span>    createState<span class="token punctuation">,</span>    createGetters<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'./options'</span><span class="token comment" spellcheck="true">// 定义store</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span>    name<span class="token punctuation">,</span>    <span class="token punctuation">{</span>        state<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// function</span>        getters<span class="token punctuation">,</span>        actions    <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 创建和挂载state</span>    state <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> state <span class="token operator">===</span> <span class="token string">'function'</span> <span class="token operator">&amp;&amp;</span> <span class="token function">createState</span><span class="token punctuation">(</span>store<span class="token punctuation">,</span> state<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 创建和挂载actions</span>    actions <span class="token operator">&amp;&amp;</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>actions<span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token function">createActions</span><span class="token punctuation">(</span>store<span class="token punctuation">,</span> actions<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 创建和挂载getters</span>    getters <span class="token operator">&amp;&amp;</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>getters<span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token function">createGetters</span><span class="token punctuation">(</span>store<span class="token punctuation">,</span> getters<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 获取暴露的setSubStore方法</span>        <span class="token keyword">const</span> setSubStore <span class="token operator">=</span> <span class="token function">inject</span><span class="token punctuation">(</span><span class="token string">'setSubStore'</span><span class="token punctuation">)</span>        <span class="token keyword">const</span> piniaStore <span class="token operator">=</span> <span class="token function">setSubStore</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token function">reactive</span><span class="token punctuation">(</span>store<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> piniaStore<span class="token punctuation">[</span>name<span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="pinia-options"><a href="#pinia-options" class="headerlink" title="pinia/options/"></a>pinia/options/</h2><h3 id="state-js"><a href="#state-js" class="headerlink" title="state.js"></a>state.js</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> reactive<span class="token punctuation">,</span> toRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createState</span><span class="token punctuation">(</span>store<span class="token punctuation">,</span> state<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> _state <span class="token operator">=</span> <span class="token function">state</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 指向state(一个函数),获取其返回值</span>    store<span class="token punctuation">.</span>$state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span>_state<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// state转响应式,操作时就是操作他 </span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> _state<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// key in (todos,filter,nextId)</span>        <span class="token comment" spellcheck="true">// 创建一个 ref 对象，其 value 值指向另一个对象中的某个属性</span>        <span class="token comment" spellcheck="true">// store.key.value == store.$state.key ($state.todos)</span>        store<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">toRef</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span>$state<span class="token punctuation">,</span> key<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="actions-js"><a href="#actions-js" class="headerlink" title="actions.js"></a>actions.js</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">/*    actions: {        // 添加todo        addTodo(text) {            this.todos.push({                id: this.nextId++,                text,                isFinished: false            })        },        ...    }*/</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createActions</span><span class="token punctuation">(</span>store<span class="token punctuation">,</span>actions<span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> method <span class="token keyword">in</span> actions<span class="token punctuation">)</span> <span class="token punctuation">{</span>        store<span class="token punctuation">[</span>method<span class="token punctuation">]</span> <span class="token operator">=</span> actions<span class="token punctuation">[</span>method<span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="getters-js"><a href="#getters-js" class="headerlink" title="getters.js"></a>getters.js</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> computed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token comment" spellcheck="true">/*        getters: {            // state=>获取这里的state             finishedTodos(state) {                return state.todos.filter(todo => todo.isFinished)            },        }        ...*/</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createGetters</span><span class="token punctuation">(</span>store<span class="token punctuation">,</span> getters<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> getter <span class="token keyword">in</span> getters<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// bind,把getter方法的this指向store.$state,并传一个参数</span>        store<span class="token punctuation">[</span>getter<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span>getters<span class="token punctuation">[</span>getter<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span>$state<span class="token punctuation">,</span> store<span class="token punctuation">.</span>$state<span class="token punctuation">)</span><span class="token punctuation">)</span>        store<span class="token punctuation">.</span>$state<span class="token punctuation">[</span>getter<span class="token punctuation">]</span> <span class="token operator">=</span> store<span class="token punctuation">[</span>getter<span class="token punctuation">]</span> <span class="token comment" spellcheck="true">// state.xxx</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="index-js-2"><a href="#index-js-2" class="headerlink" title="index.js"></a>index.js</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> createState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'./state'</span><span class="token keyword">import</span> <span class="token punctuation">{</span> createActions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'./actions'</span><span class="token keyword">import</span> <span class="token punctuation">{</span> createGetters <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'./getters'</span><span class="token keyword">export</span> <span class="token punctuation">{</span>    createState<span class="token punctuation">,</span>    createActions<span class="token punctuation">,</span>    createGetters<span class="token punctuation">}</span></code></pre><h1 id="git仓库"><a href="#git仓库" class="headerlink" title="git仓库"></a>git仓库</h1><blockquote><p><a href="https://gitee.com/malguy/mypinia">https://gitee.com/malguy/mypinia</a><br><a href="https://github.com/malred/mypinia">https://github.com/malred/mypinia</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> pinia </category>
          
          <category> 状态管理 </category>
          
          <category> vue </category>
          
          <category> js </category>
          
          <category> javaScript </category>
          
          <category> 造轮子 </category>
          
          <category> 框架 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 前端 </tag>
            
            <tag> 造轮子 </tag>
            
            <tag> 框架 </tag>
            
            <tag> 状态管理 </tag>
            
            <tag> javaScript </tag>
            
            <tag> pinia </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手写vue2</title>
      <link href="/2023/02/05/frontend/vue/shou-xie-vue2-vuerouter-vuex/shou-xie-vue2-vuerouter-vuex/"/>
      <url>/2023/02/05/frontend/vue/shou-xie-vue2-vuerouter-vuex/shou-xie-vue2-vuerouter-vuex/</url>
      
        <content type="html"><![CDATA[<h1 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h1><h2 id="rollup开发环境搭建"><a href="#rollup开发环境搭建" class="headerlink" title="rollup开发环境搭建"></a>rollup开发环境搭建</h2><pre class=" language-shell"><code class="language-shell">npm init -y# 工具库一般用rollup打包,babel则是编译高级语法(->低级语法),来适配不同浏览器npm i rollup rollup-plugin-babel @babel/core @babel/preset-env --save-dev# 使用淘宝新镜像下载npm i rollup rollup-plugin-babel @babel/core @babel/preset-env --registry=https://registry.npmmirror.com</code></pre><h3 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h3><p><img src="img_5.png" alt="img_5.png"></p><h3 id="要打包的src-index-js"><a href="#要打包的src-index-js" class="headerlink" title="要打包的src/index.js"></a>要打包的src/index.js</h3><pre class=" language-jsx"><code class="language-jsx"><span class="token keyword">export</span> <span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token number">100</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    a<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="配置文件-babelrc"><a href="#配置文件-babelrc" class="headerlink" title="配置文件 .babelrc"></a>配置文件 .babelrc</h3><pre class=" language-shell"><code class="language-shell">{    "presets": [        // preset是很多插件的集合        "@babel/preset-env"    ]}</code></pre><h3 id="配置文件-rollup-config-js"><a href="#配置文件-rollup-config-js" class="headerlink" title="配置文件 rollup.config.js"></a>配置文件 rollup.config.js</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// rollup默认可以导出一个对象,作为打包的配置文件</span><span class="token comment" spellcheck="true">// import babel from 'rollup-plugin-babel' // es6导入语法</span><span class="token keyword">const</span> babel <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'rollup-plugin-babel'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// export default {</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>    input<span class="token punctuation">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 入口</span>    output<span class="token punctuation">:</span> <span class="token punctuation">{</span>        file<span class="token punctuation">:</span> <span class="token string">'./dist/vue.js'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 出口</span>        name<span class="token punctuation">:</span> <span class="token string">'Vue'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 打包后全局添加Vue对象 global Vue</span>        format<span class="token punctuation">:</span> <span class="token string">'umd'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// esm es6模块 commonjs模块 iife自执行函数 umd通用模块规范(兼容AMD和commonjs,iife,不兼容es6)</span>        sourcemap<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 可以调试源代码</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 可以使用的插件</span>    plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token function">babel</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            exclude<span class="token punctuation">:</span> <span class="token string">'node_modules/**'</span> <span class="token comment" spellcheck="true">// 排除nodemodule下所有文件</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><h3 id="测试用html"><a href="#测试用html" class="headerlink" title="测试用html"></a>测试用html</h3><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><img src="img_1.png" alt="img_1.png"><img src="img_2.png" alt="img_2.png"><img src="img_3.png" alt="img_3.png"><img src="img_4.png" alt="img_4.png"></p><h1 id="初始化数据"><a href="#初始化数据" class="headerlink" title="初始化数据"></a>初始化数据</h1><h2 id="index-js"><a href="#index-js" class="headerlink" title="index.js"></a>index.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span>initMixin<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./init"</span><span class="token comment" spellcheck="true">// class会把所有方法耦合在一起</span><span class="token keyword">function</span> <span class="token function">Vue</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// options就是用户提供的选项 </span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_init</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 初始化</span><span class="token punctuation">}</span><span class="token function">initMixin</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 拓展了vue,添加init方法</span><span class="token keyword">export</span> <span class="token keyword">default</span> Vue</code></pre><h2 id="init-js"><a href="#init-js" class="headerlink" title="init.js"></a>init.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span>initState<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./state"</span><span class="token comment" spellcheck="true">// 提供给vue来使用(此时全局还没有vue对象,所以没办法直接挂载)</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">initMixin</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 初始化操作</span>    Vue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>_init <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 将用户传入的options挂载到vue对象上</span>        <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">this</span> <span class="token comment" spellcheck="true">// 原型中的this表示实例</span>        vm<span class="token punctuation">.</span>$options <span class="token operator">=</span> options <span class="token comment" spellcheck="true">// $xxx 表示是vue的属性(在(vue里,如果data里的变量名是$开头,vue是拿不到的)</span>        <span class="token comment" spellcheck="true">// 初始化状态</span>        <span class="token function">initState</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="state-js"><a href="#state-js" class="headerlink" title="state.js"></a>state.js</h2><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 对options内属性和方法进行操作 </span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">initState</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> opts <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options    <span class="token comment" spellcheck="true">// debugger</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// data数据的初始化</span>        <span class="token function">initData</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 数据初始化(转为响应式)</span><span class="token keyword">function</span> <span class="token function">initData</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> data <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>data    <span class="token comment" spellcheck="true">// 如果data是函数,就调用并获取其返回值</span>    data <span class="token operator">=</span> <span class="token keyword">typeof</span> data <span class="token operator">===</span> <span class="token string">'function'</span> <span class="token operator">?</span> data<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> data    <span class="token comment" spellcheck="true">// data挂载到vm上</span>    vm<span class="token punctuation">.</span>_data <span class="token operator">=</span> data    <span class="token comment" spellcheck="true">// debugger</span>    <span class="token comment" spellcheck="true">// 数据劫持 </span>    <span class="token function">observe</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 监听数据变化</span><span class="token punctuation">}</span></code></pre><h1 id="实现对象响应式"><a href="#实现对象响应式" class="headerlink" title="实现对象响应式"></a>实现对象响应式</h1><h2 id="src-observe-index-js"><a href="#src-observe-index-js" class="headerlink" title="src\observe\index.js"></a>src\observe\index.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">observe</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">debugger</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><h3 id="第一步测试-能否拿到data数据"><a href="#第一步测试-能否拿到data数据" class="headerlink" title="第一步测试,能否拿到data数据"></a>第一步测试,能否拿到data数据</h3><p><img src="img_6.png" alt="img_6.png"></p><h3 id="继续开发"><a href="#继续开发" class="headerlink" title="继续开发"></a>继续开发</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 观察data对象的类</span><span class="token keyword">class</span> <span class="token class-name">Observer</span> <span class="token punctuation">{</span>    <span class="token function">constructor</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// Object.defineProperty只能劫持已经存在的属性 (vue里提供了专门的api($set $delete ...)来解决)</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">walk</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token function">walk</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 循环对象,对属性依次劫持</span>        <span class="token comment" spellcheck="true">// 重新定义属性(vue2的性能瓶颈所在),每个变量都添加get/set监听</span>        Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>key <span class="token operator">=</span><span class="token operator">></span> <span class="token function">defineReactive</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> key<span class="token punctuation">,</span> data<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 对象转响应式的方法(重新定义)</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">defineReactive</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 闭包 属性劫持</span>    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 内部使用了外部的变量(value),所以value被保存到闭包</span>        <span class="token comment" spellcheck="true">// 取值时执行</span>        <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> value        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 修改时执行</span>        <span class="token keyword">set</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>newValue <span class="token operator">===</span> value<span class="token punctuation">)</span> <span class="token keyword">return</span>            <span class="token function">observe</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 设置值时,如果是对象,也需要转响应式! </span>            value <span class="token operator">=</span> newValue        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">observe</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// debugger</span>    <span class="token comment" spellcheck="true">// console.log(data)</span>    <span class="token comment" spellcheck="true">// 如果data不是对象</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> data <span class="token operator">!==</span> <span class="token string">'object'</span> <span class="token operator">||</span> data <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token comment" spellcheck="true">// 只对对象进行劫持</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 对data对象进行劫持</span>    <span class="token comment" spellcheck="true">// 判断是否被劫持 => 通过一个专门的实例来观测判断</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><h2 id="修改init-js-代理取操作值-vm-data-xxx-gt-vm-xxx"><a href="#修改init-js-代理取操作值-vm-data-xxx-gt-vm-xxx" class="headerlink" title="修改init.js,代理取操作值 vm._data.xxx -> vm.xxx"></a>修改init.js,代理取操作值 vm._data.xxx -&gt; vm.xxx</h2><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// ......</span><span class="token comment" spellcheck="true">// 代理取值和设置值,通过响应式的方法来改变实际操作的值</span><span class="token keyword">function</span> <span class="token function">proxy</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> target<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>        <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 返回vm[_data][key] (vm._data.key)</span>            <span class="token keyword">return</span> vm<span class="token punctuation">[</span>target<span class="token punctuation">]</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token keyword">set</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>newValue <span class="token operator">===</span> vm<span class="token punctuation">[</span>target<span class="token punctuation">]</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span>            <span class="token punctuation">}</span>            vm<span class="token punctuation">[</span>target<span class="token punctuation">]</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> newValue        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 数据初始化(转为响应式)</span><span class="token keyword">function</span> <span class="token function">initData</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> data <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>data    <span class="token comment" spellcheck="true">// 如果data是函数,就调用并获取其返回值</span>    data <span class="token operator">=</span> <span class="token keyword">typeof</span> data <span class="token operator">===</span> <span class="token string">'function'</span> <span class="token operator">?</span> data<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> data    <span class="token comment" spellcheck="true">// data挂载到vm上</span>    vm<span class="token punctuation">.</span>_data <span class="token operator">=</span> data    <span class="token comment" spellcheck="true">// debugger</span>    <span class="token comment" spellcheck="true">// 数据劫持 </span>    <span class="token function">observe</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 监听数据变化</span>    <span class="token comment" spellcheck="true">// 将vm._data代理,则用户操作值只需要vm.xxx(而不是vm._data.xxx)</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">proxy</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token string">'_data'</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 响应式的数据变化 (数据变化可以被监控) </span>    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// data: {</span>        <span class="token comment" spellcheck="true">//     name: 'zs',</span>        <span class="token comment" spellcheck="true">//     age: 12</span>        <span class="token comment" spellcheck="true">// }</span>        <span class="token comment" spellcheck="true">// vue3里data只能是函数,vue2则可以是函数和对象</span>        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token punctuation">{</span>                name<span class="token punctuation">:</span> <span class="token string">'zs'</span><span class="token punctuation">,</span>                age<span class="token punctuation">:</span> <span class="token number">12</span><span class="token punctuation">,</span>                obj<span class="token punctuation">:</span> <span class="token punctuation">{</span>                    sex<span class="token punctuation">:</span> <span class="token string">'boy'</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    vm<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">'ls'</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><img src="img_7.png" alt="img_7.png"><img src="img_8.png" alt="img_8.png"></p><h3 id="问题-只对第一层data进行响应式处理-而data-obj内的属性则没有转为响应式"><a href="#问题-只对第一层data进行响应式处理-而data-obj内的属性则没有转为响应式" class="headerlink" title="问题: 只对第一层data进行响应式处理,而data.obj内的属性则没有转为响应式"></a>问题: 只对第一层data进行响应式处理,而data.obj内的属性则没有转为响应式</h3><h2 id="修改src-observe-index-js"><a href="#修改src-observe-index-js" class="headerlink" title="修改src\observe\index.js"></a>修改src\observe\index.js</h2><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// ..... </span><span class="token comment" spellcheck="true">// 对象转响应式的方法(重新定义)</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">defineReactive</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 闭包 属性劫持</span>    <span class="token comment" spellcheck="true">// value可能是一个对象,需要对其进行响应式处理</span>    <span class="token function">observe</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 递归了,性能也会降低 &lt;&lt;-</span>    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 内部使用了外部的变量(value),所以value被保存到闭包</span>        <span class="token comment" spellcheck="true">// 取值时执行</span>        <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> value        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 修改时执行</span>        <span class="token keyword">set</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>newValue <span class="token operator">===</span> value<span class="token punctuation">)</span> <span class="token keyword">return</span>            value <span class="token operator">=</span> newValue        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// .....</span></code></pre><p><img src="img_9.png" alt="修改后,obj确实多了get和set方法"></p><h2 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h2><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 响应式的数据变化 (数据变化可以被监控) </span>    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// data: {</span>        <span class="token comment" spellcheck="true">//     name: 'zs',</span>        <span class="token comment" spellcheck="true">//     age: 12</span>        <span class="token comment" spellcheck="true">// }</span>        <span class="token comment" spellcheck="true">// vue3里data只能是函数,vue2则可以是函数和对象</span>        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token punctuation">{</span>                name<span class="token punctuation">:</span> <span class="token string">'zs'</span><span class="token punctuation">,</span>                age<span class="token punctuation">:</span> <span class="token number">12</span><span class="token punctuation">,</span>                obj<span class="token punctuation">:</span> <span class="token punctuation">{</span>                    sex<span class="token punctuation">:</span> <span class="token string">'boy'</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    vm<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">'ls'</span>    <span class="token comment" spellcheck="true">// 新增值时不会转响应式</span>    vm<span class="token punctuation">.</span>obj<span class="token punctuation">.</span>addr <span class="token operator">=</span> <span class="token punctuation">{</span>        code<span class="token punctuation">:</span> <span class="token number">201</span><span class="token punctuation">,</span>        desc<span class="token punctuation">:</span> <span class="token string">'华尔街'</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 改变已有值时会转响应式</span>    vm<span class="token punctuation">.</span>obj<span class="token punctuation">.</span>sex <span class="token operator">=</span> <span class="token punctuation">{</span>        sex<span class="token punctuation">:</span> <span class="token string">'boy'</span><span class="token punctuation">,</span>        age<span class="token punctuation">:</span> <span class="token number">112</span>    <span class="token punctuation">}</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h1 id="实现数组的响应式"><a href="#实现数组的响应式" class="headerlink" title="实现数组的响应式"></a>实现数组的响应式</h1><blockquote><p>1,原本的方式可以让数组转响应式,但是需要遍历,如果数组很大,则非常耗时!<br>2,如果数组内部有对象,也需要响应式处理</p></blockquote><h2 id="修改-src-observe-index-js"><a href="#修改-src-observe-index-js" class="headerlink" title="修改 src/observe/index.js"></a>修改 src/observe/index.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span>newArrayProto<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./array"</span><span class="token comment" spellcheck="true">// 观察data对象的类</span><span class="token keyword">class</span> <span class="token class-name">Observer</span> <span class="token punctuation">{</span>    <span class="token function">constructor</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 如果data是数组</span>            <span class="token comment" spellcheck="true">// 可以保留数组的特性,重写数组的部分方法 7个变异方法 可以修改数组本身</span>            <span class="token comment" spellcheck="true">// data.__proto__ = { // 这样重新指定原型链,会导致数组原有属性和方法的缺失</span>            <span class="token comment" spellcheck="true">//     push() {</span>            <span class="token comment" spellcheck="true">//         // 重写push</span>            <span class="token comment" spellcheck="true">//         console.log('push')</span>            <span class="token comment" spellcheck="true">//     }</span>            <span class="token comment" spellcheck="true">// }</span>            data<span class="token punctuation">.</span>__proto__ <span class="token operator">=</span> newArrayProto            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">observeArray</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>            <span class="token keyword">return</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// Object.defineProperty只能劫持已经存在的属性 (vue里提供了专门的api($set $delete ...)来解决)</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">walk</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// ...... </span>    <span class="token comment" spellcheck="true">// 观测,对数组和数组里的对象进行响应式处理</span>    <span class="token function">observeArray</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        data<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> <span class="token function">observe</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// ......</span></code></pre><h2 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h2><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token comment" spellcheck="true">// 响应式的数据变化 (数据变化可以被监控) </span>    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token punctuation">{</span>                arr<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'2'</span><span class="token punctuation">,</span> <span class="token string">'cat'</span><span class="token punctuation">,</span> <span class="token string">'ant'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>a<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">]</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 一般操作数组很少用下标,一般是用数组提供的方法</span>    vm<span class="token punctuation">.</span>arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'bear'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 数组里的对象也需要被劫持</span>    vm<span class="token punctuation">.</span>arr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">100</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h3 id="问题-使用变异方法添加的数组元素没有转响应式"><a href="#问题-使用变异方法添加的数组元素没有转响应式" class="headerlink" title="问题: 使用变异方法添加的数组元素没有转响应式"></a>问题: 使用变异方法添加的数组元素没有转响应式</h3><p><img src="img_10.png" alt="使用变异方法添加的数组元素没有转响应式"></p><h2 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h2><h3 id="src-observe-index-js-1"><a href="#src-observe-index-js-1" class="headerlink" title="src/observe/index.js"></a>src/observe/index.js</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span>newArrayProto<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./array"</span><span class="token comment" spellcheck="true">// 观察data对象的类</span><span class="token keyword">class</span> <span class="token class-name">Observer</span> <span class="token punctuation">{</span>    <span class="token function">constructor</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token string">'__ob__'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>            value<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">,</span>            <span class="token comment" spellcheck="true">// 如果data是对象,则加上__ob__后,会一直进行响应式处理walk(在构造函数调用了),然后栈溢出</span>            enumerable<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token comment" spellcheck="true">// 不可枚举,(循环时无法获取)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// 把observer实例挂载到data,则array.js也可以使用observer的观测数组方法</span>        <span class="token comment" spellcheck="true">// 如果data上有一个__ob__属性,则说明被观测过</span>        <span class="token comment" spellcheck="true">// data.__ob__ = this</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 如果data是数组</span>            <span class="token comment" spellcheck="true">// 可以保留数组的特性,重写数组的部分方法 7个变异方法 可以修改数组本身</span>            <span class="token comment" spellcheck="true">// data.__proto__ = { // 这样重新指定原型链,会导致数组原有属性和方法的缺失</span>            <span class="token comment" spellcheck="true">//     push() {</span>            <span class="token comment" spellcheck="true">//         // 重写push</span>            <span class="token comment" spellcheck="true">//         console.log('push')</span>            <span class="token comment" spellcheck="true">//     }</span>            <span class="token comment" spellcheck="true">// }</span>            data<span class="token punctuation">.</span>__proto__ <span class="token operator">=</span> newArrayProto            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">observeArray</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>            <span class="token keyword">return</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// Object.defineProperty只能劫持已经存在的属性 (vue里提供了专门的api($set $delete ...)来解决)</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">walk</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token function">walk</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 循环对象,对属性依次劫持</span>        <span class="token comment" spellcheck="true">// 重新定义属性(vue2的性能瓶颈所在),每个变量都添加get/set监听</span>        Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>key <span class="token operator">=</span><span class="token operator">></span> <span class="token function">defineReactive</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> key<span class="token punctuation">,</span> data<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 观测,对数组和数组里的对象进行响应式处理</span>    <span class="token function">observeArray</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        data<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> <span class="token function">observe</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// ......</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">observe</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// debugger</span>    <span class="token comment" spellcheck="true">// console.log(data)</span>    <span class="token comment" spellcheck="true">// 如果data不是对象</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> data <span class="token operator">!==</span> <span class="token string">'object'</span> <span class="token operator">||</span> data <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token comment" spellcheck="true">// 只对对象进行劫持</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>__ob__ <span class="token keyword">instanceof</span> <span class="token class-name">Observer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 说明被代理过</span>        <span class="token keyword">return</span> data<span class="token punctuation">.</span>__ob__    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 对data对象进行劫持</span>    <span class="token comment" spellcheck="true">// 判断是否被劫持 => 通过一个专门的实例来观测判断</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><h3 id="src-observe-array-js"><a href="#src-observe-array-js" class="headerlink" title="src/observe/array.js"></a>src/observe/array.js</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 重写数组部分方法</span><span class="token keyword">let</span> oldArrayProto <span class="token operator">=</span> Array<span class="token punctuation">.</span>prototype <span class="token comment" spellcheck="true">// 获取数组的原型</span><span class="token comment" spellcheck="true">// newArrayProto = oldArrayProto 拿到了旧原型</span><span class="token keyword">export</span> <span class="token keyword">let</span> newArrayProto <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>oldArrayProto<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 重写</span><span class="token keyword">let</span> methods <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token comment" spellcheck="true">// 找到所有的变异方法(可以修改数组的方法)</span>    <span class="token comment" spellcheck="true">// push 将新元素添加到数组的末尾，并返回新的长度</span>    <span class="token comment" spellcheck="true">// pop 删除数组的最后一个元素，并返回该元素 </span>    <span class="token comment" spellcheck="true">// shift 移除数组的第一项 </span>    <span class="token comment" spellcheck="true">// unshift 将新元素添加到数组的开头，并返回新的长度</span>    <span class="token comment" spellcheck="true">// reverse 反转数组中元素的顺序 </span>    <span class="token comment" spellcheck="true">// sort 排序</span>    <span class="token comment" spellcheck="true">// splice 从数组中添加/删除元素</span>    <span class="token string">'push'</span><span class="token punctuation">,</span> <span class="token string">'pop'</span><span class="token punctuation">,</span>    <span class="token string">'shift'</span><span class="token punctuation">,</span> <span class="token string">'unshift'</span><span class="token punctuation">,</span>    <span class="token string">'reverse'</span><span class="token punctuation">,</span>    <span class="token string">'sort'</span><span class="token punctuation">,</span>    <span class="token string">'splice'</span><span class="token punctuation">]</span>methods<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>method <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// arr.push(1,2,3)</span>    <span class="token comment" spellcheck="true">// 重写方法</span>    newArrayProto<span class="token punctuation">[</span>method<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 调用</span>        <span class="token comment" spellcheck="true">// 内部调用原方法,函数的劫持,切片编程</span>        <span class="token keyword">const</span> result <span class="token operator">=</span> oldArrayProto<span class="token punctuation">[</span>method<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 保留旧方法的逻辑 </span>        <span class="token comment" spellcheck="true">// 对新增的数据再次进行劫持</span>        <span class="token keyword">let</span> inserted <span class="token comment" spellcheck="true">// 是一个数组</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>method<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">case</span> <span class="token string">'unshift'</span><span class="token punctuation">:</span>            <span class="token keyword">case</span> <span class="token string">'push'</span><span class="token punctuation">:</span>                inserted <span class="token operator">=</span> args                <span class="token keyword">break</span>            <span class="token keyword">case</span> <span class="token string">'splice'</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">// splice(开始位置,结束位置,{新增数据},{新增数据})</span>                <span class="token comment" spellcheck="true">// 获取新增的数据</span>                inserted <span class="token operator">=</span> args<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 去掉前两个,拿到剩下的</span>                <span class="token keyword">break</span>            <span class="token keyword">default</span><span class="token punctuation">:</span>                <span class="token keyword">break</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// console.log(inserted)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>inserted<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 数组转响应式</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>__ob__<span class="token punctuation">.</span><span class="token function">observeArray</span><span class="token punctuation">(</span>inserted<span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> result    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><h2 id="测试-2"><a href="#测试-2" class="headerlink" title="测试"></a>测试</h2><p><img src="img_11.png" alt="img_11.png"></p><h1 id="解析模板参数"><a href="#解析模板参数" class="headerlink" title="解析模板参数 "></a>解析模板参数 </h1><blockquote><p>实现解析表达式的方案:</p></blockquote><ul><li>1,模板引擎 -&gt; 性能差,需要正则匹配替换 vue1.0 -&gt; 没有引入虚拟dom</li><li>2,采用<strong>虚拟dom</strong> -&gt; 数据变化后,比较虚拟dom的差异,最后更新需要更新的地方,核心就是将模板变成js语法,通过js语法生成虚拟dom</li></ul><blockquote><p>涉及语法转换,如 es6-&gt;es5 css压缩<br>需要先变成语法树再重新组装代码,将template语法转换成render函数</p></blockquote><h2 id="配置一下插件-优化import的编码体验"><a href="#配置一下插件-优化import的编码体验" class="headerlink" title="配置一下插件,优化import的编码体验"></a>配置一下插件,优化import的编码体验</h2><pre class=" language-shell"><code class="language-shell"># node插件,可以简化导入npm i @rollup/plugin-node-resolvenpm i @rollup/plugin-node-resolve --registry=https://registry.npmmirror.com</code></pre><h3 id="rollup-config-js"><a href="#rollup-config-js" class="headerlink" title="rollup.config.js"></a>rollup.config.js</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// rollup默认可以导出一个对象,作为打包的配置文件</span><span class="token comment" spellcheck="true">// import babel from 'rollup-plugin-babel' // es6导入语法</span><span class="token keyword">const</span> babel <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'rollup-plugin-babel'</span><span class="token punctuation">)</span><span class="token keyword">const</span> resolve <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'@rollup/plugin-node-resolve'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// export default {</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>    input<span class="token punctuation">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 入口</span>    output<span class="token punctuation">:</span> <span class="token punctuation">{</span>        file<span class="token punctuation">:</span> <span class="token string">'./dist/vue.js'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 出口</span>        name<span class="token punctuation">:</span> <span class="token string">'Vue'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 打包后全局添加Vue对象 global Vue</span>        format<span class="token punctuation">:</span> <span class="token string">'umd'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// esm es6模块 commonjs模块 iife自执行函数 umd通用模块规范(兼容AMD和commonjs,iife,不兼容es6)</span>        sourcemap<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 可以调试源代码</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 可以使用的插件</span>    plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token function">babel</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            exclude<span class="token punctuation">:</span> <span class="token string">'node_modules/**'</span> <span class="token comment" spellcheck="true">// 排除nodemodule下所有文件</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// import xx from 'xxx/index' -> 'xxx'</span>    <span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><h2 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h2><h3 id="init-js-1"><a href="#init-js-1" class="headerlink" title="init.js"></a>init.js</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span>initState<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./state"</span><span class="token keyword">import</span> <span class="token punctuation">{</span>compileToFunction<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./compile"</span><span class="token comment" spellcheck="true">// 提供给vue来使用(此时全局还没有vue对象,所以没办法直接挂载)</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">initMixin</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 初始化操作</span>    <span class="token comment" spellcheck="true">// ......</span>    <span class="token comment" spellcheck="true">// 渲染模板的操作</span>    Vue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$mount <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>el<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">this</span>        <span class="token comment" spellcheck="true">// 获取el对应的dom</span>        el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span>        <span class="token keyword">let</span> ops <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ops<span class="token punctuation">.</span>render<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 先看有没有render函数</span>            <span class="token keyword">let</span> template <span class="token comment" spellcheck="true">// 没有render就看看有没有template</span>            <span class="token comment" spellcheck="true">// 如果用户没有使用了render函数</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ops<span class="token punctuation">.</span>template <span class="token operator">&amp;&amp;</span> el<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 没有写模板,但是写了el</span>                <span class="token comment" spellcheck="true">/*                    1）innerHTML:                    从对象的起始位置到终止位置的全部内容,不包括Html标签。                    2）outerHTML:                    除了包含innerHTML的全部内容外, 还包含对象标签本身。                */</span>                template <span class="token operator">=</span> el<span class="token punctuation">.</span>outerHTML  <span class="token comment" spellcheck="true">// outerHTML在火狐下可能不兼容</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">// 写了template,就用用户的template</span>                    template <span class="token operator">=</span> ops<span class="token punctuation">.</span>template                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// console.log(template)</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>template<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 对模板进行编译</span>                <span class="token keyword">const</span> render <span class="token operator">=</span> <span class="token function">compileToFunction</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span>                ops<span class="token punctuation">.</span>render <span class="token operator">=</span> render            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        ops<span class="token punctuation">.</span>render <span class="token comment" spellcheck="true">// 最终获取render方法</span>        <span class="token comment" spellcheck="true">// script标签引用的vue.global.js,这个过程是在浏览器运行的</span>        <span class="token comment" spellcheck="true">// runtime是不包含模板编译的,整个编译是打包时通过loader来转义vue文件的,用runtime时不能使用template</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>  </code></pre><h3 id="compile-index-js"><a href="#compile-index-js" class="headerlink" title="compile/index.js"></a>compile/index.js</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 对模板进行编译</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">compileToFunction</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 1,将template转化为ast语法树</span>    <span class="token comment" spellcheck="true">// 2,生成render方法,render方法执行返回的结果就是虚拟dom</span><span class="token punctuation">}</span></code></pre><h2 id="测试-3"><a href="#测试-3" class="headerlink" title="测试"></a>测试</h2><h3 id="index-html-1"><a href="#index-html-1" class="headerlink" title="index.html"></a>index.html</h3><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span> skyblue</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span> skyblue</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        {{name}}    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>            {{age}}        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token comment" spellcheck="true">// console.log(Vue);</span>    <span class="token comment" spellcheck="true">// 响应式的数据变化 (数据变化可以被监控) </span>    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// name: 'zs',</span>                <span class="token comment" spellcheck="true">// age: 12,</span>                <span class="token comment" spellcheck="true">// obj: {</span>                <span class="token comment" spellcheck="true">//     sex: 'boy'</span>                <span class="token comment" spellcheck="true">// },</span>                arr<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'2'</span><span class="token punctuation">,</span> <span class="token string">'cat'</span><span class="token punctuation">,</span> <span class="token string">'ant'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>a<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">]</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        template<span class="token punctuation">:</span> <span class="token string">'&lt;div>hello&lt;/div>'</span>        <span class="token comment" spellcheck="true">// el: '#app', // 将数据解析到el上</span>        <span class="token comment" spellcheck="true">// render(){</span>        <span class="token comment" spellcheck="true">// return createElement('div',{})</span>        <span class="token comment" spellcheck="true">// }</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    vm<span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 实现解析表达式的方案</span>    <span class="token comment" spellcheck="true">// 1,模板引擎 -> 性能差,需要正则匹配替换 vue1.0 -> 没有引入虚拟dom</span>    <span class="token comment" spellcheck="true">// 2,采用虚拟dom -> 数据变化后,比较虚拟dom的差异,最后更新需要更新的地方</span>    <span class="token comment" spellcheck="true">// 3,核心就是将模板变成js语法,通过js语法生成虚拟dom</span>    <span class="token comment" spellcheck="true">// 涉及语法转换,如 es6->es5 css压缩</span>    <span class="token comment" spellcheck="true">// 需要先变成语法树再重新组装代码,将template语法转换成render函数</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><img src="img_12.png" alt="img_12.png"></p><h1 id="实现模板转化为ast语法树"><a href="#实现模板转化为ast语法树" class="headerlink" title="实现模板转化为ast语法树"></a>实现模板转化为ast语法树</h1><p><img src="img_13.png" alt="正则表达式可视化网站"></p><h2 id="init-js-2"><a href="#init-js-2" class="headerlink" title="init.js"></a>init.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span>initState<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./state"</span><span class="token keyword">import</span> <span class="token punctuation">{</span>compileToFunction<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./compile"</span><span class="token comment" spellcheck="true">// 提供给vue来使用(此时全局还没有vue对象,所以没办法直接挂载)</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">initMixin</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 初始化操作</span>    <span class="token comment" spellcheck="true">// ......</span>    <span class="token comment" spellcheck="true">// 渲染模板的操作</span>    Vue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$mount <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>el<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">this</span>        <span class="token comment" spellcheck="true">// 获取el对应的dom</span>        el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span>        <span class="token keyword">let</span> ops <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ops<span class="token punctuation">.</span>render<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 先看有没有render函数</span>            <span class="token keyword">let</span> template <span class="token comment" spellcheck="true">// 没有render就看看有没有template</span>            <span class="token comment" spellcheck="true">// 如果用户没有使用了render函数</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ops<span class="token punctuation">.</span>template <span class="token operator">&amp;&amp;</span> el<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 没有写模板,但是写了el</span>                <span class="token comment" spellcheck="true">/*                    1）innerHTML:                    从对象的起始位置到终止位置的全部内容,不包括Html标签。                    2）outerHTML:                    除了包含innerHTML的全部内容外, 还包含对象标签本身。                */</span>                template <span class="token operator">=</span> el<span class="token punctuation">.</span>outerHTML  <span class="token comment" spellcheck="true">// outerHTML在火狐下可能不兼容</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">// 写了template,就用用户的template</span>                    template <span class="token operator">=</span> ops<span class="token punctuation">.</span>template                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// console.log(template)</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>template<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 对模板进行编译</span>                <span class="token keyword">const</span> render <span class="token operator">=</span> <span class="token function">compileToFunction</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span>                ops<span class="token punctuation">.</span>render <span class="token operator">=</span> render            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        ops<span class="token punctuation">.</span>render <span class="token comment" spellcheck="true">// 最终获取render方法</span>        <span class="token comment" spellcheck="true">// script标签引用的vue.global.js,这个过程是在浏览器运行的</span>        <span class="token comment" spellcheck="true">// runtime是不包含模板编译的,整个编译是打包时通过loader来转义vue文件的,用runtime时不能使用template</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> </code></pre><h2 id="compile-index-js-1"><a href="#compile-index-js-1" class="headerlink" title="compile/index.js"></a>compile/index.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span>parseHTML<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./parse"</span><span class="token comment" spellcheck="true">// 编译模板</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">compileToFunction</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// console.log(template)</span>    <span class="token comment" spellcheck="true">// 1,将template转化为ast语法树</span>    <span class="token keyword">let</span> ast <span class="token operator">=</span> <span class="token function">parseHTML</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 2,生成render方法,render方法执行返回的结果就是虚拟dom </span><span class="token punctuation">}</span></code></pre><h2 id="compile-parse-js"><a href="#compile-parse-js" class="headerlink" title="compile/parse.js"></a>compile/parse.js</h2><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 正则表达式</span><span class="token comment" spellcheck="true">// vue3采用的不是正则</span><span class="token keyword">const</span> ncname <span class="token operator">=</span> <span class="token template-string"><span class="token string">`[a-zA-Z_][\\-\\.0-9_a-zA-Z]*`</span></span> <span class="token comment" spellcheck="true">// 标签名</span><span class="token keyword">const</span> qnameCapture <span class="token operator">=</span> <span class="token template-string"><span class="token string">`((?:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>ncname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\:)?</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>ncname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)`</span></span> <span class="token comment" spellcheck="true">// 解析 &lt;div:xxx> 形式(带命名空间)的标签</span><span class="token keyword">const</span> startTagOpen <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`^&lt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>qnameCapture<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 匹配到的分组是一个开始标签名</span><span class="token keyword">const</span> endTag <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`^&lt;\\/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>qnameCapture<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">[^>]*>`</span></span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 匹配的是&lt;/xxx> 最终匹配到的分组是结束标签的名字</span><span class="token keyword">const</span> attribute <span class="token operator">=</span> <span class="token operator">/</span><span class="token operator">^</span>\s<span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">^</span>\s<span class="token string">"'&lt;>\/=]+)(?:\s*(=)\s*(?:"</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">^</span><span class="token string">"]*)"</span><span class="token operator">+</span><span class="token operator">|</span><span class="token string">'([^'</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token string">'+|([^\s"'</span><span class="token operator">=</span><span class="token operator">&lt;</span><span class="token operator">></span>`<span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token operator">/</span> <span class="token comment" spellcheck="true">// 匹配属性</span><span class="token keyword">const</span> startTagClose <span class="token operator">=</span> <span class="token operator">/</span><span class="token operator">^</span>\s<span class="token operator">*</span><span class="token punctuation">(</span>\<span class="token operator">/</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token operator">/</span> <span class="token comment" spellcheck="true">// 匹配 &lt;br/> 这种单标签</span><span class="token keyword">const</span> defaultTagRE <span class="token operator">=</span> <span class="token operator">/</span>\<span class="token punctuation">{</span>\<span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token operator">|</span>\r<span class="token operator">?</span>\n<span class="token punctuation">)</span><span class="token operator">+</span><span class="token operator">?</span><span class="token punctuation">)</span>\<span class="token punctuation">}</span>\<span class="token punctuation">}</span><span class="token operator">/</span>g <span class="token comment" spellcheck="true">// 匹配 插值表达式 </span><span class="token comment" spellcheck="true">// htmlparser2库也可以解析html</span><span class="token comment" spellcheck="true">/*{    tag: 'div',    type: 1,    attrs: [{name,age,address}],    parent: null,    children:[        {                tag: 'span',                type: 1,                attrs: [{...}],                parent: div,                children:[]        }    ]}*/</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">parseHTML</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// html必定是&lt;开头(vue2的template不能是字符串,但是vue3可以)</span>    <span class="token comment" spellcheck="true">// 定义虚拟dom的节点类型</span>    <span class="token keyword">const</span> ELEMENT_TYPE <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">const</span> TEXT_TYPE <span class="token operator">=</span> <span class="token number">3</span>    <span class="token keyword">const</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">// 用于存放元素</span>    <span class="token keyword">let</span> currentParent <span class="token comment" spellcheck="true">// 指向栈中最后一个元素</span>    <span class="token keyword">let</span> root <span class="token comment" spellcheck="true">// 标记根节点</span>    <span class="token comment" spellcheck="true">// 创建虚拟dom的节点</span>    <span class="token keyword">function</span> <span class="token function">createASTElement</span><span class="token punctuation">(</span>tag<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token punctuation">{</span>            tag<span class="token punctuation">,</span>            type<span class="token punctuation">:</span> ELEMENT_TYPE<span class="token punctuation">,</span>            children<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            attrs<span class="token punctuation">,</span>            parent<span class="token punctuation">:</span> <span class="token keyword">null</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 最终需要转化为一颗抽象语法树</span>    <span class="token keyword">function</span> <span class="token function">start</span><span class="token punctuation">(</span>tag<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// console.log(tag, attrs, '开始');</span>        <span class="token keyword">let</span> node <span class="token operator">=</span> <span class="token function">createASTElement</span><span class="token punctuation">(</span>tag<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 如果还没有根节点,则该元素就是根节点</span>            root <span class="token operator">=</span> node        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>currentParent<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 如果有当前节点,则当前节点是新节点的parent</span>            node<span class="token punctuation">.</span>parent <span class="token operator">=</span> currentParent            <span class="token comment" spellcheck="true">// 子节点的parent要变为currentParent</span>            currentParent<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>        <span class="token punctuation">}</span>        stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 放入栈</span>        currentParent <span class="token operator">=</span> node <span class="token comment" spellcheck="true">// 指针指向栈中最后一个</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">chars</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// vue2源码是保留最多两个空格</span>        text <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/\s/g</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 去掉空格</span>        <span class="token comment" spellcheck="true">// console.log(text, '文本');</span>        <span class="token comment" spellcheck="true">// 文本直接放入当前指向的节点的children</span>        text <span class="token operator">&amp;&amp;</span> currentParent<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            type<span class="token punctuation">:</span> TEXT_TYPE<span class="token punctuation">,</span>            text<span class="token punctuation">,</span>            parent<span class="token punctuation">:</span> currentParent        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">end</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// console.log(tag, '结束');</span>        <span class="token comment" spellcheck="true">// 弹出时,其开始标签和文本内容都被加到根结点的children了</span>        <span class="token keyword">let</span> node <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 弹出最后一个 // 可以校验标签是否合法</span>        currentParent <span class="token operator">=</span> stack<span class="token punctuation">[</span>stack<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 截取html字符串</span>    <span class="token keyword">function</span> <span class="token function">advance</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token punctuation">{</span>        html <span class="token operator">=</span> html<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// console.log(html)</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 匹配是否是开始标签</span>    <span class="token keyword">function</span> <span class="token function">parseStartTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">const</span> start <span class="token operator">=</span> html<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>startTagOpen<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// console.log(start); // {0: '&lt;div', 1: 'div' ,...}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>start<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">const</span> match <span class="token operator">=</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 分组就是标签名</span>                tagName<span class="token punctuation">:</span> start<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                attrs<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// start[0].length是匹配到的字符串,('&lt;div')</span>            <span class="token function">advance</span><span class="token punctuation">(</span>start<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 从html删除匹配到的字符串</span>            <span class="token comment" spellcheck="true">// console.log(match) </span>            <span class="token comment" spellcheck="true">// 只要不是开始标签的结束,就一直循环匹配</span>            <span class="token keyword">let</span> attr<span class="token punctuation">,</span> end            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>end <span class="token operator">=</span> html<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>startTagClose<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">// 将匹配到的内容存入attr</span>            <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>attr <span class="token operator">=</span> html<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>attribute<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 因为已经将匹配的内容存放,所以可以删除匹配的字符串</span>                <span class="token function">advance</span><span class="token punctuation">(</span>attr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// console.log(attr);</span>                match<span class="token punctuation">.</span>attrs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                    name<span class="token punctuation">:</span> attr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                    <span class="token comment" spellcheck="true">// 因为等号两边可能有空格,所以value可能是attr[3]或[4]或[5]</span>                    value<span class="token punctuation">:</span> attr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">||</span> attr<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">||</span> attr<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token boolean">true</span> <span class="token comment" spellcheck="true">// 如果是disable这种没有 = 的,则值是true</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// 如果有 > 这种结束标签,也要删除</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>end<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">advance</span><span class="token punctuation">(</span>end<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// console.log(match);</span>            <span class="token keyword">return</span> match        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// console.log(html);</span>        <span class="token keyword">return</span> <span class="token boolean">false</span> <span class="token comment" spellcheck="true">// 不是开始标签</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 每解析一个,就把解析的内容从html字符串里删除,html删完就是解析完成</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>html<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// debugger</span>        <span class="token comment" spellcheck="true">// 开头是 &lt;的 而下一个开头则是&lt;/的&lt; 所以两个 &lt; 之间就是标签的内容</span>        <span class="token comment" spellcheck="true">// 如果indexof的索引是0,则说明是个开始或结束标签</span>        <span class="token comment" spellcheck="true">// 如果indexof的索引大于0,则说明是文本结束位置</span>        <span class="token keyword">let</span> textEnd <span class="token operator">=</span> html<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'&lt;'</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>textEnd <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">const</span> startTagMatch <span class="token operator">=</span> <span class="token function">parseStartTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>startTagMatch<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 解析到开始标签</span>                <span class="token comment" spellcheck="true">// console.log(html);</span>                <span class="token function">start</span><span class="token punctuation">(</span>startTagMatch<span class="token punctuation">.</span>tagName<span class="token punctuation">,</span> startTagMatch<span class="token punctuation">.</span>attrs<span class="token punctuation">)</span>                <span class="token keyword">continue</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// 如果有结束标签</span>            <span class="token keyword">let</span> endTagMatch <span class="token operator">=</span> html<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>endTag<span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>endTagMatch<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">end</span><span class="token punctuation">(</span>endTagMatch<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token function">advance</span><span class="token punctuation">(</span>endTagMatch<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span>                <span class="token keyword">continue</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 文本内容</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>textEnd <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">let</span> text <span class="token operator">=</span> html<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> textEnd<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 文本内容</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>text<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 解析到文本 </span>                <span class="token function">chars</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>                <span class="token function">advance</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span>length<span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// console.log(html)</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// console.log(root)</span>    <span class="token comment" spellcheck="true">// console.log(html)</span>    <span class="token keyword">return</span> root<span class="token punctuation">}</span>   </code></pre><h2 id="测试-4"><a href="#测试-4" class="headerlink" title="测试"></a>测试</h2><p><img src="img_14.png" alt="渲染出来的ast"></p><h1 id="代码生成实现原理"><a href="#代码生成实现原理" class="headerlink" title="代码生成实现原理"></a>代码生成实现原理</h1><h2 id="compile-index-js-2"><a href="#compile-index-js-2" class="headerlink" title="compile/index.js"></a>compile/index.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span>parseHTML<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./parse"</span><span class="token keyword">const</span> defaultTagRE <span class="token operator">=</span> <span class="token operator">/</span>\<span class="token punctuation">{</span>\<span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token operator">|</span>\r<span class="token operator">?</span>\n<span class="token punctuation">)</span><span class="token operator">+</span><span class="token operator">?</span><span class="token punctuation">)</span>\<span class="token punctuation">}</span>\<span class="token punctuation">}</span><span class="token operator">/</span>g <span class="token comment" spellcheck="true">// 匹配 插值表达式</span><span class="token keyword">function</span> <span class="token function">gen</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 节点直接生成</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">codegen</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 文本</span>        <span class="token keyword">let</span> text <span class="token operator">=</span> node<span class="token punctuation">.</span>text        <span class="token comment" spellcheck="true">// 有可能是插值表达式或纯文本</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>defaultTagRE<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 纯文本</span>            <span class="token comment" spellcheck="true">// stringify是为了加上'',让传入的值变成字符串</span>            <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`_v(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)`</span></span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 带插值表达式</span>            <span class="token comment" spellcheck="true">// {{name}}hello => _v(_s(name)+'hello')</span>            <span class="token comment" spellcheck="true">// console.log(text)</span>            <span class="token keyword">let</span> tokens <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>            <span class="token comment" spellcheck="true">// 捕获文本</span>            <span class="token keyword">let</span> match            <span class="token comment" spellcheck="true">// 如果正则里有g,则再次exec会从上次匹配到的位置开始往后找</span>            <span class="token comment" spellcheck="true">// 重置正则匹配的起始位置</span>            defaultTagRE<span class="token punctuation">.</span>lastIndex <span class="token operator">=</span> <span class="token number">0</span>            <span class="token keyword">let</span> lastIndex <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment" spellcheck="true">// 记录上一次匹配的最后一位</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span>match <span class="token operator">=</span> defaultTagRE<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// console.log(match)</span>                <span class="token keyword">let</span> index <span class="token operator">=</span> match<span class="token punctuation">.</span>index <span class="token comment" spellcheck="true">// 拿到匹配到字符({{)的开始索引</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">></span> lastIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">// {{name}} hello {{age}} => hello</span>                    tokens<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>lastIndex<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">}</span>                tokens<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`_s(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>match<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)`</span></span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 插值表达式里的变量名</span>                <span class="token comment" spellcheck="true">// {{name}} xxx {{age}} -> 0 + name}}.length => 8</span>                <span class="token comment" spellcheck="true">// 下一次匹配到,就可以查看两次匹配中间有没有值 ({{name}} hello {{age}} => hello)</span>                lastIndex <span class="token operator">=</span> index <span class="token operator">+</span> match<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>lastIndex <span class="token operator">&lt;</span> text<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// {{name}} hello {{age}} world => world</span>                tokens<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>lastIndex<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// console.log(tokens, `_v(${tokens.join("+")})`)</span>            <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`_v(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>tokens<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">"+"</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)`</span></span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">genChildren</span><span class="token punctuation">(</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> children<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>child <span class="token operator">=</span><span class="token operator">></span> <span class="token function">gen</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 生成属性str的方法</span><span class="token keyword">function</span> <span class="token function">genProps</span><span class="token punctuation">(</span>attrs<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">''</span> <span class="token comment" spellcheck="true">// {name,value}</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> attrs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> attr <span class="token operator">=</span> attrs<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>attr<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">'style'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// color:red => {color:'red'}</span>            <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// color: xxx;font-weight:xxx 多个用;分开</span>            attr<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">';'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// color: xxx 单个用:分开</span>                <span class="token keyword">let</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span>                obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value <span class="token comment" spellcheck="true">// 给obj赋值</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            attr<span class="token punctuation">.</span>value <span class="token operator">=</span> obj        <span class="token punctuation">}</span>        str <span class="token operator">+</span><span class="token operator">=</span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>attr<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>attr<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,`</span></span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// slice(开始,结尾),如果是负数则从末尾开始</span>    <span class="token comment" spellcheck="true">// 这里从0取到-1的字符,去掉了最后一个 ,</span>    <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`{</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">}`</span></span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">codegen</span><span class="token punctuation">(</span>ast<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 解析children</span>    <span class="token keyword">let</span> children <span class="token operator">=</span> <span class="token function">genChildren</span><span class="token punctuation">(</span>ast<span class="token punctuation">.</span>children<span class="token punctuation">)</span>    <span class="token keyword">let</span> code <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token template-string"><span class="token string">`_c('</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>ast<span class="token punctuation">.</span>tag<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">', </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>ast<span class="token punctuation">.</span>attrs<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token function">genProps</span><span class="token punctuation">(</span>ast<span class="token punctuation">.</span>attrs<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token string">'null'</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> ${ast.children.length ? `</span></span><span class="token punctuation">,</span>$<span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token template-string"><span class="token string">` : ''})`</span></span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// console.log(code)</span>    <span class="token keyword">return</span> code<span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 编译模板</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">compileToFunction</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// console.log(template)</span>    <span class="token comment" spellcheck="true">// 1,将template转化为ast语法树</span>    <span class="token keyword">let</span> ast <span class="token operator">=</span> <span class="token function">parseHTML</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 2,生成render方法,render方法执行返回的结果就是虚拟dom</span>    <span class="token comment" spellcheck="true">// render(){ 把树组装成这样</span>    <span class="token comment" spellcheck="true">//     return _c('div', { id: 'app' },_c('div', { color: 'blue' }, _v(_s(name) + 'hello')</span>    <span class="token comment" spellcheck="true">//         , _c('span', null, _v(_s(age) + 'hello'))))</span>    <span class="token comment" spellcheck="true">// }</span>    <span class="token comment" spellcheck="true">// console.log(ast)</span>    <span class="token comment" spellcheck="true">// 生成代码 (模板引擎的实现原理就是 with + new Function)</span>    <span class="token keyword">let</span> code <span class="token operator">=</span> <span class="token function">codegen</span><span class="token punctuation">(</span>ast<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// console.log(this)</span>    <span class="token comment" spellcheck="true">// with会从传进来的参数里取值,这里的this是调用者</span>    code <span class="token operator">=</span> <span class="token template-string"><span class="token string">`with(this){return </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">}`</span></span>    <span class="token comment" spellcheck="true">// 根据代码自动生成函数</span>    <span class="token keyword">let</span> render <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// console.log(render.toString())</span>    <span class="token comment" spellcheck="true">// function render(</span>    <span class="token comment" spellcheck="true">// ) {</span>    <span class="token comment" spellcheck="true">//     // 关闭严格模式才能用with</span>    <span class="token comment" spellcheck="true">//     with (this) { return _c('div', { id: "app", style: { "color": "skyblue", "background": " yellow" }, show: true }, _c('div', null, _v(_s(age) + "hello" + _s(name) + "world")), _c('br', null, _v("world"), _c('br', null, _c('span', null, _v(_s(age)))))) }</span>    <span class="token comment" spellcheck="true">// }</span>    <span class="token comment" spellcheck="true">// console.log(render.call(vm))</span>    <span class="token keyword">return</span> render<span class="token punctuation">}</span><span class="token comment" spellcheck="true">// with (vm) {</span><span class="token comment" spellcheck="true">// 传this,则vm的属性会给this</span><span class="token comment" spellcheck="true">// name => this.name => vm.name => vm.data.name</span><span class="token comment" spellcheck="true">//     // 此时,name就是vm.name</span><span class="token comment" spellcheck="true">// log name</span><span class="token comment" spellcheck="true">// }</span></code></pre><h2 id="init-js-3"><a href="#init-js-3" class="headerlink" title="init.js"></a>init.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span>initState<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./state"</span><span class="token keyword">import</span> <span class="token punctuation">{</span>compileToFunction<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./compile"</span><span class="token keyword">import</span> <span class="token punctuation">{</span>mountComponent<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./lifecycle"</span><span class="token comment" spellcheck="true">// 提供给vue来使用(此时全局还没有vue对象,所以没办法直接挂载)</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">initMixin</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 初始化操作</span>    <span class="token comment" spellcheck="true">// ......</span>    <span class="token comment" spellcheck="true">// 渲染模板的操作</span>    Vue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$mount <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>el<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">this</span>        <span class="token comment" spellcheck="true">// 获取el对应的dom</span>        el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span>        <span class="token keyword">let</span> ops <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ops<span class="token punctuation">.</span>render<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 先看有没有render函数</span>            <span class="token keyword">let</span> template <span class="token comment" spellcheck="true">// 没有render就看看有没有template</span>            <span class="token comment" spellcheck="true">// 如果用户没有使用了render函数</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ops<span class="token punctuation">.</span>template <span class="token operator">&amp;&amp;</span> el<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 没有写模板,但是写了el</span>                <span class="token comment" spellcheck="true">/*                    1）innerHTML:                    从对象的起始位置到终止位置的全部内容,不包括Html标签。                    2）outerHTML:                    除了包含innerHTML的全部内容外, 还包含对象标签本身。                */</span>                template <span class="token operator">=</span> el<span class="token punctuation">.</span>outerHTML  <span class="token comment" spellcheck="true">// outerHTML在火狐下可能不兼容</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">// 写了template,就用用户的template</span>                    template <span class="token operator">=</span> ops<span class="token punctuation">.</span>template                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// console.log(template)</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>template<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 对模板进行编译</span>                <span class="token keyword">const</span> render <span class="token operator">=</span> <span class="token function">compileToFunction</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span>                ops<span class="token punctuation">.</span>render <span class="token operator">=</span> render            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// console.log(ops.render)// 最终获取render方法</span>        <span class="token comment" spellcheck="true">// 组件挂载</span>        <span class="token function">mountComponent</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> el<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// script标签引用的vue.global.js,这个过程是在浏览器运行的</span>        <span class="token comment" spellcheck="true">// runtime是不包含模板编译的,整个编译是打包时通过loader来转义vue文件的,用runtime时不能使用template</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> </code></pre><h2 id="lifecycle-js"><a href="#lifecycle-js" class="headerlink" title="lifecycle.js"></a>lifecycle.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">initLifeCycle</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 虚拟dom转真实dom</span>    Vue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>_update <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'update'</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 渲染虚拟dom</span>    Vue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>_render <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'render'</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 组件挂载</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">mountComponent</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> el<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 1,调用render方法产生虚拟节点,虚拟dom</span>    vm<span class="token punctuation">.</span><span class="token function">_update</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span><span class="token function">_render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// vm.$options.render 返回虚拟节点</span>    <span class="token comment" spellcheck="true">// 2,根据虚拟dom生成真实dom</span>    <span class="token comment" spellcheck="true">// 3,插入el元素</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// vue核心流程: 1,创建响应式数据 2,模板转化为ast语法树</span><span class="token comment" spellcheck="true">// 3,将ast转换为render函数 4,后续每次更新可以只执行render函数(无需再次执行ast转换)</span><span class="token comment" spellcheck="true">// render函数会产生虚拟节点(使用响应式数据)</span><span class="token comment" spellcheck="true">// 根据生成的虚拟dom创造真实dom</span></code></pre><h2 id="index-js-1"><a href="#index-js-1" class="headerlink" title="index.js"></a>index.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span>initMixin<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./init"</span><span class="token keyword">import</span> <span class="token punctuation">{</span>initLifeCycle<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./lifecycle"</span><span class="token comment" spellcheck="true">// class会把所有方法耦合在一起</span><span class="token keyword">function</span> <span class="token function">Vue</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// options就是用户提供的选项 </span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_init</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 初始化</span><span class="token punctuation">}</span><span class="token function">initMixin</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 拓展了vue,添加init方法</span><span class="token function">initLifeCycle</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 组件渲染,生命周期</span><span class="token keyword">export</span> <span class="token keyword">default</span> Vue</code></pre><h1 id="实现虚拟dom转真实dom"><a href="#实现虚拟dom转真实dom" class="headerlink" title="实现虚拟dom转真实dom"></a>实现虚拟dom转真实dom</h1><p><img src="img_15.png" alt="在线ast转换工具"></p><h2 id="vdom-index-js"><a href="#vdom-index-js" class="headerlink" title="vdom/index.js"></a>vdom/index.js</h2><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 虚拟dom操作</span><span class="token comment" spellcheck="true">// _h() _c()</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createElementVnode</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> tag<span class="token punctuation">,</span> data<span class="token punctuation">,</span> <span class="token operator">...</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// console.log(data)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">let</span> key <span class="token operator">=</span> data<span class="token punctuation">.</span>key    <span class="token keyword">if</span> <span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token keyword">delete</span> data<span class="token punctuation">.</span>key    <span class="token keyword">return</span> <span class="token function">vnode</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> tag<span class="token punctuation">,</span> key<span class="token punctuation">,</span> data<span class="token punctuation">,</span> children<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// _v()</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createTextVnode</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> text<span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token function">vnode</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> undefined<span class="token punctuation">,</span> undefined<span class="token punctuation">,</span> undefined<span class="token punctuation">,</span> undefined<span class="token punctuation">,</span> text<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// ast是语法转换,描述语法(html js css), &lt;div xxx> -> div,xxx=true</span><span class="token comment" spellcheck="true">// 虚拟dom是描述dom元素,可以增加自定义属性 div.xxx</span><span class="token keyword">function</span> <span class="token function">vnode</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> tag<span class="token punctuation">,</span> key<span class="token punctuation">,</span> data<span class="token punctuation">,</span> children<span class="token punctuation">,</span> text<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>        vm<span class="token punctuation">,</span>        tag<span class="token punctuation">,</span>        key<span class="token punctuation">,</span>        data<span class="token punctuation">,</span>        children<span class="token punctuation">,</span>        text        <span class="token comment" spellcheck="true">// ......</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="lifecycle-js-1"><a href="#lifecycle-js-1" class="headerlink" title="lifecycle.js"></a>lifecycle.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span>createElementVnode<span class="token punctuation">,</span> createTextVnode<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./vdom"</span><span class="token keyword">function</span> <span class="token function">createElm</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> <span class="token punctuation">{</span>tag<span class="token punctuation">,</span> data<span class="token punctuation">,</span> children<span class="token punctuation">,</span> text<span class="token punctuation">}</span> <span class="token operator">=</span> vnode    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> tag <span class="token operator">===</span> <span class="token string">"string"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 标签</span>        <span class="token comment" spellcheck="true">// 创建真实节点</span>        <span class="token comment" spellcheck="true">// 将真实节点挂载到虚拟节点,后续修改就可以通过虚拟节点直接找到真实节点</span>        vnode<span class="token punctuation">.</span>el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span>        <span class="token function">patchProps</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>el<span class="token punctuation">,</span> data<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 更新属性 xxx=xxx</span>        children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>child <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            vnode<span class="token punctuation">.</span>el<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span><span class="token function">createElm</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// console.log(vnode) 文本虚拟节点的tag是undefined</span>        vnode<span class="token punctuation">.</span>el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createTextNode</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> vnode<span class="token punctuation">.</span>el<span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">patchProps</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> props<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> props<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">'style'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 如果是style样式属性</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> sytleName <span class="token keyword">in</span> props<span class="token punctuation">.</span>style<span class="token punctuation">)</span> <span class="token punctuation">{</span>                el<span class="token punctuation">.</span>style<span class="token punctuation">[</span>sytleName<span class="token punctuation">]</span> <span class="token operator">=</span> props<span class="token punctuation">.</span>style<span class="token punctuation">[</span>sytleName<span class="token punctuation">]</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            el<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> props<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">patch</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 初始化时是传一个真实dom,一个虚拟dom</span>    <span class="token keyword">const</span> isRealElement <span class="token operator">=</span> oldVNode<span class="token punctuation">.</span>nodeType    <span class="token comment" spellcheck="true">// 初次渲染</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>isRealElement<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">const</span> elm <span class="token operator">=</span> oldVNode <span class="token comment" spellcheck="true">// 拿到真实元素</span>        <span class="token keyword">const</span> parentElm <span class="token operator">=</span> elm<span class="token punctuation">.</span>parentNode <span class="token comment" spellcheck="true">// 拿到父元素</span>        <span class="token keyword">let</span> newElm <span class="token operator">=</span> <span class="token function">createElm</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newElm<span class="token punctuation">)</span>        parentElm<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>newElm<span class="token punctuation">,</span> elm<span class="token punctuation">.</span>nextSibling<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 先插入到当前节点的后面(成为兄弟节点)</span>        parentElm<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>elm<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 删除老节点 </span>        <span class="token keyword">return</span> newElm    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 更新时是传两个虚拟dom</span>        <span class="token comment" spellcheck="true">// diff算法</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">initLifeCycle</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 虚拟dom转真实dom</span>    Vue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>_update <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>vnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">this</span>        <span class="token keyword">const</span> el <span class="token operator">=</span> vm<span class="token punctuation">.</span>$el        <span class="token comment" spellcheck="true">// console.log('update', vnode)</span>        <span class="token comment" spellcheck="true">// 既能初始化,又能更新</span>        vm<span class="token punctuation">.</span>$el <span class="token operator">=</span> <span class="token function">patch</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// _c{'div',{},...children}</span>    Vue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>_c <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// this -> vm</span>        <span class="token keyword">return</span> <span class="token function">createElementVnode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token operator">...</span>arguments<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// _v(text)</span>    Vue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>_v <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>arguments<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// console.log(...arguments)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">createTextVnode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token operator">...</span>arguments<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token function">createTextVnode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token operator">...</span>arguments<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    Vue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>_s <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// 插值表达式里的值(zs)如果不是对象,就直接返回 </span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">!==</span> <span class="token string">'object'</span><span class="token punctuation">)</span> <span class="token keyword">return</span> value        <span class="token comment" spellcheck="true">// 如果是对象,就转字符串    </span>        <span class="token keyword">return</span> JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 渲染虚拟dom</span>    Vue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>_render <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// console.log('render')</span>        <span class="token comment" spellcheck="true">// const vm = this </span>        <span class="token comment" spellcheck="true">// 让with里的this指向vm</span>        <span class="token comment" spellcheck="true">// 此时可以视图和属性进行绑定</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$options<span class="token punctuation">.</span>render<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// ast语法转义后生成的render</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 组件挂载</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">mountComponent</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> el<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 把要被挂载的真实dom,放到vm实例上</span>    vm<span class="token punctuation">.</span>$el <span class="token operator">=</span> el <span class="token comment" spellcheck="true">// 这个el是querySelector获取了的</span>    <span class="token comment" spellcheck="true">// 1,调用render方法产生虚拟节点,虚拟dom</span>    vm<span class="token punctuation">.</span><span class="token function">_update</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span><span class="token function">_render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// vm.$options.render 返回虚拟节点</span>    <span class="token comment" spellcheck="true">// 2,根据虚拟dom生成真实dom</span>    <span class="token comment" spellcheck="true">// 3,插入el元素</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// vue核心流程: 1,创建响应式数据 2,模板转化为ast语法树</span><span class="token comment" spellcheck="true">// 3,将ast转换为render函数 4,后续每次更新可以只执行render函数(无需再次执行ast转换)</span><span class="token comment" spellcheck="true">// render函数会产生虚拟节点(使用响应式数据)</span><span class="token comment" spellcheck="true">// 根据生成的虚拟dom创造真实dom</span></code></pre><h2 id="测试-5"><a href="#测试-5" class="headerlink" title="测试"></a>测试</h2><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span>skyblue<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">show</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>123<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        {{age}} hello {{name}} world    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>    world    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>            {{age}}        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token comment" spellcheck="true">// 响应式的数据变化 (数据变化可以被监控) </span>    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token punctuation">{</span>                name<span class="token punctuation">:</span> <span class="token string">'zs'</span><span class="token punctuation">,</span>                age<span class="token punctuation">:</span> <span class="token number">12</span><span class="token punctuation">,</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// template: '&lt;div>hello&lt;/div>'</span>        <span class="token comment" spellcheck="true">// el: '#app', // 将数据解析到el上</span>        <span class="token comment" spellcheck="true">// render(){</span>        <span class="token comment" spellcheck="true">// return createElement('div',{})</span>        <span class="token comment" spellcheck="true">// }</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    vm<span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        vm<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">'ls'</span>        vm<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">23</span>        <span class="token comment" spellcheck="true">// 手动重新渲染</span>        vm<span class="token punctuation">.</span><span class="token function">_update</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span><span class="token function">_render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><img src="img_17.png" alt="img_17.png"><br><img src="img_16.png" alt="1秒后"><br><img src="img_18.png" alt="小结"></p><h1 id="实现vue中的依赖收集-双向绑定中的数据变化影响视图"><a href="#实现vue中的依赖收集-双向绑定中的数据变化影响视图" class="headerlink" title="实现vue中的依赖收集(双向绑定中的数据变化影响视图)"></a>实现vue中的依赖收集(双向绑定中的数据变化影响视图)</h1><blockquote><p>双向绑定实现原理是观察者模式</p></blockquote><p><img src="img_19.png" alt="组件化的好处"></p><h2 id="修改lifecycle-js的mountComponent方法"><a href="#修改lifecycle-js的mountComponent方法" class="headerlink" title="修改lifecycle.js的mountComponent方法"></a>修改lifecycle.js的mountComponent方法</h2><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 组件挂载</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">mountComponent</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> el<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 把要被挂载的真实dom,放到vm实例上</span>    vm<span class="token punctuation">.</span>$el <span class="token operator">=</span> el <span class="token comment" spellcheck="true">// 这个el是querySelector获取了的</span>    <span class="token comment" spellcheck="true">// 1,调用render方法产生虚拟节点,虚拟dom</span>    <span class="token comment" spellcheck="true">// 2,根据虚拟dom生成真实dom </span>    <span class="token comment" spellcheck="true">// 3,插入el元素</span>    <span class="token comment" spellcheck="true">// 创建watcher</span>    <span class="token keyword">const</span> updateComponent <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        vm<span class="token punctuation">.</span><span class="token function">_update</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span><span class="token function">_render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">new</span> <span class="token class-name">Watcher</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> updateComponent<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// true用于标识这是一个渲染watcher</span>    <span class="token comment" spellcheck="true">// 改为在Watcher创建时调用,进行初次渲染</span>    <span class="token comment" spellcheck="true">// vm._update(vm._render()) // vm.$options.render 返回虚拟节点</span><span class="token punctuation">}</span></code></pre><h2 id="修改observe-index-js的defineReactive方法"><a href="#修改observe-index-js的defineReactive方法" class="headerlink" title="修改observe/index.js的defineReactive方法"></a>修改observe/index.js的defineReactive方法</h2><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 对象转响应式的方法(重新定义)</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">defineReactive</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 闭包 属性劫持</span>    <span class="token comment" spellcheck="true">// value可能是一个对象,需要对其进行响应式处理</span>    <span class="token function">observe</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 递归了,性能也会降低</span>    <span class="token keyword">let</span> dep <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dep</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 此时每个属性都有dep </span>    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 内部使用了外部的变量(value),所以value被保存到闭包</span>        <span class="token comment" spellcheck="true">// 取值时执行</span>        <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 在模板里取值时(mount)才会依赖收集(此时有watcher,watcher把dep.target赋值为自己)</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 每个属性的dep是不同的</span>                dep<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 属性的收集器记住当前watcher</span>            <span class="token punctuation">}</span>            <span class="token keyword">return</span> value        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 修改时执行</span>        <span class="token keyword">set</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>newValue <span class="token operator">===</span> value<span class="token punctuation">)</span> <span class="token keyword">return</span>            <span class="token function">observe</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 设置值时,如果是对象,也需要转响应式!  </span>            value <span class="token operator">=</span> newValue            dep<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// 通知更新</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><h2 id="observe-dep-js"><a href="#observe-dep-js" class="headerlink" title="observe/dep.js"></a>observe/dep.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment" spellcheck="true">// 用于唯一标识dep </span><span class="token keyword">class</span> <span class="token class-name">Dep</span> <span class="token punctuation">{</span>    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token operator">++</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>subs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">// 存放当前属性对应的watcher有哪些</span>    <span class="token punctuation">}</span>    <span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 不希望加重复的watcher</span>        <span class="token comment" spellcheck="true">// this.subs.push(Dep.target)</span>        <span class="token comment" spellcheck="true">// debugger</span>        Dep<span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">addDep</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 让watcher记住dep</span>    <span class="token punctuation">}</span>    <span class="token function">addSub</span><span class="token punctuation">(</span>watcher<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 在watcher里有去重</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>subs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>watcher<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 更新方法!</span>    <span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 让所有watcher更新数据</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>subs<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>watcher <span class="token operator">=</span><span class="token operator">></span> watcher<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span><span class="token punctuation">}</span>Dep<span class="token punctuation">.</span>target <span class="token operator">=</span> <span class="token keyword">null</span><span class="token keyword">export</span> <span class="token keyword">default</span> Dep </code></pre><h2 id="observe-watcher-js"><a href="#observe-watcher-js" class="headerlink" title="observe/watcher.js"></a>observe/watcher.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> Dep <span class="token keyword">from</span> <span class="token string">"./dep"</span><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment" spellcheck="true">// 唯一标识watcher</span><span class="token comment" spellcheck="true">// 1,渲染watcher时,把当前渲染的watcher放到dep.target</span><span class="token comment" spellcheck="true">// 2,调用_render() 会取值,走到属性的get上</span><span class="token keyword">class</span> <span class="token class-name">Watcher</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 不同组件有不同的watcher</span>    <span class="token comment" spellcheck="true">// 传入vm和更新方法</span>    <span class="token function">constructor</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> fn<span class="token punctuation">,</span> options<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token operator">++</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>renderWatcher <span class="token operator">=</span> options <span class="token comment" spellcheck="true">// 是一个渲染watcher</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>getter <span class="token operator">=</span> fn <span class="token comment" spellcheck="true">// getter意味着调用这个函数可以发生取值操作</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>deps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">// 后续实现计算属性和清理工作用得到</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>depIds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 保存dep的id(多个),set集合可以去重</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// init get</span>    <span class="token punctuation">}</span>    <span class="token function">addDep</span><span class="token punctuation">(</span>dep<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 一个组件有多个属性,重复的不用记录</span>        <span class="token keyword">let</span> id <span class="token operator">=</span> dep<span class="token punctuation">.</span>id        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>depIds<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// watcher记录dep</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>deps<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>dep<span class="token punctuation">)</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>depIds<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">// 此时让dep记录watcher</span>            dep<span class="token punctuation">.</span><span class="token function">addSub</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 更新</span>    <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        Dep<span class="token punctuation">.</span>target <span class="token operator">=</span> <span class="token keyword">this</span> <span class="token comment" spellcheck="true">// 当前的watcher给dep</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 会从vm上取值</span>        Dep<span class="token punctuation">.</span>target <span class="token operator">=</span> <span class="token keyword">null</span> <span class="token comment" spellcheck="true">// 渲染完清空</span>    <span class="token punctuation">}</span>    <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 重新渲染</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 需要给每个属性添加一个dep,目的是收集watcher</span><span class="token comment" spellcheck="true">// 一个组件中,有多个属性(n个属性对应一个视图) n个dep对应一个watcher</span><span class="token comment" spellcheck="true">// 一个属性,对应多个组件,一个dep对应多个watcher</span><span class="token comment" spellcheck="true">// 多对多</span><span class="token keyword">export</span> <span class="token keyword">default</span> Watcher</code></pre><h2 id="测试-6"><a href="#测试-6" class="headerlink" title="测试"></a>测试</h2><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 可以给模板中的属性添加一个收集器 dep --></span>    <span class="token comment" spellcheck="true">&lt;!-- 页面渲染时 将渲染逻辑封装到watcher中, vm._update(vm.render()) --></span>    <span class="token comment" spellcheck="true">&lt;!-- 让dep记住这个watcher,数据变化时找到对应的watcher进行更新 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 多个{{name}},会有重复watcher,要避免 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 如果渲染的el里有注释,会卡死!!!! --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span>skyblue<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">show</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>123<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            {{age}} hello {{name}} world {{name}} {{name}}        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        world        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>            {{age}}        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">// console.log(Vue);</span>        <span class="token comment" spellcheck="true">// 响应式的数据变化 (数据变化可以被监控) </span>        <span class="token comment" spellcheck="true">// debugger</span>        <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token punctuation">{</span>                    name<span class="token punctuation">:</span> <span class="token string">'zs'</span><span class="token punctuation">,</span>                    age<span class="token punctuation">:</span> <span class="token number">12</span><span class="token punctuation">,</span>                    <span class="token comment" spellcheck="true">// obj: {</span>                    <span class="token comment" spellcheck="true">//     sex: 'boy'</span>                    <span class="token comment" spellcheck="true">// },</span>                    arr<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'2'</span><span class="token punctuation">,</span> <span class="token string">'cat'</span><span class="token punctuation">,</span> <span class="token string">'ant'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> a<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">]</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>         <span class="token punctuation">}</span><span class="token punctuation">)</span>        vm<span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span>         <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            vm<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">'ls'</span>            vm<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">23</span>            <span class="token comment" spellcheck="true">// 手动重新渲染</span>            <span class="token comment" spellcheck="true">// vm._update(vm._render())</span>            vm<span class="token punctuation">.</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment" spellcheck="true">// 页面没用到的更新了也不会触发观察者</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><img src="img_20.png" alt="img_20.png"></p><h1 id="实现异步更新原理"><a href="#实现异步更新原理" class="headerlink" title="实现异步更新原理"></a>实现异步更新原理</h1><blockquote><p>多个更新任务放到一个队列</p></blockquote><h2 id="watcher-js"><a href="#watcher-js" class="headerlink" title="watcher.js"></a>watcher.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> Dep <span class="token keyword">from</span> <span class="token string">"./dep"</span><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment" spellcheck="true">// 唯一标识watcher</span><span class="token comment" spellcheck="true">// 1,渲染watcher时,把当前渲染的watcher放到dep.target</span><span class="token comment" spellcheck="true">// 2,调用_render() 会取值,走到属性的get上</span><span class="token keyword">class</span> <span class="token class-name">Watcher</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 不同组件有不同的watcher</span>    <span class="token comment" spellcheck="true">// 传入vm和更新方法</span>    <span class="token function">constructor</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> fn<span class="token punctuation">,</span> options<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token operator">++</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>renderWatcher <span class="token operator">=</span> options <span class="token comment" spellcheck="true">// 是一个渲染watcher</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>getter <span class="token operator">=</span> fn <span class="token comment" spellcheck="true">// getter意味着调用这个函数可以发生取值操作</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>deps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">// 后续实现计算属性和清理工作用得到</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>depIds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 保存dep的id(多个),set集合可以去重</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// init get</span>    <span class="token punctuation">}</span>    <span class="token function">addDep</span><span class="token punctuation">(</span>dep<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 一个组件有多个属性,重复的不用记录</span>        <span class="token keyword">let</span> id <span class="token operator">=</span> dep<span class="token punctuation">.</span>id        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>depIds<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// watcher记录dep</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>deps<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>dep<span class="token punctuation">)</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>depIds<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">// 此时让dep记录watcher</span>            dep<span class="token punctuation">.</span><span class="token function">addSub</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 更新</span>    <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        Dep<span class="token punctuation">.</span>target <span class="token operator">=</span> <span class="token keyword">this</span> <span class="token comment" spellcheck="true">// 当前的watcher给dep</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 会从vm上取值</span>        Dep<span class="token punctuation">.</span>target <span class="token operator">=</span> <span class="token keyword">null</span> <span class="token comment" spellcheck="true">// 渲染完清空</span>    <span class="token punctuation">}</span>    <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 多次更新同一个数据,则应该用队列记录,只更新最后一次</span>        <span class="token function">queryWatcher</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 暂存watcher</span>        <span class="token comment" spellcheck="true">// this.get() // 重新渲染</span>    <span class="token punctuation">}</span>    <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 此时最终的vm.name已经赋值完毕(ls5),更新时取值,就是最后的这个值</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 需要给每个属性添加一个dep,目的是收集watcher</span><span class="token comment" spellcheck="true">// 一个组件中,有多个属性(n个属性对应一个视图) n个dep对应一个watcher</span><span class="token comment" spellcheck="true">// 一个属性,对应多个组件,一个dep对应多个watcher</span><span class="token comment" spellcheck="true">// 多对多</span><span class="token keyword">let</span> queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">// 源码是用set来去重</span><span class="token comment" spellcheck="true">// 这里使用对象来去重</span><span class="token keyword">let</span> has <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">let</span> pending <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment" spellcheck="true">// 防抖</span><span class="token comment" spellcheck="true">// 等待一段时间后进入该方法,一次性更新</span><span class="token keyword">function</span> <span class="token function">flushSchedulerQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> flushQueue <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 刷新过程中,可能也有新的watcher,可以重新放到queue</span>    queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    has <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    pending <span class="token operator">=</span> <span class="token boolean">false</span>    flushQueue<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>q <span class="token operator">=</span><span class="token operator">></span> q<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">queryWatcher</span><span class="token punctuation">(</span>watcher<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> id <span class="token operator">=</span> watcher<span class="token punctuation">.</span>id    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>has<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 没有重复,直接放入队列</span>        queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>watcher<span class="token punctuation">)</span>        has<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>        <span class="token comment" spellcheck="true">// console.log(queue)</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 不管update多少次,最终只执行一轮刷新操作</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>pending<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">setTimeout</span><span class="token punctuation">(</span>flushSchedulerQueue<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        pending <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 用户更新队列</span><span class="token keyword">let</span> callbacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">let</span> waiting <span class="token operator">=</span> <span class="token boolean">false</span><span class="token comment" spellcheck="true">// 异步批处理</span><span class="token keyword">function</span> <span class="token function">flushCallbacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> cbs <span class="token operator">=</span> callbacks<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>    waiting <span class="token operator">=</span> <span class="token boolean">false</span>    callbacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    cbs<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>cb <span class="token operator">=</span><span class="token operator">></span> <span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">let</span> timerFunc<span class="token comment" spellcheck="true">// 有bug,promise拿到的还是老的</span><span class="token comment" spellcheck="true">// if (Promise) { // 判断有没有promise(可以转字符串看是不是原生promise)</span><span class="token comment" spellcheck="true">//     // console.log('Promise')</span><span class="token comment" spellcheck="true">//     timerFunc = () => {</span><span class="token comment" spellcheck="true">//         Promise.resolve().then(flushCallbacks)</span><span class="token comment" spellcheck="true">//     }</span><span class="token comment" spellcheck="true">// } else if (MutationObserver) {</span><span class="token comment" spellcheck="true">//     // 这里传入的回调是异步的</span><span class="token comment" spellcheck="true">//     let observe = new MutationObserver(flushCallbacks)</span><span class="token comment" spellcheck="true">//     // 监控文本变化</span><span class="token comment" spellcheck="true">//     let textNode = document.createTextNode(1)</span><span class="token comment" spellcheck="true">//     observe.observe(textNode, {</span><span class="token comment" spellcheck="true">//         characterData: true,</span><span class="token comment" spellcheck="true">//     })</span><span class="token comment" spellcheck="true">//     timerFunc = () => {</span><span class="token comment" spellcheck="true">//         textNode.textContent = 2</span><span class="token comment" spellcheck="true">//     }</span><span class="token comment" spellcheck="true">// } else if (setImmediate) {</span><span class="token comment" spellcheck="true">//     timerFunc = () => {</span><span class="token comment" spellcheck="true">//         setImmediate(flushCallbacks)</span><span class="token comment" spellcheck="true">//     }</span><span class="token comment" spellcheck="true">// } else {</span><span class="token comment" spellcheck="true">//     timerFunc = () => {</span><span class="token comment" spellcheck="true">//         setTimeout(flushCallbacks)</span><span class="token comment" spellcheck="true">//     }</span><span class="token comment" spellcheck="true">// }</span><span class="token comment" spellcheck="true">// 暴露给外部的更新方法</span><span class="token comment" spellcheck="true">// vue里的nextTick不是用api(定时器...),而是采用优雅降级的方式</span><span class="token comment" spellcheck="true">// 降级: promise(ie不兼容) => MutationObserver(h5的api) => setImmediate(ie专用) => setTimeout</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">nextTick</span><span class="token punctuation">(</span>cb<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 先用户还是先内部更新 ? => 看用户更新方法在前,还是数据变化在前</span>    <span class="token comment" spellcheck="true">// 定时器耗性能,promise执行比定时器快</span>    callbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>cb<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>waiting<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            <span class="token function">flushCallbacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// timerFunc(flushCallbacks) </span>        <span class="token comment" spellcheck="true">// timerFunc() // 执行的就是flushCallbacks</span>        waiting <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">default</span> Watcher</code></pre><h2 id="index-js-2"><a href="#index-js-2" class="headerlink" title="index.js"></a>index.js</h2><p><img src="img_21.png" alt="img_21.png"></p><h2 id="测试-7"><a href="#测试-7" class="headerlink" title="测试"></a>测试</h2><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 可以给模板中的属性添加一个收集器 dep --></span>    <span class="token comment" spellcheck="true">&lt;!-- 页面渲染时 将渲染逻辑封装到watcher中, vm._update(vm.render()) --></span>    <span class="token comment" spellcheck="true">&lt;!-- 让dep记住这个watcher,数据变化时找到对应的watcher进行更新 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 多个{{name}},会有重复watcher,要避免 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 如果渲染的el里有注释,会卡死!!!! --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span>skyblue<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">show</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>123<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            {{age}} hello {{name}} world {{name}} {{name}}        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        world        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>            {{age}}        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">// console.log(Vue);</span>        <span class="token comment" spellcheck="true">// 响应式的数据变化 (数据变化可以被监控) </span>        <span class="token comment" spellcheck="true">// debugger</span>        <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token punctuation">{</span>                    name<span class="token punctuation">:</span> <span class="token string">'zs'</span><span class="token punctuation">,</span>                    age<span class="token punctuation">:</span> <span class="token number">12</span><span class="token punctuation">,</span>                    <span class="token comment" spellcheck="true">// obj: {</span>                    <span class="token comment" spellcheck="true">//     sex: 'boy'</span>                    <span class="token comment" spellcheck="true">// },</span>                    arr<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'2'</span><span class="token punctuation">,</span> <span class="token string">'cat'</span><span class="token punctuation">,</span> <span class="token string">'ant'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> a<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">]</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token comment" spellcheck="true">// template: '&lt;div>hello&lt;/div>'</span>            <span class="token comment" spellcheck="true">// el: '#app', // 将数据解析到el上</span>            <span class="token comment" spellcheck="true">// render(){</span>            <span class="token comment" spellcheck="true">// return createElement('div',{})</span>            <span class="token comment" spellcheck="true">// }</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        vm<span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// 实现解析表达式的方案</span>        <span class="token comment" spellcheck="true">// 1,模板引擎 -> 性能差,需要正则匹配替换 vue1.0 -> 没有引入虚拟dom</span>        <span class="token comment" spellcheck="true">// 2,采用虚拟dom -> 数据变化后,比较虚拟dom的差异,最后更新需要更新的地方</span>        <span class="token comment" spellcheck="true">// 3,核心就是将模板变成js语法,通过js语法生成虚拟dom</span>        <span class="token comment" spellcheck="true">// 涉及语法转换,如 es6->es5 css压缩</span>        <span class="token comment" spellcheck="true">// 需要先变成语法树再重新组装代码,将template语法转换成render函数</span>        <span class="token comment" spellcheck="true">// setTimeout(() => {</span>        <span class="token comment" spellcheck="true">//     // 多次更新</span>        <span class="token comment" spellcheck="true">//     vm.name = 'ls1'</span>        <span class="token comment" spellcheck="true">//     vm.name = 'ls2'</span>        <span class="token comment" spellcheck="true">//     vm.name = 'ls3'</span>        <span class="token comment" spellcheck="true">//     vm.name = 'ls4'</span>        <span class="token comment" spellcheck="true">//     vm.name = 'ls5'</span>        <span class="token comment" spellcheck="true">//     // vm.age = 23</span>        <span class="token comment" spellcheck="true">//     // 手动重新渲染</span>        <span class="token comment" spellcheck="true">//     // vm._update(vm._render())</span>        <span class="token comment" spellcheck="true">//     // vm.arr[0] = 0 // 页面没用到的更新了也不会触发观察者</span>        <span class="token comment" spellcheck="true">// }, 1000);</span>        vm<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">'jw'</span> <span class="token comment" spellcheck="true">// 不会立即重新渲染页面</span>        <span class="token comment" spellcheck="true">// 同步获取,拿不到最新的</span>        <span class="token comment" spellcheck="true">// console.log(app.innerHTML);</span>        <span class="token comment" spellcheck="true">// setTimeout(() => {</span>        <span class="token comment" spellcheck="true">//     // 可以拿到最新的</span>        <span class="token comment" spellcheck="true">//     console.log(app.innerHTML);</span>        <span class="token comment" spellcheck="true">// }, 1000);</span>        <span class="token comment" spellcheck="true">// // promise优先级大于定时器,拿到的还是老的</span>        <span class="token comment" spellcheck="true">// Promise.resolve().then(() => {</span>        <span class="token comment" spellcheck="true">//     console.log(app.innerHTML);</span>        <span class="token comment" spellcheck="true">// })</span>        <span class="token comment" spellcheck="true">// 解决方案: 使用统一暴露给外部的更新方法</span>        <span class="token comment" spellcheck="true">// nextTick不是创建异步任务,而是将任务维护到队列</span>        vm<span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>app<span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// vm.name = 'jw2' // 放在后面更新,前面拿到的应该还是老数据</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><img src="img_22.png" alt="img_22.png"></p><h1 id="实现数组的更新"><a href="#实现数组的更新" class="headerlink" title="实现数组的更新"></a>实现数组的更新</h1><h2 id="observe"><a href="#observe" class="headerlink" title="observe/"></a>observe/</h2><h3 id="index-js-3"><a href="#index-js-3" class="headerlink" title="index.js"></a>index.js</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> newArrayProto <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./array"</span><span class="token keyword">import</span> Dep <span class="token keyword">from</span> <span class="token string">'./dep'</span><span class="token comment" spellcheck="true">// 观察data对象的类</span><span class="token keyword">class</span> <span class="token class-name">Observer</span> <span class="token punctuation">{</span>    <span class="token function">constructor</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// data可能是对象或数组</span>        <span class="token comment" spellcheck="true">// 如果对象或数组新增数据,希望也能进行更新,所以给数组或对象本身添加dep</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>dep <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dep</span><span class="token punctuation">(</span><span class="token punctuation">)</span>         Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token string">'__ob__'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>            value<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">,</span>            <span class="token comment" spellcheck="true">// 如果data是对象,则加上__ob__后,会一直进行响应式处理walk(在构造函数调用了),然后栈溢出</span>            enumerable<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token comment" spellcheck="true">// 不可枚举,(循环时无法获取)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// 把observer实例挂载到data,则array.js也可以使用observer的观测数组方法</span>        <span class="token comment" spellcheck="true">// 如果data上有一个__ob__属性,则说明被观测过</span>        <span class="token comment" spellcheck="true">// data.__ob__ = this</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 如果data是数组</span>            <span class="token comment" spellcheck="true">// 可以保留数组的特性,重写数组的部分方法 7个变异方法 可以修改数组本身</span>            <span class="token comment" spellcheck="true">// data.__proto__ = { // 这样重新指定原型链,会导致数组原有属性和方法的缺失</span>            <span class="token comment" spellcheck="true">//     push() {</span>            <span class="token comment" spellcheck="true">//         // 重写push</span>            <span class="token comment" spellcheck="true">//         console.log('push')</span>            <span class="token comment" spellcheck="true">//     }</span>            <span class="token comment" spellcheck="true">// }</span>            data<span class="token punctuation">.</span>__proto__ <span class="token operator">=</span> newArrayProto            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">observeArray</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>            <span class="token keyword">return</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// Object.defineProperty只能劫持已经存在的属性 (vue里提供了专门的api($set $delete ...)来解决)</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">walk</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token function">walk</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 循环对象,对属性依次劫持</span>        <span class="token comment" spellcheck="true">// 重新定义属性(vue2的性能瓶颈所在),每个变量都添加get/set监听</span>        Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>key <span class="token operator">=</span><span class="token operator">></span> <span class="token function">defineReactive</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> key<span class="token punctuation">,</span> data<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 观测,对数组和数组里的对象进行响应式处理</span>    <span class="token function">observeArray</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        data<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> <span class="token function">observe</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">dependArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> value<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> current <span class="token operator">=</span> value<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        current<span class="token punctuation">.</span>__ob__ <span class="token operator">&amp;&amp;</span> current<span class="token punctuation">.</span>__ob__<span class="token punctuation">.</span>dep<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// 如果数组里有数组,而且还有数组,就继续依赖收集</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">dependArray</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 对象转响应式的方法(重新定义)</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">defineReactive</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 闭包 属性劫持</span>    <span class="token comment" spellcheck="true">// value可能是一个对象,需要对其进行响应式处理</span>    <span class="token keyword">let</span> childOb <span class="token operator">=</span> <span class="token function">observe</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 递归了,性能也会降低</span>    <span class="token comment" spellcheck="true">// childOb.dep是用来收集依赖的,childOb是observe方法返回的Observe实例对象</span>    <span class="token keyword">let</span> dep <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dep</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 此时每个属性都有dep </span>    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 内部使用了外部的变量(value),所以value被保存到闭包</span>        <span class="token comment" spellcheck="true">// 取值时执行</span>        <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 在模板里取值时(mount)才会依赖收集(此时有watcher,watcher把dep.target赋值为自己)</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 每个属性的dep是不同的</span>                dep<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 属性的收集器记住当前watcher</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>childOb<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 如果有childOb(非对象和被代理过的不会产生Observer实例)</span>                    childOb<span class="token punctuation">.</span>dep<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// (数组或对象)进行依赖收集</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 解决数组嵌套数组无法依赖收集的问题</span>                        <span class="token comment" spellcheck="true">// 如果是数组</span>                        <span class="token function">dependArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">return</span> value        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 修改时执行</span>        <span class="token keyword">set</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>newValue <span class="token operator">===</span> value<span class="token punctuation">)</span> <span class="token keyword">return</span>            <span class="token function">observe</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 设置值时,如果是对象,也需要转响应式!  </span>            value <span class="token operator">=</span> newValue            dep<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// 通知更新</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">observe</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// ......</span><span class="token punctuation">}</span></code></pre><h3 id="array-js"><a href="#array-js" class="headerlink" title="array.js"></a>array.js</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 重写数组部分方法</span><span class="token keyword">let</span> oldArrayProto <span class="token operator">=</span> Array<span class="token punctuation">.</span>prototype <span class="token comment" spellcheck="true">// 获取数组的原型</span><span class="token comment" spellcheck="true">// newArrayProto = oldArrayProto 拿到了旧原型</span><span class="token keyword">export</span> <span class="token keyword">let</span> newArrayProto <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>oldArrayProto<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 重写</span><span class="token keyword">let</span> methods <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token comment" spellcheck="true">// 找到所有的变异方法(可以修改数组的方法)</span>    <span class="token comment" spellcheck="true">// push 将新元素添加到数组的末尾，并返回新的长度</span>    <span class="token comment" spellcheck="true">// pop 删除数组的最后一个元素，并返回该元素 </span>    <span class="token comment" spellcheck="true">// shift 移除数组的第一项 </span>    <span class="token comment" spellcheck="true">// unshift 将新元素添加到数组的开头，并返回新的长度</span>    <span class="token comment" spellcheck="true">// reverse 反转数组中元素的顺序 </span>    <span class="token comment" spellcheck="true">// sort 排序</span>    <span class="token comment" spellcheck="true">// splice 从数组中添加/删除元素</span>    <span class="token string">'push'</span><span class="token punctuation">,</span> <span class="token string">'pop'</span><span class="token punctuation">,</span>    <span class="token string">'shift'</span><span class="token punctuation">,</span> <span class="token string">'unshift'</span><span class="token punctuation">,</span>    <span class="token string">'reverse'</span><span class="token punctuation">,</span>    <span class="token string">'sort'</span><span class="token punctuation">,</span>    <span class="token string">'splice'</span><span class="token punctuation">]</span>methods<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>method <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// arr.push(1,2,3)</span>    <span class="token comment" spellcheck="true">// 重写方法</span>    newArrayProto<span class="token punctuation">[</span>method<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 调用</span>        <span class="token comment" spellcheck="true">// 内部调用原方法,函数的劫持,切片编程</span>        <span class="token keyword">const</span> result <span class="token operator">=</span> oldArrayProto<span class="token punctuation">[</span>method<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 保留旧方法的逻辑 </span>        <span class="token comment" spellcheck="true">// 对新增的数据再次进行劫持</span>        <span class="token keyword">let</span> inserted <span class="token comment" spellcheck="true">// 是一个数组</span>        <span class="token keyword">let</span> ob <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>__ob__ <span class="token comment" spellcheck="true">// 挂载在data的observer实例,可以使用其更新方法</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>method<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">case</span> <span class="token string">'unshift'</span><span class="token punctuation">:</span>            <span class="token keyword">case</span> <span class="token string">'push'</span><span class="token punctuation">:</span>                inserted <span class="token operator">=</span> args                <span class="token keyword">break</span>            <span class="token keyword">case</span> <span class="token string">'splice'</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">// splice(开始位置,结束位置,{新增数据},{新增数据})</span>                <span class="token comment" spellcheck="true">// 获取新增的数据</span>                inserted <span class="token operator">=</span> args<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 去掉前两个,拿到剩下的</span>                <span class="token keyword">break</span>            <span class="token keyword">default</span><span class="token punctuation">:</span>                <span class="token keyword">break</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// console.log(inserted)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>inserted<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// console.log(this)</span>            <span class="token comment" spellcheck="true">// 数组转响应式</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>__ob__<span class="token punctuation">.</span><span class="token function">observeArray</span><span class="token punctuation">(</span>inserted<span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 数组变化,更新依赖收集</span>        ob<span class="token punctuation">.</span>dep<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> result    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><h2 id="测试-8"><a href="#测试-8" class="headerlink" title="测试"></a>测试</h2><h3 id="index-html-2"><a href="#index-html-2" class="headerlink" title="index.html"></a>index.html</h3><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 可以给模板中的属性添加一个收集器 dep --></span>    <span class="token comment" spellcheck="true">&lt;!-- 页面渲染时 将渲染逻辑封装到watcher中, vm._update(vm.render()) --></span>    <span class="token comment" spellcheck="true">&lt;!-- 让dep记住这个watcher,数据变化时找到对应的watcher进行更新 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 多个{{name}},会有重复watcher,要避免 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 如果渲染的el里有注释,会卡死!!!! --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span>skyblue<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">show</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>123<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            {{ a }}            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token punctuation">/></span></span>            {{arr}}        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">// console.log(Vue);</span>        <span class="token comment" spellcheck="true">// 响应式的数据变化 (数据变化可以被监控) </span>        <span class="token comment" spellcheck="true">// debugger</span>        <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>            <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token punctuation">{</span>                    arr<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> a<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                    a<span class="token punctuation">:</span> <span class="token punctuation">{</span> a<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// vm.$mount('#app')</span>        <span class="token comment" spellcheck="true">// vm.arr[0] = 100 // 只重写数组方法,没有监视数组改变</span>        <span class="token comment" spellcheck="true">// vm.arr.length = 100 // 没有监控数组长度变化</span>        <span class="token comment" spellcheck="true">// 改变的不是arr里的值,而是改变arr对象本身,所有会更新</span>        <span class="token comment" spellcheck="true">// vm.arr = [123, 456]</span>        <span class="token comment" spellcheck="true">// vm.arr[3].a = 2 // a对象取值时会调用jsonstringfy进行取值,所以会更新</span>        <span class="token comment" spellcheck="true">// vm.a.a = 199</span>        vm<span class="token punctuation">.</span>a<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">222</span> <span class="token comment" spellcheck="true">// 无法直接对不存在的值更新(要用$set)</span>        vm<span class="token punctuation">.</span>arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// $set原理</span>        vm<span class="token punctuation">.</span>a<span class="token punctuation">.</span>__ob__<span class="token punctuation">.</span>dep<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        vm<span class="token punctuation">.</span>arr<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'c'</span><span class="token punctuation">)</span>        vm<span class="token punctuation">.</span>arr<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'d'</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><img src="img_23.png" alt="vue3使用proxy"><br><img src="img_24.png" alt="img_24.png"></p><h1 id="实现计算属性"><a href="#实现计算属性" class="headerlink" title="实现计算属性"></a>实现计算属性</h1><blockquote><p>计算属性就是根据多个响应式数据得出的值</p></blockquote><h2 id="使用原生vue2的计算属性-进行分析"><a href="#使用原生vue2的计算属性-进行分析" class="headerlink" title="使用原生vue2的计算属性,进行分析"></a>使用原生vue2的计算属性,进行分析</h2><blockquote><ol><li>多次get只会执行一次(除非值发生了变化) -&gt; 需要维护一个dirty(脏值检测)</li><li>计算属性不会立刻执行</li><li>有get和set -&gt; 是一个defineProperty</li><li>可以监听计算属性所依赖的值的改变,从而更新视图 -&gt; 计算属性 是/有 watcher</li></ol></blockquote><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 可以给模板中的属性添加一个收集器 dep --></span>    <span class="token comment" spellcheck="true">&lt;!-- 页面渲染时 将渲染逻辑封装到watcher中, vm._update(vm.render()) --></span>    <span class="token comment" spellcheck="true">&lt;!-- 让dep记住这个watcher,数据变化时找到对应的watcher进行更新 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 多个{{name}},会有重复watcher,要避免 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 如果渲染的el里有注释,会卡死!!!! --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>         {{fullname}} {{fullname}} {{fullname}}    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- &lt;script src="./vue.js">&lt;/script> --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.bootcdn.net/ajax/libs/vue/2.6.14/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>            data<span class="token punctuation">:</span> <span class="token punctuation">{</span>                firstname<span class="token punctuation">:</span> <span class="token string">'俊'</span><span class="token punctuation">,</span>                lastname<span class="token punctuation">:</span> <span class="token string">'杰'</span><span class="token punctuation">,</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 简写</span>                <span class="token comment" spellcheck="true">// fullname() { // defineProperty中的get方法</span>                <span class="token comment" spellcheck="true">// return this.firstname + this.lastname</span>                <span class="token comment" spellcheck="true">// }</span>                fullname<span class="token punctuation">:</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">// 可见,计算属性需要维护一个dirty属性</span>                    <span class="token comment" spellcheck="true">// 默认计算属性不会立刻执行</span>                    <span class="token comment" spellcheck="true">// 就是一个defineProperty</span>                    <span class="token comment" spellcheck="true">// 如果组成计算属性的值改变(计算属性依赖的值发生改变),则会触发更新 -> 计算属性也是一个watcher</span>                    <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'run'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// (如果值没发生改变)多次调用只执行一次 (脏值检测)</span>                        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>firstname <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lastname                    <span class="token punctuation">}</span><span class="token punctuation">,</span>                    <span class="token keyword">set</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// vm.fullname = '123'</span>            vm<span class="token punctuation">.</span>firstname <span class="token operator">=</span> <span class="token string">'123'</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><img src="img_25.png"></p><blockquote><p>计算属性所依赖的属性的dep监听到变化,会去找watcher,此时stack里只剩下计算属性的watcher,但是当前的update方法执行get方法不会触发更新(传入watchcer的fn(是getter)不能更新视图)</p></blockquote><p><img src="img_27.png" alt="修改了dep对应的属性的值,此时渲染watcher执行结束已经被pop,需要让dep记录下渲染watcher,更新时调用渲染watcher来更新视图"></p><h2 id="修改state-js"><a href="#修改state-js" class="headerlink" title="修改state.js"></a>修改state.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> Dep <span class="token keyword">from</span> <span class="token string">"./observe/dep"</span><span class="token keyword">import</span> <span class="token punctuation">{</span> observe <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./observe/index"</span><span class="token keyword">import</span> Watcher <span class="token keyword">from</span> <span class="token string">"./observe/watcher"</span><span class="token comment" spellcheck="true">// 对options内属性和方法进行操作 </span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">initState</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> opts <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options    <span class="token comment" spellcheck="true">// debugger</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// data数据的初始化</span>        <span class="token function">initData</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// console.log(vm.$options)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>computed<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 计算属性初始化</span>        <span class="token function">initComputed</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 代理取值和设置值,通过响应式的方法来改变实际操作的值</span><span class="token keyword">function</span> <span class="token function">proxy</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> target<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// ......</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 数据初始化(转为响应式)</span><span class="token keyword">function</span> <span class="token function">initData</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// ......</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 计算属性初始化</span><span class="token keyword">function</span> <span class="token function">initComputed</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 拿到用户定义的计算属性(有两种写法)</span>    <span class="token keyword">const</span> computed <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>computed    <span class="token comment" spellcheck="true">// console.log(computed)</span>    <span class="token comment" spellcheck="true">// 挂载到vm</span>    <span class="token keyword">let</span> watchers <span class="token operator">=</span> vm<span class="token punctuation">.</span>_computedWatchers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment" spellcheck="true">// 保存不同计算属性的watcher</span>    <span class="token comment" spellcheck="true">// 拿到computed里定义的计算属性</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> computed<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> userDef <span class="token operator">=</span> computed<span class="token punctuation">[</span>key<span class="token punctuation">]</span>        <span class="token comment" spellcheck="true">// 缓存</span>        <span class="token comment" spellcheck="true">// 需要监控计算属性中get(依赖的属性)的变化</span>        <span class="token keyword">let</span> fn <span class="token operator">=</span> <span class="token keyword">typeof</span> userDef <span class="token operator">===</span> <span class="token string">'function'</span> <span class="token operator">?</span> userDef <span class="token punctuation">:</span> userDef<span class="token punctuation">.</span><span class="token keyword">get</span>        <span class="token comment" spellcheck="true">// 直接new,会走fn,所以用lazy来标识不需要立刻执行fn</span>        watchers<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Watcher</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> fn<span class="token punctuation">,</span> <span class="token punctuation">{</span> lazy<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 将计算属性和watcher对应起来</span>        <span class="token function">defineComputed</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> key<span class="token punctuation">,</span> userDef<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 定义计算属性</span><span class="token keyword">function</span> <span class="token function">defineComputed</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> userDef<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 判断计算属性是函数还是对象</span>    <span class="token comment" spellcheck="true">// const getter = typeof userDef === 'function' ? userDef : userDef.get</span>    <span class="token keyword">const</span> setter <span class="token operator">=</span> userDef<span class="token punctuation">.</span><span class="token keyword">set</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// console.log(getter, setter)</span>    <span class="token comment" spellcheck="true">// 可以通过实例(target[vm])获取对应属性 </span>    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// this指向vm </span>        <span class="token keyword">get</span><span class="token punctuation">:</span> <span class="token function">createComputedGetter</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">set</span><span class="token punctuation">:</span> setter    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 注意: 计算属性不会收集依赖,只会让自己的依赖属性去收集依赖</span><span class="token comment" spellcheck="true">// 包装一下getter,判断是不是重复get了</span><span class="token keyword">function</span> <span class="token function">createComputedGetter</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 检测是否要执行getter</span>    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// this指向vm</span>        <span class="token comment" spellcheck="true">// 拿到对应属性的watcher (计算属性watcher)</span>        <span class="token comment" spellcheck="true">// console.log(this, key) </span>        <span class="token keyword">const</span> watcher <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_computedWatchers<span class="token punctuation">[</span>key<span class="token punctuation">]</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">.</span>dirty<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 如果是dirty,就执行用户传入的函数</span>            watcher<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 调用完会设置dirty为false</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 计算属性出栈后,还要渲染,需要记录渲染watcher来更新视图</span>            watcher<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// console.log(this.value)</span>        <span class="token keyword">return</span> watcher<span class="token punctuation">.</span>value <span class="token comment" spellcheck="true">// 返回watcher上的值</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> </code></pre><h2 id="修改dep-js"><a href="#修改dep-js" class="headerlink" title="修改dep.js"></a>修改dep.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment" spellcheck="true">// 用于唯一标识dep </span><span class="token keyword">class</span> <span class="token class-name">Dep</span> <span class="token punctuation">{</span>    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token operator">++</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>subs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">// 存放当前属性对应的watcher有哪些</span>    <span class="token punctuation">}</span>    <span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 不希望加重复的watcher</span>        <span class="token comment" spellcheck="true">// this.subs.push(Dep.target)</span>        <span class="token comment" spellcheck="true">// debugger</span>        Dep<span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">addDep</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 让watcher记住dep</span>    <span class="token punctuation">}</span>    <span class="token function">addSub</span><span class="token punctuation">(</span>watcher<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 在watcher里有去重</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>subs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>watcher<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 更新方法!</span>    <span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 让所有watcher更新数据</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>subs<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>watcher <span class="token operator">=</span><span class="token operator">></span> watcher<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>Dep<span class="token punctuation">.</span>target <span class="token operator">=</span> <span class="token keyword">null</span> <span class="token comment" spellcheck="true">// 这个stack是共用的</span><span class="token comment" spellcheck="true">// 只有一个watcher时,其实和之前没有差别</span><span class="token comment" spellcheck="true">// 改为将watcher放入栈,target指向最后放入的watcher</span><span class="token keyword">let</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">// 渲染前入栈</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">pushTarget</span><span class="token punctuation">(</span>watcher<span class="token punctuation">)</span> <span class="token punctuation">{</span>    stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>watcher<span class="token punctuation">)</span>    Dep<span class="token punctuation">.</span>target <span class="token operator">=</span> watcher    <span class="token comment" spellcheck="true">// console.log(stack)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 渲染后出栈</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">popTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    Dep<span class="token punctuation">.</span>target <span class="token operator">=</span> stack<span class="token punctuation">[</span>stack<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">default</span> Dep </code></pre><h2 id="修改watcher-js"><a href="#修改watcher-js" class="headerlink" title="修改watcher.js"></a>修改watcher.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> Dep<span class="token punctuation">,</span> <span class="token punctuation">{</span> popTarget<span class="token punctuation">,</span> pushTarget <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./dep"</span><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment" spellcheck="true">// 唯一标识watcher</span><span class="token comment" spellcheck="true">// 1,渲染watcher时,把当前渲染的watcher放到dep.target</span><span class="token comment" spellcheck="true">// 2,调用_render() 会取值,走到属性的get上</span><span class="token keyword">class</span> <span class="token class-name">Watcher</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 不同组件有不同的watcher</span>    <span class="token comment" spellcheck="true">// 传入vm和更新方法</span>    <span class="token function">constructor</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> fn<span class="token punctuation">,</span> options<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// console.log(fn)</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token operator">++</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>renderWatcher <span class="token operator">=</span> options <span class="token comment" spellcheck="true">// 是一个渲染watcher</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>getter <span class="token operator">=</span> fn <span class="token comment" spellcheck="true">// getter意味着调用这个函数可以发生取值操作</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>deps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">// 后续实现计算属性和清理工作用得到</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>depIds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 保存dep的id(多个),set集合可以去重</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>lazy <span class="token operator">=</span> options<span class="token punctuation">.</span>lazy <span class="token comment" spellcheck="true">// 是否立刻执行fn</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>dirty <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lazy <span class="token comment" spellcheck="true">// 标记脏,是否第一次执行</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>vm <span class="token operator">=</span> vm        <span class="token keyword">this</span><span class="token punctuation">.</span>lazy <span class="token operator">?</span> undefined <span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// init get</span>    <span class="token punctuation">}</span>    <span class="token function">addDep</span><span class="token punctuation">(</span>dep<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 一个组件有多个属性,重复的不用记录</span>        <span class="token keyword">let</span> id <span class="token operator">=</span> dep<span class="token punctuation">.</span>id        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>depIds<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// watcher记录dep</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>deps<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>dep<span class="token punctuation">)</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>depIds<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">// 此时让dep记录watcher</span>            dep<span class="token punctuation">.</span><span class="token function">addSub</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 用户传入的get方法 </span>        <span class="token comment" spellcheck="true">// console.log(this)</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 用户get函数的返回值 </span>        <span class="token keyword">this</span><span class="token punctuation">.</span>dirty <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment" spellcheck="true">// 如果再次取值,则state.js里的判断会false,不会再次触发this.get</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 更新</span>    <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">pushTarget</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// Dep.target = this // 当前的watcher给dep</span>        <span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>getter<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 会从vm上取值</span>        <span class="token comment" spellcheck="true">// console.log(value)</span>        <span class="token comment" spellcheck="true">// console.log(this.getter)</span>        <span class="token function">popTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// Dep.target = null // 渲染完清空</span>        <span class="token keyword">return</span> value <span class="token comment" spellcheck="true">// 计算属性执行的是用户传入的getter,返回值就是计算属性的值</span>    <span class="token punctuation">}</span>    <span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>deps<span class="token punctuation">.</span>length        <span class="token keyword">while</span><span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// dep.depend()</span>            <span class="token comment" spellcheck="true">// dep依赖渲染watcher和计算属性watcher,都需要收集</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>deps<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 让计算属性watcher也收集渲染watcher</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>lazy<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 如果是计算属性,依赖的值变化了,会触发计算属性watcher的update方法</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>dirty <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment" spellcheck="true">// 标记为true,可以更新(state.js)</span>            <span class="token comment" spellcheck="true">// console.log(1) </span>            <span class="token keyword">return</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 多次更新同一个数据,则应该用队列记录,只更新最后一次</span>        <span class="token function">queryWatcher</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 暂存watcher</span>        <span class="token comment" spellcheck="true">// this.get() // 重新渲染</span>    <span class="token punctuation">}</span>    <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 此时最终的vm.name已经赋值完毕(ls5),更新时取值,就是最后的这个值</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 需要给每个属性添加一个dep,目的是收集watcher</span><span class="token comment" spellcheck="true">// 一个组件中,有多个属性(n个属性对应一个视图) n个dep对应一个watcher</span><span class="token comment" spellcheck="true">// 一个属性,对应多个组件,一个dep对应多个watcher</span><span class="token comment" spellcheck="true">// 多对多</span><span class="token keyword">let</span> queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">// 源码是用set来去重</span><span class="token comment" spellcheck="true">// 这里使用对象来去重</span><span class="token keyword">let</span> has <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">let</span> pending <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment" spellcheck="true">// 防抖</span><span class="token comment" spellcheck="true">// 等待一段时间后进入该方法,一次性更新</span><span class="token keyword">function</span> <span class="token function">flushSchedulerQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> flushQueue <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 刷新过程中,可能也有新的watcher,可以重新放到queue</span>    queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    has <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    pending <span class="token operator">=</span> <span class="token boolean">false</span>    flushQueue<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>q <span class="token operator">=</span><span class="token operator">></span> q<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">queryWatcher</span><span class="token punctuation">(</span>watcher<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> id <span class="token operator">=</span> watcher<span class="token punctuation">.</span>id    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>has<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 没有重复,直接放入队列</span>        queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>watcher<span class="token punctuation">)</span>        has<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>        <span class="token comment" spellcheck="true">// console.log(queue)</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 不管update多少次,最终只执行一轮刷新操作</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>pending<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">setTimeout</span><span class="token punctuation">(</span>flushSchedulerQueue<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        pending <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 用户更新队列</span><span class="token keyword">let</span> callbacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">let</span> waiting <span class="token operator">=</span> <span class="token boolean">false</span><span class="token comment" spellcheck="true">// 异步批处理</span><span class="token keyword">function</span> <span class="token function">flushCallbacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> cbs <span class="token operator">=</span> callbacks<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>    waiting <span class="token operator">=</span> <span class="token boolean">false</span>    callbacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    cbs<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>cb <span class="token operator">=</span><span class="token operator">></span> <span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token comment" spellcheck="true">// 暴露给外部的更新方法</span><span class="token comment" spellcheck="true">// vue里的nextTick不是用api(定时器...),而是采用优雅降级的方式</span><span class="token comment" spellcheck="true">// 降级: promise(ie不兼容) => MutationObserver(h5的api) => setImmediate(ie专用) => setTimeout</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">nextTick</span><span class="token punctuation">(</span>cb<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 先用户还是先内部更新 ? => 看用户更新方法在前,还是数据变化在前</span>    <span class="token comment" spellcheck="true">// 定时器耗性能,promise执行比定时器快</span>    callbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>cb<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>waiting<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            <span class="token function">flushCallbacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// timerFunc(flushCallbacks) </span>        <span class="token comment" spellcheck="true">// timerFunc() // 执行的就是flushCallbacks</span>        waiting <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">default</span> Watcher</code></pre><h2 id="测试-9"><a href="#测试-9" class="headerlink" title="测试"></a>测试</h2><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 可以给模板中的属性添加一个收集器 dep --></span>    <span class="token comment" spellcheck="true">&lt;!-- 页面渲染时 将渲染逻辑封装到watcher中, vm._update(vm.render()) --></span>    <span class="token comment" spellcheck="true">&lt;!-- 让dep记住这个watcher,数据变化时找到对应的watcher进行更新 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 多个{{name}},会有重复watcher,要避免 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 如果渲染的el里有注释,会卡死!!!! --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        {{fullname}}    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- &lt;script src="https://cdn.bootcdn.net/ajax/libs/vue/2.6.14/vue.js">&lt;/script> --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>            data<span class="token punctuation">:</span> <span class="token punctuation">{</span>                firstname<span class="token punctuation">:</span> <span class="token string">'俊'</span><span class="token punctuation">,</span>                lastname<span class="token punctuation">:</span> <span class="token string">'杰'</span><span class="token punctuation">,</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 简写</span>                <span class="token function">fullname</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// defineProperty中的get方法</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'run'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">// console.log(this); </span>                    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>firstname <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lastname                <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">// fullname: {</span>                <span class="token comment" spellcheck="true">//     // 可见,计算属性需要维护一个dirty属性</span>                <span class="token comment" spellcheck="true">//     // 默认计算属性不会立刻执行</span>                <span class="token comment" spellcheck="true">//     // 就是一个defineProperty</span>                <span class="token comment" spellcheck="true">//     // 如果组成计算属性的值改变(计算属性依赖的值发生改变),则会触发更新 -> 计算属性也是一个watcher</span>                <span class="token comment" spellcheck="true">//     get() {</span>                <span class="token comment" spellcheck="true">//         console.log('run'); // (如果值没发生改变)多次调用只执行一次 (脏值检测)</span>                <span class="token comment" spellcheck="true">//         return this.firstname + this.lastname</span>                <span class="token comment" spellcheck="true">//     },</span>                <span class="token comment" spellcheck="true">//     set(newVal) {</span>                <span class="token comment" spellcheck="true">//         console.log(newVal);</span>                <span class="token comment" spellcheck="true">//     }</span>                <span class="token comment" spellcheck="true">// }</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>             vm<span class="token punctuation">.</span>firstname <span class="token operator">=</span> <span class="token string">'123'</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><img src="img_28.png" alt="img_28.png"><img src="img_29.png" alt="img_29.png"></p><h1 id="实现watch"><a href="#实现watch" class="headerlink" title="实现watch"></a>实现watch</h1><blockquote><p>watch的功能就是监控特定变量的变化<br>计算属性和watch底层都是基于计算属性</p></blockquote><h2 id="index-js-4"><a href="#index-js-4" class="headerlink" title="index.js"></a>index.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> initMixin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./init"</span><span class="token keyword">import</span> <span class="token punctuation">{</span> initLifeCycle <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./lifecycle"</span><span class="token keyword">import</span> Watcher<span class="token punctuation">,</span> <span class="token punctuation">{</span> nextTick <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./observe/watcher"</span><span class="token comment" spellcheck="true">// class会把所有方法耦合在一起</span><span class="token keyword">function</span> <span class="token function">Vue</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// options就是用户提供的选项 </span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_init</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 初始化 </span>    <span class="token comment" spellcheck="true">// if (options.el) this.$mount(options.el) // 挂载</span><span class="token punctuation">}</span>Vue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$nextTick <span class="token operator">=</span> nextTick <span class="token comment" spellcheck="true">// 统一暴露给外部的更新方法</span><span class="token comment" spellcheck="true">// debugger</span><span class="token function">initMixin</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 拓展了vue,添加init方法</span><span class="token function">initLifeCycle</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 组件渲染</span>Vue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$watch <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>exprOrFn<span class="token punctuation">,</span> cb<span class="token punctuation">,</span> options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// console.log(exprOrFn, cb, options)</span>    <span class="token comment" spellcheck="true">// exprOrFn可能是函数(返回一个函数),也有可能是字符串</span>    <span class="token comment" spellcheck="true">// cb是watch监测的值变化时触发的函数</span>    <span class="token keyword">new</span> <span class="token class-name">Watcher</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> exprOrFn<span class="token punctuation">,</span> <span class="token punctuation">{</span> user<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> cb<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">default</span> Vue</code></pre><h2 id="state-js-1"><a href="#state-js-1" class="headerlink" title="state.js"></a>state.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> Dep <span class="token keyword">from</span> <span class="token string">"./observe/dep"</span><span class="token keyword">import</span> <span class="token punctuation">{</span> observe <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./observe/index"</span><span class="token keyword">import</span> Watcher <span class="token keyword">from</span> <span class="token string">"./observe/watcher"</span><span class="token comment" spellcheck="true">// 对options内属性和方法进行操作 </span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">initState</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> opts <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options    <span class="token comment" spellcheck="true">// debugger</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// data数据的初始化</span>        <span class="token function">initData</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// console.log(vm.$options)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>computed<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 计算属性初始化</span>        <span class="token function">initComputed</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>watch<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// watch的初始化</span>        <span class="token function">initWatch</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 代理取值和设置值,通过响应式的方法来改变实际操作的值</span><span class="token keyword">function</span> <span class="token function">proxy</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> target<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// ......</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 数据初始化(转为响应式)</span><span class="token keyword">function</span> <span class="token function">initData</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// ......</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 计算属性初始化</span><span class="token keyword">function</span> <span class="token function">initComputed</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// ......</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 定义计算属性</span><span class="token keyword">function</span> <span class="token function">defineComputed</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> userDef<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// .....</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 注意: 计算属性不会收集依赖,只会让自己的依赖属性去收集依赖</span><span class="token comment" spellcheck="true">// 包装一下getter,判断是不是重复get了</span><span class="token keyword">function</span> <span class="token function">createComputedGetter</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 检测是否要执行getter</span>    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// this指向vm</span>        <span class="token comment" spellcheck="true">// 拿到对应属性的watcher (计算属性watcher)</span>        <span class="token comment" spellcheck="true">// console.log(this, key) </span>        <span class="token keyword">const</span> watcher <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_computedWatchers<span class="token punctuation">[</span>key<span class="token punctuation">]</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">.</span>dirty<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 如果是dirty,就执行用户传入的函数</span>            watcher<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 调用完会设置dirty为false</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 计算属性出栈后,还要渲染,需要记录渲染watcher来更新视图</span>            watcher<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// console.log(this.value)</span>        <span class="token keyword">return</span> watcher<span class="token punctuation">.</span>value <span class="token comment" spellcheck="true">// 返回watcher上的值</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">initWatch</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> watch <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>watch    <span class="token comment" spellcheck="true">// console.log(watch)</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> watch<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 三种情况: 字符串,数组,函数 (其实也可以是对象,但是这里不考虑)</span>        <span class="token keyword">const</span> handler <span class="token operator">=</span> watch<span class="token punctuation">[</span>key<span class="token punctuation">]</span>        <span class="token comment" spellcheck="true">// 如果是数组</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> handler<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">createWatcher</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> key<span class="token punctuation">,</span> handler<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 如果不是数组</span>            <span class="token function">createWatcher</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> key<span class="token punctuation">,</span> handler<span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 创建watch</span><span class="token keyword">function</span> <span class="token function">createWatcher</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> key<span class="token punctuation">,</span> handler<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 字符串,数组,函数</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> handler <span class="token operator">===</span> <span class="token string">'string'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        handler <span class="token operator">=</span> vm<span class="token punctuation">[</span>handler<span class="token punctuation">]</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> vm<span class="token punctuation">.</span><span class="token function">$watch</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><h2 id="watcher-js-1"><a href="#watcher-js-1" class="headerlink" title="watcher.js"></a>watcher.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> Dep<span class="token punctuation">,</span> <span class="token punctuation">{</span> popTarget<span class="token punctuation">,</span> pushTarget <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./dep"</span><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment" spellcheck="true">// 唯一标识watcher</span><span class="token comment" spellcheck="true">// 1,渲染watcher时,把当前渲染的watcher放到dep.target</span><span class="token comment" spellcheck="true">// 2,调用_render() 会取值,走到属性的get上</span><span class="token keyword">class</span> <span class="token class-name">Watcher</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 不同组件有不同的watcher</span>    <span class="token comment" spellcheck="true">// 传入vm和更新方法</span>    <span class="token function">constructor</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> exprOrFn<span class="token punctuation">,</span> options<span class="token punctuation">,</span> cb<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// console.log(fn)</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token operator">++</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>renderWatcher <span class="token operator">=</span> options <span class="token comment" spellcheck="true">// 是一个渲染watcher</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cb <span class="token operator">=</span> cb <span class="token comment" spellcheck="true">// 获取用户定义的watch回调|处理逻辑</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> exprOrFn <span class="token operator">==</span> <span class="token string">"string"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 字符串</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>getter <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> vm<span class="token punctuation">[</span>exprOrFn<span class="token punctuation">]</span> <span class="token comment" spellcheck="true">// vm.xxx</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>getter <span class="token operator">=</span> exprOrFn <span class="token comment" spellcheck="true">// getter意味着调用这个函数可以发生取值操作</span>        <span class="token punctuation">}</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>deps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">// 后续实现计算属性和清理工作用得到</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>depIds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 保存dep的id(多个),set集合可以去重</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>lazy <span class="token operator">=</span> options<span class="token punctuation">.</span>lazy <span class="token comment" spellcheck="true">// 是否立刻执行fn</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>dirty <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lazy <span class="token comment" spellcheck="true">// 标记脏,是否第一次执行</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>vm <span class="token operator">=</span> vm        <span class="token comment" spellcheck="true">// 拿到初始值</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lazy <span class="token operator">?</span> undefined <span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// init get</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>user <span class="token operator">=</span> options<span class="token punctuation">.</span>user<span class="token comment" spellcheck="true">// 标识是不是用户自己的watch</span>    <span class="token punctuation">}</span>    <span class="token function">addDep</span><span class="token punctuation">(</span>dep<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 一个组件有多个属性,重复的不用记录</span>        <span class="token keyword">let</span> id <span class="token operator">=</span> dep<span class="token punctuation">.</span>id        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>depIds<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// watcher记录dep</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>deps<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>dep<span class="token punctuation">)</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>depIds<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">// 此时让dep记录watcher</span>            dep<span class="token punctuation">.</span><span class="token function">addSub</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 用户传入的get方法 </span>        <span class="token comment" spellcheck="true">// console.log(this)</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 用户get函数的返回值 </span>        <span class="token keyword">this</span><span class="token punctuation">.</span>dirty <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment" spellcheck="true">// 如果再次取值,则state.js里的判断会false,不会再次触发this.get</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 更新</span>    <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">pushTarget</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// Dep.target = this // 当前的watcher给dep</span>        <span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>getter<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 会从vm上取值</span>        <span class="token comment" spellcheck="true">// console.log(value)</span>        <span class="token comment" spellcheck="true">// console.log(this.getter)</span>        <span class="token function">popTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// Dep.target = null // 渲染完清空</span>        <span class="token keyword">return</span> value <span class="token comment" spellcheck="true">// 计算属性执行的是用户传入的getter,返回值就是计算属性的值</span>    <span class="token punctuation">}</span>    <span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>deps<span class="token punctuation">.</span>length        <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// dep.depend()</span>            <span class="token comment" spellcheck="true">// dep依赖渲染watcher和计算属性watcher,都需要收集</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>deps<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 让计算属性watcher也收集渲染watcher</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>lazy<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 如果是计算属性,依赖的值变化了,会触发计算属性watcher的update方法</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>dirty <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment" spellcheck="true">// 标记为true,可以更新(state.js)</span>            <span class="token comment" spellcheck="true">// console.log(1) </span>            <span class="token keyword">return</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 多次更新同一个数据,则应该用队列记录,只更新最后一次</span>        <span class="token function">queryWatcher</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 暂存watcher</span>        <span class="token comment" spellcheck="true">// this.get() // 重新渲染</span>    <span class="token punctuation">}</span>    <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> oldValue <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value        <span class="token comment" spellcheck="true">// 此时最终的vm.name已经赋值完毕(ls5),更新时取值,就是最后的这个值</span>        <span class="token keyword">let</span> newVal <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// watch调用用户定义的处理逻辑</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>cb<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">,</span> newVal<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 需要给每个属性添加一个dep,目的是收集watcher</span><span class="token comment" spellcheck="true">// 一个组件中,有多个属性(n个属性对应一个视图) n个dep对应一个watcher</span><span class="token comment" spellcheck="true">// 一个属性,对应多个组件,一个dep对应多个watcher</span><span class="token comment" spellcheck="true">// 多对多</span><span class="token keyword">let</span> queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">// 源码是用set来去重</span><span class="token comment" spellcheck="true">// 这里使用对象来去重</span><span class="token keyword">let</span> has <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">let</span> pending <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment" spellcheck="true">// 防抖</span><span class="token comment" spellcheck="true">// 等待一段时间后进入该方法,一次性更新</span><span class="token keyword">function</span> <span class="token function">flushSchedulerQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> flushQueue <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 刷新过程中,可能也有新的watcher,可以重新放到queue</span>    queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    has <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    pending <span class="token operator">=</span> <span class="token boolean">false</span>    flushQueue<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>q <span class="token operator">=</span><span class="token operator">></span> q<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">queryWatcher</span><span class="token punctuation">(</span>watcher<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> id <span class="token operator">=</span> watcher<span class="token punctuation">.</span>id    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>has<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 没有重复,直接放入队列</span>        queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>watcher<span class="token punctuation">)</span>        has<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>        <span class="token comment" spellcheck="true">// console.log(queue)</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 不管update多少次,最终只执行一轮刷新操作</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>pending<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">setTimeout</span><span class="token punctuation">(</span>flushSchedulerQueue<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        pending <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 用户更新队列</span><span class="token keyword">let</span> callbacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">let</span> waiting <span class="token operator">=</span> <span class="token boolean">false</span><span class="token comment" spellcheck="true">// 异步批处理</span><span class="token keyword">function</span> <span class="token function">flushCallbacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> cbs <span class="token operator">=</span> callbacks<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>    waiting <span class="token operator">=</span> <span class="token boolean">false</span>    callbacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    cbs<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>cb <span class="token operator">=</span><span class="token operator">></span> <span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">let</span> timerFunc<span class="token comment" spellcheck="true">// 有bug,promise拿到的还是老的</span><span class="token comment" spellcheck="true">// if (Promise) { // 判断有没有promise(可以转字符串看是不是原生promise)</span><span class="token comment" spellcheck="true">//     // console.log('Promise')</span><span class="token comment" spellcheck="true">//     timerFunc = () => {</span><span class="token comment" spellcheck="true">//         Promise.resolve().then(flushCallbacks)</span><span class="token comment" spellcheck="true">//     }</span><span class="token comment" spellcheck="true">// } else if (MutationObserver) {</span><span class="token comment" spellcheck="true">//     // 这里传入的回调是异步的</span><span class="token comment" spellcheck="true">//     let observe = new MutationObserver(flushCallbacks)</span><span class="token comment" spellcheck="true">//     // 监控文本变化</span><span class="token comment" spellcheck="true">//     let textNode = document.createTextNode(1)</span><span class="token comment" spellcheck="true">//     observe.observe(textNode, {</span><span class="token comment" spellcheck="true">//         characterData: true,</span><span class="token comment" spellcheck="true">//     })</span><span class="token comment" spellcheck="true">//     timerFunc = () => {</span><span class="token comment" spellcheck="true">//         textNode.textContent = 2</span><span class="token comment" spellcheck="true">//     }</span><span class="token comment" spellcheck="true">// } else if (setImmediate) {</span><span class="token comment" spellcheck="true">//     timerFunc = () => {</span><span class="token comment" spellcheck="true">//         setImmediate(flushCallbacks)</span><span class="token comment" spellcheck="true">//     }</span><span class="token comment" spellcheck="true">// } else {</span><span class="token comment" spellcheck="true">//     timerFunc = () => {</span><span class="token comment" spellcheck="true">//         setTimeout(flushCallbacks)</span><span class="token comment" spellcheck="true">//     }</span><span class="token comment" spellcheck="true">// }</span><span class="token comment" spellcheck="true">// 暴露给外部的更新方法</span><span class="token comment" spellcheck="true">// vue里的nextTick不是用api(定时器...),而是采用优雅降级的方式</span><span class="token comment" spellcheck="true">// 降级: promise(ie不兼容) => MutationObserver(h5的api) => setImmediate(ie专用) => setTimeout</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">nextTick</span><span class="token punctuation">(</span>cb<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 先用户还是先内部更新 ? => 看用户更新方法在前,还是数据变化在前</span>    <span class="token comment" spellcheck="true">// 定时器耗性能,promise执行比定时器快</span>    callbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>cb<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>waiting<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            <span class="token function">flushCallbacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// timerFunc(flushCallbacks) </span>        <span class="token comment" spellcheck="true">// timerFunc() // 执行的就是flushCallbacks</span>        waiting <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">default</span> Watcher</code></pre><h2 id="测试-10"><a href="#测试-10" class="headerlink" title="测试"></a>测试</h2><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 可以给模板中的属性添加一个收集器 dep --></span>    <span class="token comment" spellcheck="true">&lt;!-- 页面渲染时 将渲染逻辑封装到watcher中, vm._update(vm.render()) --></span>    <span class="token comment" spellcheck="true">&lt;!-- 让dep记住这个watcher,数据变化时找到对应的watcher进行更新 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 多个{{name}},会有重复watcher,要避免 --></span>    <span class="token comment" spellcheck="true">&lt;!-- 如果渲染的el里有注释,会卡死!!!! --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        {{fullname}}        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>            {{firstname}}        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- &lt;script src="https://cdn.bootcdn.net/ajax/libs/vue/2.6.14/vue.js">&lt;/script> --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>            data<span class="token punctuation">:</span> <span class="token punctuation">{</span>                firstname<span class="token punctuation">:</span> <span class="token string">'俊'</span><span class="token punctuation">,</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>                <span class="token function">fullname</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>firstname <span class="token operator">+</span> <span class="token string">'lastname'</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token comment" spellcheck="true">// 写法3 </span>            <span class="token comment" spellcheck="true">// methods: {</span>            <span class="token comment" spellcheck="true">//     fn(newVal, oldVal) {</span>            <span class="token comment" spellcheck="true">//         console.log(newVal, oldVal);</span>            <span class="token comment" spellcheck="true">//     }</span>            <span class="token comment" spellcheck="true">// },</span>            <span class="token comment" spellcheck="true">// 写法1,直接写函数</span>            watch<span class="token punctuation">:</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// firstname(newVal, oldVal) {</span>                <span class="token comment" spellcheck="true">//     console.log(newVal, oldVal);</span>                <span class="token comment" spellcheck="true">// }</span>                <span class="token comment" spellcheck="true">// 写法2: 数组内函数依次执行</span>                <span class="token comment" spellcheck="true">// firstname: [</span>                <span class="token comment" spellcheck="true">//     // 'fn', // 写法3,调用method里定义的方法</span>                <span class="token comment" spellcheck="true">//     (newVal, oldVal) => {</span>                <span class="token comment" spellcheck="true">//     },</span>                <span class="token comment" spellcheck="true">//     (newVal, oldVal) => {</span>                <span class="token comment" spellcheck="true">//     }</span>                <span class="token comment" spellcheck="true">// ]</span>                <span class="token comment" spellcheck="true">// firstname: 'fn', // 写法3,调用method里定义的方法 </span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 写法不同,但是底层都是$watch</span>        <span class="token comment" spellcheck="true">// 写法4</span>        <span class="token comment" spellcheck="true">// vm.$watch(() => vm.firstname, (newVal, oldVal) => {</span>        <span class="token comment" spellcheck="true">//     // vm.$watch("firstname", (newVal, oldVal) => {</span>        <span class="token comment" spellcheck="true">//     console.log(newVal, oldVal);</span>        <span class="token comment" spellcheck="true">// })</span>        vm<span class="token punctuation">.</span><span class="token function">$watch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> vm<span class="token punctuation">.</span>fullname<span class="token punctuation">,</span> <span class="token punctuation">(</span>newVal<span class="token punctuation">,</span> oldVal<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newVal<span class="token punctuation">,</span> oldVal<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            vm<span class="token punctuation">.</span>firstname <span class="token operator">=</span> <span class="token string">'123'</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><img src="img_30.png" alt="img_30.png"></p><h1 id="实现基本diff算法"><a href="#实现基本diff算法" class="headerlink" title="实现基本diff算法"></a>实现基本diff算法</h1><p><img src="img_31.png" alt="老节点没有,新节点有"><br><img src="5C1676119360637.png" alt="老节点有,新节点没有"><br><img src="img_32.png" alt="交叉比较"><br><img src="img_33.png" alt="交叉比较"><br><img src="img_34.png" alt="交叉比较解决的特殊情况"></p><h2 id="vue的index问题"><a href="#vue的index问题" class="headerlink" title="vue的index问题"></a>vue的index问题</h2><p><img src="img_37.png" alt="img_37.png"><br><img src="img_36.png" alt="img_36.png"><br><img src="img_35.png" alt="img_35.png"><br><img src="img_38.png" alt="img_38.png"><br><img src="img_39.png" alt="img_39.png"><br><img src="img_40.png" alt="key只能是number或string"><br><img src="img_41.png" alt="img_41.png"><br><img src="img_42.png" alt="乱序比较-映射表"><br><img src="img_43.png" alt="img_43.png"></p><h2 id="src-index-js"><a href="#src-index-js" class="headerlink" title="src/index.js"></a>src/index.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> compileToFunction <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./compile"</span><span class="token keyword">import</span> <span class="token punctuation">{</span> initMixin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./init"</span><span class="token keyword">import</span> <span class="token punctuation">{</span> initLifeCycle <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./lifecycle"</span><span class="token keyword">import</span> Watcher<span class="token punctuation">,</span> <span class="token punctuation">{</span> nextTick <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./observe/watcher"</span><span class="token keyword">import</span> <span class="token punctuation">{</span> initStateMixin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./state"</span><span class="token keyword">import</span> <span class="token punctuation">{</span> createElm<span class="token punctuation">,</span> patch <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./vdom/patch"</span><span class="token comment" spellcheck="true">// class会把所有方法耦合在一起</span><span class="token keyword">function</span> <span class="token function">Vue</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// options就是用户提供的选项 </span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_init</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 初始化 </span>    <span class="token comment" spellcheck="true">// if (options.el) this.$mount(options.el) // 挂载</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// debugger</span><span class="token function">initLifeCycle</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 组件渲染</span><span class="token function">initStateMixin</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// test</span><span class="token comment" spellcheck="true">// let render1 = compileToFunction(`&lt;li key="b" b='1' style="color: red">{{name}}&lt;/li>`)</span><span class="token comment" spellcheck="true">// let render1 = compileToFunction(`&lt;li key="b" b='1' style="color: red">&lt;/li>`)</span><span class="token comment" spellcheck="true">// let render1 = compileToFunction(`&lt;ul style="color: red"></span><span class="token comment" spellcheck="true">//     &lt;li key="a">a&lt;/li></span><span class="token comment" spellcheck="true">//     &lt;li key="b">b&lt;/li></span><span class="token comment" spellcheck="true">//     &lt;li key="c">c&lt;/li></span><span class="token comment" spellcheck="true">// &lt;/ul>`)</span><span class="token comment" spellcheck="true">// let render1 = compileToFunction(`&lt;ul style="color: red"></span><span class="token comment" spellcheck="true">//     &lt;li key="a">a&lt;/li></span><span class="token comment" spellcheck="true">//     &lt;li key="b">b&lt;/li></span><span class="token comment" spellcheck="true">//     &lt;li key="c">c&lt;/li></span><span class="token comment" spellcheck="true">//     &lt;li key="d">d&lt;/li></span><span class="token comment" spellcheck="true">// &lt;/ul>`)</span><span class="token keyword">let</span> render1 <span class="token operator">=</span> <span class="token function">compileToFunction</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`&lt;ul style="color: red">    &lt;li key="a">a&lt;/li>    &lt;li key="b">b&lt;/li>    &lt;li key="c">c&lt;/li>      &lt;li key="d">d&lt;/li>&lt;/ul>`</span></span><span class="token punctuation">)</span><span class="token keyword">let</span> vm1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span> data<span class="token punctuation">:</span> <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"zf"</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">let</span> prevVnode <span class="token operator">=</span> render1<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>vm1<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// console.log(prevVnode);</span><span class="token keyword">let</span> el <span class="token operator">=</span> <span class="token function">createElm</span><span class="token punctuation">(</span>prevVnode<span class="token punctuation">)</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// let render2 = compileToFunction(`&lt;span key="a" style="color: red;background: blue">{{name}}&lt;/span>`)</span><span class="token comment" spellcheck="true">// let render2 = compileToFunction(`&lt;li key="a" style="color: red;background: blue">{{name}}&lt;/li>`)</span><span class="token comment" spellcheck="true">// let render2 = compileToFunction(`&lt;li key="b" a='1' style="color: red;background: blue">{{name}}&lt;/li>`)</span><span class="token comment" spellcheck="true">// let render2 = compileToFunction(`&lt;li key="b" a='1' style="color: red;background: blue">&lt;/li>`)</span><span class="token comment" spellcheck="true">// let render2 = compileToFunction(`&lt;li key="b" a='1' style="color: red;background: blue">&lt;div>1&lt;span>2&lt;/span>&lt;/div>{{name}}&lt;/li>`)</span><span class="token comment" spellcheck="true">// let render2 = compileToFunction(`&lt;ul style="color: red;background: blue"></span><span class="token comment" spellcheck="true">//     &lt;li key="a">a&lt;/li></span><span class="token comment" spellcheck="true">//     &lt;li key="b">b&lt;/li></span><span class="token comment" spellcheck="true">//     &lt;li key="c">c&lt;/li></span><span class="token comment" spellcheck="true">//     &lt;li key="d">d&lt;/li></span><span class="token comment" spellcheck="true">// &lt;/ul>`)</span><span class="token comment" spellcheck="true">// let render2 = compileToFunction(`&lt;ul style="color: red;background: blue"></span><span class="token comment" spellcheck="true">//     &lt;li key="a">a&lt;/li></span><span class="token comment" spellcheck="true">//     &lt;li key="b">b&lt;/li></span><span class="token comment" spellcheck="true">//     &lt;li key="c">c&lt;/li> </span><span class="token comment" spellcheck="true">// &lt;/ul>`)</span><span class="token comment" spellcheck="true">// let render2 = compileToFunction(`&lt;ul style="color: red;background: blue"></span><span class="token comment" spellcheck="true">//     &lt;li key="d">d&lt;/li></span><span class="token comment" spellcheck="true">//     &lt;li key="a">a&lt;/li></span><span class="token comment" spellcheck="true">//     &lt;li key="b">b&lt;/li></span><span class="token comment" spellcheck="true">//     &lt;li key="c">c&lt;/li> </span><span class="token comment" spellcheck="true">// &lt;/ul>`)</span><span class="token comment" spellcheck="true">// let render2 = compileToFunction(`&lt;ul style="color: red;background: blue"></span><span class="token comment" spellcheck="true">//     &lt;li key="d">d&lt;/li></span><span class="token comment" spellcheck="true">//     &lt;li key="c">c&lt;/li> </span><span class="token comment" spellcheck="true">//     &lt;li key="b">b&lt;/li></span><span class="token comment" spellcheck="true">//     &lt;li key="a">a&lt;/li></span><span class="token comment" spellcheck="true">// &lt;/ul>`)</span><span class="token keyword">let</span> render2 <span class="token operator">=</span> <span class="token function">compileToFunction</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`&lt;ul style="color: red;background: blue">      &lt;li key="b">b&lt;/li>    &lt;li key="m">m&lt;/li>    &lt;li key="a">a&lt;/li>    &lt;li key="p">p&lt;/li>       &lt;li key="c">c&lt;/li>      &lt;li key="q">q&lt;/li>&lt;/ul>`</span></span><span class="token punctuation">)</span><span class="token keyword">let</span> vm2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span> data<span class="token punctuation">:</span> <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"zf"</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">let</span> nextVnode <span class="token operator">=</span> render2<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>vm2<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// console.log(nextVnode);</span><span class="token keyword">let</span> newEl <span class="token operator">=</span> <span class="token function">createElm</span><span class="token punctuation">(</span>nextVnode<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 暴力替换, 如果用户一直创建并操作dom, 会很耗性能</span><span class="token comment" spellcheck="true">// diff算法平级进行比较,如果相同就不修改</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// el.parentNode.replaceChild(newEl, el)</span>    <span class="token function">patch</span><span class="token punctuation">(</span>prevVnode<span class="token punctuation">,</span> nextVnode<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> Vue</code></pre><h2 id="vdom-patch-js"><a href="#vdom-patch-js" class="headerlink" title="vdom/patch.js"></a>vdom/patch.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> isSameVnode <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"."</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createElm</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> <span class="token punctuation">{</span> tag<span class="token punctuation">,</span> data<span class="token punctuation">,</span> children<span class="token punctuation">,</span> text <span class="token punctuation">}</span> <span class="token operator">=</span> vnode    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> tag <span class="token operator">===</span> <span class="token string">"string"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 标签</span>        <span class="token comment" spellcheck="true">// 创建真实节点</span>        <span class="token comment" spellcheck="true">// 将真实节点挂载到虚拟节点,后续修改就可以通过虚拟节点直接找到真实节点</span>        vnode<span class="token punctuation">.</span>el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span>        <span class="token function">patchProps</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>el<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 更新属性 xxx=xxx</span>        children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>child <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// debugger</span>            <span class="token comment" spellcheck="true">// console.log(child)</span>            vnode<span class="token punctuation">.</span>el<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span><span class="token function">createElm</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// console.log(vnode) 文本虚拟节点的tag是undefined</span>        vnode<span class="token punctuation">.</span>el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createTextNode</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// debugger</span>    <span class="token comment" spellcheck="true">// console.log(vnode.el)</span>    <span class="token keyword">return</span> vnode<span class="token punctuation">.</span>el<span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">patchProps</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> oldProps <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> props <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 老的属性中有,新的没有,要删除老的</span>    <span class="token comment" spellcheck="true">// style</span>    <span class="token keyword">let</span> oldStyles <span class="token operator">=</span> oldProps<span class="token punctuation">.</span>style <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token keyword">let</span> newStyles <span class="token operator">=</span> props<span class="token punctuation">.</span>style <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> oldStyles<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>newStyles<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            el<span class="token punctuation">.</span>style<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">''</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// attributes</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> oldProps<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>props<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            el<span class="token punctuation">.</span><span class="token function">removeAttribute</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 新的覆盖老的</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> props<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">'style'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 如果是style样式属性</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> sytleName <span class="token keyword">in</span> props<span class="token punctuation">.</span>style<span class="token punctuation">)</span> <span class="token punctuation">{</span>                el<span class="token punctuation">.</span>style<span class="token punctuation">[</span>sytleName<span class="token punctuation">]</span> <span class="token operator">=</span> props<span class="token punctuation">.</span>style<span class="token punctuation">[</span>sytleName<span class="token punctuation">]</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            el<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> props<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">patch</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 初始化时是传一个真实dom,一个虚拟dom</span>    <span class="token keyword">const</span> isRealElement <span class="token operator">=</span> oldVNode<span class="token punctuation">.</span>nodeType    <span class="token comment" spellcheck="true">// 初次渲染</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>isRealElement<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">const</span> elm <span class="token operator">=</span> oldVNode <span class="token comment" spellcheck="true">// 拿到真实元素</span>        <span class="token keyword">const</span> parentElm <span class="token operator">=</span> elm<span class="token punctuation">.</span>parentNode <span class="token comment" spellcheck="true">// 拿到父元素</span>        <span class="token keyword">let</span> newElm <span class="token operator">=</span> <span class="token function">createElm</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// console.log(newElm)</span>        parentElm<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>newElm<span class="token punctuation">,</span> elm<span class="token punctuation">.</span>nextSibling<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 先插入到当前节点的后面(成为兄弟节点)</span>        parentElm<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>elm<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 删除老节点 </span>        <span class="token keyword">return</span> newElm    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 更新时是传两个虚拟dom</span>        <span class="token comment" spellcheck="true">// diff算法</span>        <span class="token comment" spellcheck="true">// console.log(oldVNode, vnode);</span>        <span class="token comment" spellcheck="true">// 1,两个节点不是同一个(key或标签tag不同),则直接更新</span>        <span class="token comment" spellcheck="true">// 2,如果两个节点是同一个,则比较其属性是否有差异(复用老的,更新属性)</span>        <span class="token comment" spellcheck="true">// 3,节点比较完毕,就比较儿子</span>        <span class="token comment" spellcheck="true">// console.log(isSameVnode(oldVNode, vnode));</span>        <span class="token comment" spellcheck="true">// 比较的方法</span>        <span class="token keyword">return</span> <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// console.log(!isSameVnode(oldVNode, vnode));</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isSameVnode</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 用老节点的父节点进行替换</span>        <span class="token keyword">let</span> el <span class="token operator">=</span> <span class="token function">createElm</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span>        oldVNode<span class="token punctuation">.</span>el<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">replaceChild</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> oldVNode<span class="token punctuation">.</span>el<span class="token punctuation">)</span>        <span class="token keyword">return</span> el    <span class="token punctuation">}</span>    <span class="token keyword">let</span> el <span class="token operator">=</span> vnode<span class="token punctuation">.</span>el <span class="token operator">=</span> oldVNode<span class="token punctuation">.</span>el <span class="token comment" spellcheck="true">// 复用老节点的元素    </span>    <span class="token comment" spellcheck="true">// 文本的情况,则比较文本内容</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>oldVNode<span class="token punctuation">.</span>tag<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>oldVNode<span class="token punctuation">.</span>text <span class="token operator">!==</span> vnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span> <span class="token punctuation">{</span>            el<span class="token punctuation">.</span>textContent <span class="token operator">=</span> vnode<span class="token punctuation">.</span>text <span class="token comment" spellcheck="true">// 新的文本,覆盖老文本</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span> <span class="token comment" spellcheck="true">// 文本的tag是undefined</span>    <span class="token comment" spellcheck="true">// 如果是标签,需要对比标签的属性</span>    <span class="token comment" spellcheck="true">// console.log(1);</span>    <span class="token function">patchProps</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> oldVNode<span class="token punctuation">.</span>data<span class="token punctuation">,</span> vnode<span class="token punctuation">.</span>data<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 比较儿子节点 (1,双方都有children;2,只有一方有children)</span>    <span class="token keyword">let</span> oldChildren <span class="token operator">=</span> oldVNode<span class="token punctuation">.</span>children <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token keyword">let</span> newChildren <span class="token operator">=</span> vnode<span class="token punctuation">.</span>children <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// console.log(oldChildren, newChildren);</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldChildren<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> newChildren<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// console.log(el);</span>        <span class="token comment" spellcheck="true">// 完整diff,需要比较两个人的children</span>        <span class="token function">updateChildren</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> oldChildren<span class="token punctuation">,</span> newChildren<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 更新两个人的children</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>newChildren<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 没有老的,有新的</span>        <span class="token comment" spellcheck="true">// 直接插入</span>        <span class="token function">mountChildren</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> newChildren<span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>oldChildren<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 没有新的,老的有,要删除</span>        <span class="token comment" spellcheck="true">// unmountChildren(el, oldChildren)</span>        el<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">''</span> <span class="token comment" spellcheck="true">// 可以循环删除,这里只是图省事</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> el<span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">mountChildren</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> newChildren<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> newChildren<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> child <span class="token operator">=</span> newChildren<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        el<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span><span class="token function">createElm</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">updateChildren</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> oldChildren<span class="token punctuation">,</span> newChildren<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// console.log(el, newChildren, oldChildren);</span>    <span class="token comment" spellcheck="true">// 比较时,为了提高性能,需要优化(push,shift,pop,unshift,reserve,sort)</span>    <span class="token comment" spellcheck="true">// vue2使用双指针的方式比较两个节点,(优化特殊情况: )只要头指针超过尾指针或者重合,就执行更新</span>    <span class="token keyword">let</span> oldStartIndex <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">let</span> newStartIndex <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">let</span> oldEndIndex <span class="token operator">=</span> oldChildren<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>    <span class="token keyword">let</span> newEndIndex <span class="token operator">=</span> newChildren<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>    <span class="token comment" spellcheck="true">// console.log(oldEndIndex, newEndIndex);</span>    <span class="token keyword">let</span> oldStartVnode <span class="token operator">=</span> oldChildren<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token keyword">let</span> newStartVnode <span class="token operator">=</span> newChildren<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token keyword">let</span> oldEndVnode <span class="token operator">=</span> oldChildren<span class="token punctuation">[</span>oldEndIndex<span class="token punctuation">]</span>    <span class="token keyword">let</span> newEndVnode <span class="token operator">=</span> newChildren<span class="token punctuation">[</span>newEndIndex<span class="token punctuation">]</span>    <span class="token comment" spellcheck="true">// 为了防止空格干扰,就在parse里去掉空格</span>    <span class="token comment" spellcheck="true">// console.log(oldStartVnode, newStartVnode, oldEndVnode, newEndVnode);</span>    <span class="token comment" spellcheck="true">// 特殊情况: 只要最后/或最前的几个节点不同</span>    <span class="token keyword">let</span> lastEqIndex <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment" spellcheck="true">// 解决bug(insertBefore)</span>    <span class="token keyword">let</span> lastEqVnode <span class="token operator">=</span> <span class="token keyword">null</span>    <span class="token comment" spellcheck="true">// 根据老的列表做映射关系,用新的去找,找到就移动,找不到就添加,最后多余的删除</span>    <span class="token keyword">function</span> <span class="token function">makeIndexByKey</span><span class="token punctuation">(</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> map <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token punctuation">}</span>        children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            map<span class="token punctuation">[</span>child<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> index        <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> map    <span class="token punctuation">}</span>    <span class="token keyword">let</span> map <span class="token operator">=</span> <span class="token function">makeIndexByKey</span><span class="token punctuation">(</span>oldChildren<span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>oldStartIndex <span class="token operator">&lt;=</span> oldEndIndex <span class="token operator">&amp;&amp;</span> newStartIndex <span class="token operator">&lt;=</span> newEndIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 排除为undefined的情况</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>oldStartVnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>            oldStartVnode <span class="token operator">=</span> oldChildren<span class="token punctuation">[</span><span class="token operator">++</span>oldStartIndex<span class="token punctuation">]</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>oldEndVnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>            oldEndVnode <span class="token operator">=</span> oldChildren<span class="token punctuation">[</span><span class="token operator">--</span>oldEndIndex<span class="token punctuation">]</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 有一方 头指针 > 尾部指针,则停止循环</span>        <span class="token comment" spellcheck="true">// 从头向后比较</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isSameVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 递归比较</span>            <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span>            oldStartVnode <span class="token operator">=</span> oldChildren<span class="token punctuation">[</span><span class="token operator">++</span>oldStartIndex<span class="token punctuation">]</span> <span class="token comment" spellcheck="true">// 向后移动</span>            newStartVnode <span class="token operator">=</span> newChildren<span class="token punctuation">[</span><span class="token operator">++</span>newStartIndex<span class="token punctuation">]</span>            <span class="token comment" spellcheck="true">// 比较开头节点</span>            <span class="token comment" spellcheck="true">// console.log(oldStartIndex, oldEndIndex, newStartIndex, newEndIndex);</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 从尾向前比较</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isSameVnode</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 最后一次相同后--,则存入的是不相同的元素</span>            lastEqVnode <span class="token operator">=</span> oldChildren<span class="token punctuation">[</span>lastEqIndex<span class="token punctuation">]</span>            <span class="token comment" spellcheck="true">// console.log(lastEqIndex, lastEqVnode);</span>            oldEndVnode <span class="token operator">=</span> oldChildren<span class="token punctuation">[</span><span class="token operator">--</span>oldEndIndex<span class="token punctuation">]</span> <span class="token comment" spellcheck="true">// 向前移动</span>            newEndVnode <span class="token operator">=</span> newChildren<span class="token punctuation">[</span><span class="token operator">--</span>newEndIndex<span class="token punctuation">]</span>            lastEqIndex <span class="token operator">=</span> oldEndIndex        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 交叉比较</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isSameVnode</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 老的尾 移到 老的头 (insertBefore有移动性,会把旧的移动走)</span>            el<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">.</span>el<span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>el<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">// 老的被复用,所以要替换老的</span>            <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span>            oldEndVnode <span class="token operator">=</span> oldChildren<span class="token punctuation">[</span><span class="token operator">--</span>oldEndIndex<span class="token punctuation">]</span>            newStartVnode <span class="token operator">=</span> newChildren<span class="token punctuation">[</span><span class="token operator">++</span>newStartIndex<span class="token punctuation">]</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isSameVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 老的头 移到 老的新尾 (insertBefore有移动性,会把旧的移动走)</span>            el<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">.</span>el<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">.</span>el<span class="token punctuation">.</span>nextSibling<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">// 老的被复用,所以要替换老的</span>            <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">)</span>            oldStartVnode <span class="token operator">=</span> oldChildren<span class="token punctuation">[</span><span class="token operator">++</span>oldStartIndex<span class="token punctuation">]</span>            newEndVnode <span class="token operator">=</span> newChildren<span class="token punctuation">[</span><span class="token operator">--</span>newEndIndex<span class="token punctuation">]</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 乱序比对</span>            <span class="token comment" spellcheck="true">// 如果没有key就直接替换(没办法比较)</span>            <span class="token keyword">let</span> moveIndex <span class="token operator">=</span> map<span class="token punctuation">[</span>newStartVnode<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token comment" spellcheck="true">// 如果拿到,则说明是要移动的索引</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>moveIndex <span class="token operator">!==</span> undefined<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">let</span> moveVnode <span class="token operator">=</span> oldChildren<span class="token punctuation">[</span>moveIndex<span class="token punctuation">]</span> <span class="token comment" spellcheck="true">// 找的对应的虚拟节点,复用</span>                el<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>moveVnode<span class="token punctuation">.</span>el<span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>el<span class="token punctuation">)</span>                oldChildren<span class="token punctuation">[</span>moveIndex<span class="token punctuation">]</span> <span class="token operator">=</span> undefined <span class="token comment" spellcheck="true">// 表示这个节点已经移动走了(如果是删除会报错)</span>                <span class="token function">patchVnode</span><span class="token punctuation">(</span>moveVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 比较属性和子节点</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 找不到就创建新的,直接插入到oldStartVnode前 </span>                el<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span><span class="token function">createElm</span><span class="token punctuation">(</span>newStartVnode<span class="token punctuation">)</span><span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>el<span class="token punctuation">)</span>            <span class="token punctuation">}</span>            newStartVnode <span class="token operator">=</span> newChildren<span class="token punctuation">[</span><span class="token operator">++</span>newStartIndex<span class="token punctuation">]</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// console.log(newStartIndex, newEndIndex);</span>    <span class="token comment" spellcheck="true">// 经过上面的比较后,指针都移到了双方最后一个相同的节点的位置,剩下的就是old或new独有的</span>    <span class="token comment" spellcheck="true">// 新的多余的插入</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>newStartIndex <span class="token operator">&lt;=</span> newEndIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> newStartIndex<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> newEndIndex<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">let</span> childEl <span class="token operator">=</span> <span class="token function">createElm</span><span class="token punctuation">(</span>newChildren<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">// 可能是向前或向后追加</span>            <span class="token comment" spellcheck="true">// 根据后一位有无节点来判断是不是向后追加</span>            <span class="token comment" spellcheck="true">// Failed to execute 'insertBefore' on 'Node': The node before which the new node is to be inserted is not a child of this node.</span>            <span class="token comment" spellcheck="true">// let anchor = newChildren[newEndIndex + 1] ? newChildren[newEndIndex + 1].el : null // 获取下一个元素</span>            <span class="token keyword">let</span> anchor <span class="token operator">=</span> newChildren<span class="token punctuation">[</span>newEndIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">?</span> lastEqVnode<span class="token punctuation">.</span>el <span class="token punctuation">:</span> <span class="token keyword">null</span> <span class="token comment" spellcheck="true">// 获取下一个元素</span>            <span class="token comment" spellcheck="true">// el.appendChild(childEl) // 添加节点</span>            <span class="token comment" spellcheck="true">// console.log(childEl, anchor);</span>            el<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>childEl<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// anchor为null,则认为是appendChild</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 旧的多余的删除</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldStartIndex <span class="token operator">&lt;=</span> oldEndIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> oldStartIndex<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> oldEndIndex<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 排除是undefined的情况,有值才删除</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>oldChildren<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">let</span> childEl <span class="token operator">=</span> oldChildren<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>el                el<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>childEl<span class="token punctuation">)</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="测试-11"><a href="#测试-11" class="headerlink" title="测试"></a>测试</h2><p><img src="img_44.png" alt="img_44.png"><br><img src="img_45.png" alt="img_45.png"></p><h1 id="实现组件的虚拟节点"><a href="#实现组件的虚拟节点" class="headerlink" title="实现组件的虚拟节点"></a>实现组件的虚拟节点</h1><p><img src="img_46.png" alt="img_46.png"><br><img src="img_48.png" alt="img_48.png"></p><h2 id="修改lifeCycle-js"><a href="#修改lifeCycle-js" class="headerlink" title="修改lifeCycle.js"></a>修改lifeCycle.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">initLifeCycle</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 虚拟dom转真实dom</span>    Vue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>_update <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>vnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">this</span>        <span class="token keyword">const</span> el <span class="token operator">=</span> vm<span class="token punctuation">.</span>$el        <span class="token comment" spellcheck="true">// console.log('update', vnode)</span>        <span class="token comment" spellcheck="true">// 判断是否是更新操作</span>        <span class="token keyword">const</span> prevVnode <span class="token operator">=</span> vm<span class="token punctuation">.</span>_vnode        <span class="token comment" spellcheck="true">// 把组件第一次产生的虚拟节点保存到vnode上</span>        vm<span class="token punctuation">.</span>_vnode <span class="token operator">=</span> vnode        <span class="token keyword">if</span> <span class="token punctuation">(</span>prevVnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 之前渲染过了</span>            <span class="token comment" spellcheck="true">// diff更新</span>            <span class="token function">patch</span><span class="token punctuation">(</span>prevVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 初始化 </span>            vm<span class="token punctuation">.</span>$el <span class="token operator">=</span> <span class="token function">patch</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// ......</span><span class="token punctuation">}</span></code></pre><h2 id="修改init-js"><a href="#修改init-js" class="headerlink" title="修改init.js"></a>修改init.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">initMixin</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 初始化操作</span>    Vue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>_init <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// debugger</span>        <span class="token comment" spellcheck="true">// 将用户传入的options挂载到vue对象上</span>        <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">this</span> <span class="token comment" spellcheck="true">// 原型中的this表示实例</span>        <span class="token comment" spellcheck="true">// vm.$options = options // $xxx 表示是vue的属性(在(vue里,如果data里的变量名是$开头,vue是拿不到的)</span>        vm<span class="token punctuation">.</span>$options <span class="token operator">=</span> <span class="token function">mergeOptions</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>constructor<span class="token punctuation">.</span>options<span class="token punctuation">,</span> options<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// $xxx 表示是vue的属性(在(vue里,如果data里的变量名是$开头,vue是拿不到的)</span>        <span class="token comment" spellcheck="true">// 初始化状态</span>        <span class="token comment" spellcheck="true">// console.log(vm.$options)</span>        <span class="token function">initState</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// callHook(vm, 'created')     </span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>el<span class="token punctuation">)</span> <span class="token punctuation">{</span>            vm<span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>el<span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// ......</span><span class="token punctuation">}</span></code></pre><h2 id="修改src-index-js"><a href="#修改src-index-js" class="headerlink" title="修改src/index.js"></a>修改src/index.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> compileToFunction <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./compile"</span><span class="token keyword">import</span> <span class="token punctuation">{</span> initGlobalAPI <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./globalApi"</span><span class="token keyword">import</span> <span class="token punctuation">{</span> initMixin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./init"</span><span class="token keyword">import</span> <span class="token punctuation">{</span> initLifeCycle <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./lifecycle"</span><span class="token keyword">import</span> Watcher<span class="token punctuation">,</span> <span class="token punctuation">{</span> nextTick <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./observe/watcher"</span><span class="token keyword">import</span> <span class="token punctuation">{</span> initStateMixin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./state"</span><span class="token keyword">import</span> <span class="token punctuation">{</span> createElm<span class="token punctuation">,</span> patch <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./vdom/patch"</span><span class="token comment" spellcheck="true">// class会把所有方法耦合在一起</span><span class="token keyword">function</span> <span class="token function">Vue</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// options就是用户提供的选项 </span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_init</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 初始化 </span>    <span class="token comment" spellcheck="true">// if (options.el) this.$mount(options.el) // 挂载</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// debugger</span><span class="token function">initMixin</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span><span class="token function">initLifeCycle</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 组件渲染</span><span class="token function">initGlobalAPI</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span><span class="token function">initStateMixin</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> Vue</code></pre><h2 id="utils-js"><a href="#utils-js" class="headerlink" title="utils.js"></a>utils.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> strats <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">const</span> LIFECYCLE <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">'beforeCreate'</span><span class="token punctuation">,</span>    <span class="token string">'create'</span><span class="token punctuation">]</span>LIFECYCLE<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>hook <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    strats<span class="token punctuation">[</span>hook<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>p<span class="token punctuation">,</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 如果儿子有,父亲有,就拼在一起</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> p<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token punctuation">[</span>c<span class="token punctuation">]</span> <span class="token comment" spellcheck="true">// 儿子有,父亲没有,则将儿子包装为数组</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> p <span class="token comment" spellcheck="true">// 如果儿子没有,则用父亲即可</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 解决全局和局部声明同一组件的情况 </span>strats<span class="token punctuation">.</span>components <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>parentValue<span class="token punctuation">,</span> childValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> res <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>parentValue<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>childValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> childValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 返回的是构造的对象,可以拿到父亲身上的属性,并且将儿子的都拷贝到自己身上</span>            res<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> childValue<span class="token punctuation">[</span>key<span class="token punctuation">]</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> res<span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">mergeOptions</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 获取老的</span>        <span class="token function">margeField</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>p<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">margeField</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">margeField</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 用策略模式减少if/else</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>strats<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            options<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> strats<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">(</span>p<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 不在策略中,则以儿子为主</span>            options<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> c<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">||</span> p<span class="token punctuation">[</span>key<span class="token punctuation">]</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> options<span class="token punctuation">}</span></code></pre><h2 id="修改init-js-1"><a href="#修改init-js-1" class="headerlink" title="修改init.js"></a>修改init.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> initState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./state"</span><span class="token keyword">import</span> <span class="token punctuation">{</span> compileToFunction <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./compile"</span><span class="token keyword">import</span> <span class="token punctuation">{</span> mountComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./lifecycle"</span><span class="token keyword">import</span> <span class="token punctuation">{</span> mergeOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./utils"</span><span class="token comment" spellcheck="true">// 提供给vue来使用(此时全局还没有vue对象,所以没办法直接挂载)</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">initMixin</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 初始化操作</span>    Vue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>_init <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// ......</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 渲染模板的操作</span>    Vue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$mount <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>el<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// console.log(el)</span>        <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">this</span>        <span class="token comment" spellcheck="true">// 获取el对应的dom</span>        el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// console.log(el);</span>        <span class="token keyword">let</span> ops <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ops<span class="token punctuation">.</span>render<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 先看有没有render函数</span>            <span class="token keyword">let</span> template <span class="token comment" spellcheck="true">// 没有render就看看有没有template</span>            <span class="token comment" spellcheck="true">// 如果用户没有使用了render函数</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ops<span class="token punctuation">.</span>template <span class="token operator">&amp;&amp;</span> el<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 没有写模板,但是写了el</span>                <span class="token comment" spellcheck="true">/*                    1）innerHTML:                    从对象的起始位置到终止位置的全部内容,不包括Html标签。                    2）outerHTML:                    除了包含innerHTML的全部内容外, 还包含对象标签本身。                */</span>                template <span class="token operator">=</span> el<span class="token punctuation">.</span>outerHTML  <span class="token comment" spellcheck="true">// outerHTML在火狐下可能不兼容</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// if (el) {</span>                    <span class="token comment" spellcheck="true">// console.log(el) </span>                    <span class="token comment" spellcheck="true">// 写了template,就用用户的template</span>                    template <span class="token operator">=</span> ops<span class="token punctuation">.</span>template                <span class="token comment" spellcheck="true">// }</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// console.log(template)</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>template<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 对模板进行编译</span>                <span class="token keyword">const</span> render <span class="token operator">=</span> <span class="token function">compileToFunction</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span>                ops<span class="token punctuation">.</span>render <span class="token operator">=</span> render            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// console.log(ops.render)// 最终获取render方法</span>        <span class="token comment" spellcheck="true">// 组件挂载</span>        <span class="token function">mountComponent</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> el<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// script标签引用的vue.global.js,这个过程是在浏览器运行的</span>        <span class="token comment" spellcheck="true">// runtime是不包含模板编译的,整个编译是打包时通过loader来转义vue文件的,用runtime时不能使用template</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="globalApi-js"><a href="#globalApi-js" class="headerlink" title="globalApi.js"></a>globalApi.js</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> mergeOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./utils"</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">initGlobalAPI</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Vue<span class="token punctuation">.</span>options <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// Vue构造函数挂到全局</span>        _base<span class="token punctuation">:</span> Vue    <span class="token punctuation">}</span>    Vue<span class="token punctuation">.</span>mixin <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>mixin<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>options <span class="token operator">=</span> <span class="token function">mergeOptions</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">,</span> mixin<span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token keyword">this</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// console.log(Vue.options);</span>    Vue<span class="token punctuation">.</span>extend <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// console.log(options);</span>        <span class="token keyword">function</span> <span class="token function">Sub</span><span class="token punctuation">(</span>options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 最终使用一个组件,就是new一个实例</span>            <span class="token comment" spellcheck="true">// console.log(options,Sub.options);</span>            <span class="token comment" spellcheck="true">// options = mergeOptions(Sub.options,options)</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_init</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 默认对子类进行初始化操作</span>            <span class="token comment" spellcheck="true">// console.log(this._init,this.$mount);</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 子类可以找到父类原型 Sub.prototype.__proto__ = Vue.prototype</span>        Sub<span class="token punctuation">.</span>prototype <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>Vue<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// object.create 但是此时Sub的构造器用的是父类的</span>        <span class="token comment" spellcheck="true">// console.log(Vue.prototype, Sub.prototype,Object.create(Vue.prototype));</span>        Sub<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor <span class="token operator">=</span> Sub        <span class="token comment" spellcheck="true">// console.log(Sub.prototype.__proto__);</span>        <span class="token comment" spellcheck="true">// Sub.prototype.__proto__ = Vue.prototype</span>        Sub<span class="token punctuation">.</span>options <span class="token operator">=</span> <span class="token function">mergeOptions</span><span class="token punctuation">(</span>Vue<span class="token punctuation">.</span>options<span class="token punctuation">,</span> options<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 保存用户传的选项</span>        <span class="token keyword">return</span> Sub    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 声明全局组件</span>    Vue<span class="token punctuation">.</span>options<span class="token punctuation">.</span>components <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    Vue<span class="token punctuation">.</span>component <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>id<span class="token punctuation">,</span> definition<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 如果definition是函数,说明用户调用了extend()</span>        definition <span class="token operator">=</span>            <span class="token keyword">typeof</span> definition <span class="token operator">===</span> <span class="token string">'function'</span> <span class="token operator">?</span> definition <span class="token punctuation">:</span> Vue<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>definition<span class="token punctuation">)</span>        Vue<span class="token punctuation">.</span>options<span class="token punctuation">.</span>components<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> definition        <span class="token comment" spellcheck="true">// console.log(Vue.options.components);</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="vdom"><a href="#vdom" class="headerlink" title="vdom/"></a>vdom/</h2><h3 id="修改patch-js"><a href="#修改patch-js" class="headerlink" title="修改patch.js"></a>修改patch.js</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> isSameVnode <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"."</span><span class="token keyword">function</span> <span class="token function">createComponent</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> data <span class="token operator">=</span> vnode<span class="token punctuation">.</span>data    <span class="token comment" spellcheck="true">// data变为init方法</span>    data <span class="token operator">=</span> data<span class="token punctuation">.</span>hook    <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> data <span class="token operator">=</span> data<span class="token punctuation">.</span>init    <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">data</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 初始化组件</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>componentInstance<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">true</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createElm</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// console.log(vnode);</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>vnode<span class="token punctuation">)</span> <span class="token keyword">return</span>    <span class="token keyword">let</span> <span class="token punctuation">{</span> tag<span class="token punctuation">,</span> data<span class="token punctuation">,</span> children<span class="token punctuation">,</span> text <span class="token punctuation">}</span> <span class="token operator">=</span> vnode    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> tag <span class="token operator">===</span> <span class="token string">"string"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 标签</span>        <span class="token comment" spellcheck="true">// 区分是组件还是元素</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">createComponent</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 组件</span>            <span class="token keyword">return</span> vnode<span class="token punctuation">.</span>componentInstance<span class="token punctuation">.</span>$el        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 创建真实节点</span>        <span class="token comment" spellcheck="true">// 将真实节点挂载到虚拟节点,后续修改就可以通过虚拟节点直接找到真实节点</span>        vnode<span class="token punctuation">.</span>el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span>        <span class="token function">patchProps</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>el<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 更新属性 xxx=xxx</span>        children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>child <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// debugger</span>            <span class="token comment" spellcheck="true">// console.log(child)</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>child<span class="token punctuation">)</span> <span class="token keyword">return</span>            vnode<span class="token punctuation">.</span>el<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span><span class="token function">createElm</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 会把组件创建的节点添加到父节点</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// console.log(vnode) 文本虚拟节点的tag是undefined</span>        vnode<span class="token punctuation">.</span>el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createTextNode</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// debugger</span>    <span class="token comment" spellcheck="true">// console.log(vnode.el)</span>    <span class="token keyword">return</span> vnode<span class="token punctuation">.</span>el<span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">patchProps</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> oldProps <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> props <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// ......</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">patch</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>oldVNode<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 组件挂载,没有传el</span>        <span class="token keyword">return</span> <span class="token function">createElm</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// vm.$el 组件渲染的结果</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// ......</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldVNode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// ......</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">mountChildren</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> newChildren<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// ......</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">updateChildren</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> oldChildren<span class="token punctuation">,</span> newChildren<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// ......</span><span class="token punctuation">}</span></code></pre><h3 id="修改index-js"><a href="#修改index-js" class="headerlink" title="修改index.js"></a>修改index.js</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 虚拟dom操作</span><span class="token comment" spellcheck="true">// _h() _c()</span><span class="token keyword">const</span> isReservedTag <span class="token operator">=</span> <span class="token punctuation">(</span>tag<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 判断是不是html中已有的原始标签</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'div'</span><span class="token punctuation">,</span> <span class="token string">'p'</span><span class="token punctuation">,</span> <span class="token string">'button'</span><span class="token punctuation">,</span> <span class="token string">'ul'</span><span class="token punctuation">,</span> <span class="token string">'li'</span><span class="token punctuation">,</span> <span class="token string">'span'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createElementVnode</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> tag<span class="token punctuation">,</span> data<span class="token punctuation">,</span> <span class="token operator">...</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// console.log(data)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">let</span> key <span class="token operator">=</span> data<span class="token punctuation">.</span>key    <span class="token keyword">if</span> <span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token keyword">delete</span> data<span class="token punctuation">.</span>key    <span class="token comment" spellcheck="true">// 如果是原始标签</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isReservedTag</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isReservedTag</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// console.log(tag);</span>        <span class="token keyword">return</span> <span class="token function">vnode</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> tag<span class="token punctuation">,</span> key<span class="token punctuation">,</span> data<span class="token punctuation">,</span> children<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 创造虚拟节点</span>        <span class="token keyword">let</span> Ctor <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>components<span class="token punctuation">[</span>tag<span class="token punctuation">]</span> <span class="token comment" spellcheck="true">// 拿到组件的构造函数</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Ctor<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">createComponentVnode</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> tag<span class="token punctuation">,</span> key<span class="token punctuation">,</span> data<span class="token punctuation">,</span> children<span class="token punctuation">,</span> Ctor<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 创建组件虚拟节点</span><span class="token keyword">function</span> <span class="token function">createComponentVnode</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> tag<span class="token punctuation">,</span> key<span class="token punctuation">,</span> data<span class="token punctuation">,</span> children<span class="token punctuation">,</span> Ctor<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> Ctor <span class="token operator">===</span> <span class="token string">'object'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 如果是对象</span>        <span class="token comment" spellcheck="true">/*         let Sub = Vue.extend({            template: '&lt;button>click&lt;my-button>&lt;/my-button>&lt;/button>',            components: {                'my-button': {                    template: '&lt;button>click-my-sub&lt;/button>'                }            }            // Vue解析组件的template来渲染        })        */</span>        <span class="token comment" spellcheck="true">// 拿到构造函数</span>        Ctor <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>_base<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>Ctor<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    data<span class="token punctuation">.</span>hook <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token function">init</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 组件创建真实节点时调用</span>            <span class="token comment" spellcheck="true">// 保存组件的实例到虚拟节点上</span>            <span class="token keyword">let</span> instance <span class="token operator">=</span> vnode<span class="token punctuation">.</span>componentInstance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">vnode<span class="token punctuation">.</span>componentsOptions<span class="token punctuation">.</span>Ctor</span>            instance<span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// instance.$el</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// console.log(Ctor);</span>    <span class="token comment" spellcheck="true">// 创建vnode</span>    <span class="token keyword">return</span> <span class="token function">vnode</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> tag<span class="token punctuation">,</span> key<span class="token punctuation">,</span> data<span class="token punctuation">,</span> children<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> Ctor <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// _v()</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createTextVnode</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> text<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// console.log(text)</span>    <span class="token keyword">return</span> <span class="token function">vnode</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> undefined<span class="token punctuation">,</span> undefined<span class="token punctuation">,</span> undefined<span class="token punctuation">,</span> undefined<span class="token punctuation">,</span> text<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// ast是语法转换,描述语法(html js css), &lt;div xxx> -> div,xxx=true</span><span class="token comment" spellcheck="true">// 虚拟dom是描述dom元素,可以增加自定义属性 div.xxx</span><span class="token keyword">function</span> <span class="token function">vnode</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> tag<span class="token punctuation">,</span> key<span class="token punctuation">,</span> data<span class="token punctuation">,</span> children<span class="token punctuation">,</span> text<span class="token punctuation">,</span> componentsOptions<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>        vm<span class="token punctuation">,</span>        tag<span class="token punctuation">,</span>        key<span class="token punctuation">,</span>        data<span class="token punctuation">,</span>        children<span class="token punctuation">,</span>        text<span class="token punctuation">,</span>        componentsOptions <span class="token comment" spellcheck="true">// 组件的构造函数</span>        <span class="token comment" spellcheck="true">// ......</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 判断是不是同一个虚拟节点</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">isSameVnode</span><span class="token punctuation">(</span>vnode1<span class="token punctuation">,</span> vnode2<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> vnode1<span class="token punctuation">.</span>tag <span class="token operator">===</span> vnode2<span class="token punctuation">.</span>tag <span class="token operator">&amp;&amp;</span> vnode1<span class="token punctuation">.</span>key <span class="token operator">===</span> vnode2<span class="token punctuation">.</span>key<span class="token punctuation">}</span></code></pre><h2 id="测试-12"><a href="#测试-12" class="headerlink" title="测试"></a>测试</h2><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- &lt;script src="https://cdn.bootcdn.net/ajax/libs/vue/2.6.14/vue.js">&lt;/script> --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">// 根实例</span>        <span class="token comment" spellcheck="true">// 组件三大特性: 自定义标签 组件有自己的事件和属性 组件插槽</span>        <span class="token comment" spellcheck="true">// 声明组件: 全局 (不管全局还是局部,内部都是调用Vue.extend)</span>        Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">'my-button'</span><span class="token punctuation">,</span> Vue<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// Vue解析组件的template来渲染</span>            template<span class="token punctuation">:</span> <span class="token string">'&lt;button>click-my&lt;/button>'</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> Sub <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            template<span class="token punctuation">:</span> <span class="token string">'&lt;button>click&lt;my-button>&lt;/my-button>&lt;/button>'</span><span class="token punctuation">,</span>            components<span class="token punctuation">:</span> <span class="token punctuation">{</span>                <span class="token string">'my-button'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>                    template<span class="token punctuation">:</span> <span class="token string">'&lt;button>click-my-sub&lt;/button>'</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// Vue解析组件的template来渲染</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// console.log(new Sub());</span>        <span class="token keyword">new</span> <span class="token class-name">Sub</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// const vm = new Vue({</span>        <span class="token comment" spellcheck="true">//     el: '#app',</span>        <span class="token comment" spellcheck="true">//     data() {</span>        <span class="token comment" spellcheck="true">//         return { name: 'zf' }</span>        <span class="token comment" spellcheck="true">//     },</span>        <span class="token comment" spellcheck="true">//     component: { // 类似js原型链,局部没有才找全局</span>        <span class="token comment" spellcheck="true">//         'my-button': {</span>        <span class="token comment" spellcheck="true">//             template: '&lt;button>click2&lt;/button>'</span>        <span class="token comment" spellcheck="true">//         }</span>        <span class="token comment" spellcheck="true">//     }</span>        <span class="token comment" spellcheck="true">// }) </span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><img src="img_49.png" alt="img_49.png"></p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
          <category> js </category>
          
          <category> javaScript </category>
          
          <category> 造轮子 </category>
          
          <category> 框架 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 前端 </tag>
            
            <tag> 造轮子 </tag>
            
            <tag> 框架 </tag>
            
            <tag> javaScript </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于java反射手写iset注解,实现自动new</title>
      <link href="/2023/01/30/backend/java/ji-yu-java-fan-she-shou-xie-iset-zhu-jie-shi-xian-zi-dong-new/ji-yu-java-fan-she-shou-xie-iset-zhu-jie-shi-xian-zi-dong-new/"/>
      <url>/2023/01/30/backend/java/ji-yu-java-fan-she-shou-xie-iset-zhu-jie-shi-xian-zi-dong-new/ji-yu-java-fan-she-shou-xie-iset-zhu-jie-shi-xian-zi-dong-new/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>这个注解是我之前学反射时写的,代码规范不是很好,有很多需要改进的地方,不过作为学习已经是够用了,也可以用来理解spring的依赖注入</p></blockquote><h1 id="1-新建maven工程"><a href="#1-新建maven工程" class="headerlink" title="1,新建maven工程"></a>1,新建maven工程</h1><h2 id="1-1-添加lombok依赖-简化开发"><a href="#1-1-添加lombok依赖-简化开发" class="headerlink" title="1.1,添加lombok依赖,简化开发"></a>1.1,添加lombok依赖,简化开发</h2><pre class=" language-xml"><code class="language-xml">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.18.24<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><h1 id="2-注解"><a href="#2-注解" class="headerlink" title="2,注解"></a>2,注解</h1><p>写一个注解类,代码如下</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span>ElementType<span class="token punctuation">.</span>FIELD<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 作用在字段上</span><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span>RetentionPolicy<span class="token punctuation">.</span>RUNTIME<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 运行时使用</span><span class="token keyword">public</span> @<span class="token keyword">interface</span> <span class="token class-name">iset</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 注入单个属性</span>    String <span class="token function">setName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//要设置的属性名</span>    String <span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//要设置的属性值</span>    <span class="token comment" spellcheck="true">// 注入多个属性</span>    <span class="token comment" spellcheck="true">// 两个数组一一对应,到时候逐个赋值</span>    String<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">setNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    String<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">setDatas</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span> </code></pre><p>说明一下:  </p><blockquote><p>@Retention - 标识这个注解怎么保存，是只在代码中，还是编入class文件中，或者是在运行时可以通过反射访问。<br>@Target - 标记使用这个注解的应该是哪种 Java 成员。</p></blockquote><p>而我们的目标是声明字段(一个类的实例),然后通过iset来为这个字段创建实例和注入属性</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 注入单个字段 </span><span class="token annotation punctuation">@iset</span><span class="token punctuation">(</span>setName <span class="token operator">=</span> <span class="token string">"age"</span> <span class="token punctuation">,</span> setData <span class="token operator">=</span> <span class="token string">"8"</span> <span class="token punctuation">)</span>tStu stu2<span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 注入多个字段</span><span class="token annotation punctuation">@iset</span><span class="token punctuation">(</span>setNames <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token punctuation">,</span><span class="token string">"email"</span><span class="token punctuation">,</span><span class="token string">"id"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> setDatas <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"李四"</span><span class="token punctuation">,</span> <span class="token string">"18"</span><span class="token punctuation">,</span><span class="token string">"lisi@qq.com"</span><span class="token punctuation">,</span><span class="token string">"200"</span><span class="token punctuation">}</span><span class="token punctuation">)</span>User user<span class="token punctuation">;</span></code></pre><h1 id="3-核心代码逻辑"><a href="#3-核心代码逻辑" class="headerlink" title="3,核心代码逻辑"></a>3,核心代码逻辑</h1><p>我们这里希望怎么做呢, 就是定义一个类,提供方法,将当前所有标记了@iset注解的字段创建, 并将其属性赋值, 然后放入一个公共map&lt;类实例字段的字段名,类实例&gt;, 想要类实例只需要从公共map里取就行了</p><h2 id="3-1-iConstruct"><a href="#3-1-iConstruct" class="headerlink" title="3.1,iConstruct"></a>3.1,iConstruct</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> org<span class="token punctuation">.</span>malred<span class="token punctuation">.</span>iset<span class="token punctuation">.</span>utils<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>LoggerFactory<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>Field<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashMap<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author malguy-wang sir * @create --- */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">iConstruct</span> <span class="token punctuation">{</span>    <span class="token keyword">final</span> <span class="token keyword">static</span> Logger logger <span class="token operator">=</span> LoggerFactory<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span>iConstruct<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * a map to save all class (保存所有创建的类)     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> Map<span class="token operator">&lt;</span>Object<span class="token punctuation">,</span> Object<span class="token operator">></span> dogs<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 获取所有创建好的类     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Map<span class="token operator">&lt;</span>Object<span class="token punctuation">,</span> Object<span class="token operator">></span> <span class="token function">getDogs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> dogs<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 传入当前类的路径,创建新的实例     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Map<span class="token operator">&lt;</span>Object<span class="token punctuation">,</span> Object<span class="token operator">></span> <span class="token function">generateDogs</span><span class="token punctuation">(</span>String targetClass<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"\t\t==========>>> iset运行开始 &lt;&lt;&lt;=========="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//路径改为全类名</span>        targetClass <span class="token operator">=</span> iUtils<span class="token punctuation">.</span><span class="token function">getClassName</span><span class="token punctuation">(</span>targetClass<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//寻找并加载要创建的类</span>        Class <span class="token class-name">clazz</span> <span class="token operator">=</span> Class<span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>targetClass<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//准备返回的类</span>        Map<span class="token operator">&lt;</span>Object<span class="token punctuation">,</span> Object<span class="token operator">></span> u <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取当前类所有的全类名</span>        String<span class="token punctuation">[</span><span class="token punctuation">]</span> classes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span>clazz<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> clazz<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            classes<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 会带有当前类和全类名+空格+作为属性的类的全类名</span>            <span class="token comment" spellcheck="true">// private org.malred.iset.entitys.User org.malred.iset.itest.t.user</span>            logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"获取当前类所有的全类名 => "</span> <span class="token operator">+</span> classes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 获取类实例的字段名称 ( org.malred.iset.itest.t.user => user )</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> classes<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"解析类实例字段名 => "</span> <span class="token operator">+</span> classes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            classes<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> classes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>                    classes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> classes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            classes<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> classes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>                    classes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> classes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"解析结果 => "</span> <span class="token operator">+</span> classes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 根据解析完成的类实例字段名,获取类实例需要的字段,然后赋值</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> classes<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"为 => { "</span><span class="token operator">+</span>classes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">" } 类实例字段,注入属性值开始"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Field obj <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span>classes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 获取所有字段</span>            <span class="token comment" spellcheck="true">// isAnnotationPresent(iset.class));//判断有没有加注解</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">isAnnotationPresent</span><span class="token punctuation">(</span>iset<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                iset is <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span>iset<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 获取注解</span>                Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> type <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span>classes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取类</span>                Object iu <span class="token operator">=</span> type<span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//创建实例</span>                Field<span class="token punctuation">[</span><span class="token punctuation">]</span> fields <span class="token operator">=</span> iu<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取属性名</span>                String<span class="token punctuation">[</span><span class="token punctuation">]</span> iargs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span>fields<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 属性名数组</span>                <span class="token comment" spellcheck="true">// 解析属性名(全类名 -> 字段名)</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> fields<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    iargs<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> fields<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>                            <span class="token comment" spellcheck="true">// 属性会带全类名,比如org.malred.iset.itest.t.user</span>                            fields<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>                            fields<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"获取类属性名称 => "</span> <span class="token operator">+</span> iargs<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">// 注入单个属性时</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> fields<span class="token punctuation">.</span>length<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>is<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>iargs<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"设置参数 { "</span> <span class="token operator">+</span> iargs<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">" } 为 { "</span> <span class="token operator">+</span> is<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" } 中"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        Field declaredField <span class="token operator">=</span> iu<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span>iargs<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token comment" spellcheck="true">// 设置可访问(私有字段也能被访问)</span>                        declaredField<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token comment" spellcheck="true">// 传入字段和属性,赋值</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>iUtils<span class="token punctuation">.</span><span class="token function">isNumber</span><span class="token punctuation">(</span>is<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                            <span class="token comment" spellcheck="true">// 如果是数值类型需要转int</span>                            declaredField<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>iu<span class="token punctuation">,</span> Integer<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>is<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                            declaredField<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>iu<span class="token punctuation">,</span> is<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                        logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"设置参数 => "</span> <span class="token operator">+</span> iargs<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">" 完毕"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">// 注入属性</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> l <span class="token operator">&lt;</span> fields<span class="token punctuation">.</span>length<span class="token punctuation">;</span> l<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> is<span class="token punctuation">.</span><span class="token function">setNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>is<span class="token punctuation">.</span><span class="token function">setNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>iargs<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                            logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"设置参数 { "</span> <span class="token operator">+</span> iargs<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">" } 为 { "</span>                                    <span class="token operator">+</span> is<span class="token punctuation">.</span><span class="token function">setDatas</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" } 中"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token comment" spellcheck="true">// iu是创建了的实例</span>                            Field declaredField <span class="token operator">=</span> iu<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span>iargs<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            declaredField<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token comment" spellcheck="true">// 如果是数值类型需要转int</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>iUtils<span class="token punctuation">.</span><span class="token function">isNumber</span><span class="token punctuation">(</span>is<span class="token punctuation">.</span><span class="token function">setDatas</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                declaredField<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>iu<span class="token punctuation">,</span> Integer<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>is<span class="token punctuation">.</span><span class="token function">setDatas</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                declaredField<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>iu<span class="token punctuation">,</span> is<span class="token punctuation">.</span><span class="token function">setDatas</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"设置参数 => "</span> <span class="token operator">+</span> iargs<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">" 完毕"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>                logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"为 => { "</span><span class="token operator">+</span>classes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">" } 类实例字段,注入属性值完毕"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"将 { "</span> <span class="token operator">+</span> classes<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">" } 放入map中"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 放入dogs集合</span>                u<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>classes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> iu<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"\t\t==========>>> iset运行结束 &lt;&lt;&lt;=========="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> u<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 生成类,并获取所有创建好的类(map)     *     * @param nowClass 当前类的路径或全类名     * @return     * @throws Exception     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Map<span class="token operator">&lt;</span>Object<span class="token punctuation">,</span> Object<span class="token operator">></span> <span class="token function">getDogs</span><span class="token punctuation">(</span>String nowClass<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        dogs <span class="token operator">=</span> <span class="token function">generateDogs</span><span class="token punctuation">(</span>nowClass<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> dogs<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 通过id(字段名)获取类实例     *     * @param className     * @return     * @throws Exception     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Object <span class="token function">getDogByName</span><span class="token punctuation">(</span>String className<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token keyword">return</span> dogs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>className<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//just new class , than U can get a map named dogs which have all class you need</span>    <span class="token keyword">public</span> <span class="token function">iConstruct</span><span class="token punctuation">(</span>String nowClass<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token function">getDogs</span><span class="token punctuation">(</span>nowClass<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre><h2 id="3-2-iUtils-工具类"><a href="#3-2-iUtils-工具类" class="headerlink" title="3.2,iUtils 工具类"></a>3.2,iUtils 工具类</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> org<span class="token punctuation">.</span>malred<span class="token punctuation">.</span>iset<span class="token punctuation">.</span>utils<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/** * 工具类 * * @author malguy-wang sir * @create --- */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">iUtils</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//判断字符串是不是数字</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isNumber</span><span class="token punctuation">(</span>String s<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Character<span class="token punctuation">.</span><span class="token function">isDigit</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//传入来自源根的路径,返回全类名</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">getClassName</span><span class="token punctuation">(</span>String path<span class="token punctuation">)</span> <span class="token punctuation">{</span>        path <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> <span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        path <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"\\"</span><span class="token punctuation">,</span> <span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        path <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">".java"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> path<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> </code></pre><h1 id="4-测试"><a href="#4-测试" class="headerlink" title="4,测试"></a>4,测试</h1><h2 id="4-1-实体类"><a href="#4-1-实体类" class="headerlink" title="4.1,实体类"></a>4.1,实体类</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> org<span class="token punctuation">.</span>malred<span class="token punctuation">.</span>iset<span class="token punctuation">.</span>entitys<span class="token punctuation">;</span> <span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span> <span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>  <span class="token keyword">private</span> <span class="token keyword">long</span> id<span class="token punctuation">;</span>  <span class="token keyword">private</span> String name<span class="token punctuation">;</span>  <span class="token keyword">private</span> <span class="token keyword">long</span> age<span class="token punctuation">;</span>  <span class="token keyword">private</span> String email<span class="token punctuation">;</span><span class="token punctuation">}</span>  </code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> org<span class="token punctuation">.</span>malred<span class="token punctuation">.</span>iset<span class="token punctuation">.</span>entitys<span class="token punctuation">;</span> <span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span> <span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">tStu</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span><span class="token punctuation">}</span> </code></pre><h2 id="4-2-测试"><a href="#4-2-测试" class="headerlink" title="4.2,测试"></a>4.2,测试</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">t</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@iset</span><span class="token punctuation">(</span>setNames <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token punctuation">,</span> <span class="token string">"email"</span><span class="token punctuation">,</span> <span class="token string">"id"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> setDatas <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"李四"</span><span class="token punctuation">,</span> <span class="token string">"18"</span><span class="token punctuation">,</span> <span class="token string">"lisi@qq.com"</span><span class="token punctuation">,</span> <span class="token string">"200"</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> User user<span class="token punctuation">;</span>    <span class="token annotation punctuation">@iset</span><span class="token punctuation">(</span>setNames <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> setDatas <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token string">"56"</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    tStu stu<span class="token punctuation">;</span>    <span class="token annotation punctuation">@iset</span><span class="token punctuation">(</span>setNames <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> setDatas <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"王五"</span><span class="token punctuation">,</span> <span class="token string">"8"</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    tStu stu1<span class="token punctuation">;</span>    <span class="token annotation punctuation">@iset</span><span class="token punctuation">(</span>setName <span class="token operator">=</span> <span class="token string">"age"</span> <span class="token punctuation">,</span> setData <span class="token operator">=</span> <span class="token string">"8"</span> <span class="token punctuation">)</span>    tStu stu2<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">t1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        Map iuser <span class="token operator">=</span> iConstruct<span class="token punctuation">.</span>                <span class="token function">generateDogs</span><span class="token punctuation">(</span><span class="token string">"org/malred/iset/itest/t.java"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>iuser<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token keyword">new</span> <span class="token class-name">iConstruct</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Map map <span class="token operator">=</span> iConstruct<span class="token punctuation">.</span><span class="token function">getDogs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"stu"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"stu1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"stu2"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="4-3-结果"><a href="#4-3-结果" class="headerlink" title="4.3,结果"></a>4.3,结果</h2><pre class=" language-java"><code class="language-java"><span class="token string">"C:\Program Files\Java\jdk1.8.0_241\bin\java.exe"</span> <span class="token operator">-</span>Dvisualvm<span class="token punctuation">.</span>id<span class="token operator">=</span><span class="token number">218153308319900</span> <span class="token string">"-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2021.1.1\lib\idea_rt.jar=50078:C:\Program Files\JetBrains\IntelliJ IDEA 2021.1.1\bin"</span> <span class="token operator">-</span>Dfile<span class="token punctuation">.</span>encoding<span class="token operator">=</span>UTF<span class="token operator">-</span><span class="token number">8</span> <span class="token operator">-</span>classpath <span class="token string">"C:\Program Files\Java\jdk1.8.0_241\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_241\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_241\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_241\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_241\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_241\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_241\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_241\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_241\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_241\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_241\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_241\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_241\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_241\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_241\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_241\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_241\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_241\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_241\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_241\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_241\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_241\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_241\jre\lib\rt.jar;C:\Users\13695\Desktop\造轮子\代码\手写造轮子\iset(反射小练习)\myConstruct\target\classes;D:\java_maven\maven_repository\org\projectlombok\lombok\1.18.24\lombok-1.18.24.jar"</span> org<span class="token punctuation">.</span>malred<span class="token punctuation">.</span>iset<span class="token punctuation">.</span>itest<span class="token punctuation">.</span>t一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span>         <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">>>></span> iset运行开始 <span class="token operator">&lt;&lt;</span><span class="token operator">&lt;=</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 获取当前类所有的全类名 <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">private</span> org<span class="token punctuation">.</span>malred<span class="token punctuation">.</span>iset<span class="token punctuation">.</span>entitys<span class="token punctuation">.</span>User org<span class="token punctuation">.</span>malred<span class="token punctuation">.</span>iset<span class="token punctuation">.</span>itest<span class="token punctuation">.</span>t<span class="token punctuation">.</span>user一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 获取当前类所有的全类名 <span class="token operator">=</span><span class="token operator">></span> org<span class="token punctuation">.</span>malred<span class="token punctuation">.</span>iset<span class="token punctuation">.</span>entitys<span class="token punctuation">.</span>tStu org<span class="token punctuation">.</span>malred<span class="token punctuation">.</span>iset<span class="token punctuation">.</span>itest<span class="token punctuation">.</span>t<span class="token punctuation">.</span>stu一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 获取当前类所有的全类名 <span class="token operator">=</span><span class="token operator">></span> org<span class="token punctuation">.</span>malred<span class="token punctuation">.</span>iset<span class="token punctuation">.</span>entitys<span class="token punctuation">.</span>tStu org<span class="token punctuation">.</span>malred<span class="token punctuation">.</span>iset<span class="token punctuation">.</span>itest<span class="token punctuation">.</span>t<span class="token punctuation">.</span>stu1一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 获取当前类所有的全类名 <span class="token operator">=</span><span class="token operator">></span> org<span class="token punctuation">.</span>malred<span class="token punctuation">.</span>iset<span class="token punctuation">.</span>entitys<span class="token punctuation">.</span>tStu org<span class="token punctuation">.</span>malred<span class="token punctuation">.</span>iset<span class="token punctuation">.</span>itest<span class="token punctuation">.</span>t<span class="token punctuation">.</span>stu2一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 解析类实例字段名 <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">private</span> org<span class="token punctuation">.</span>malred<span class="token punctuation">.</span>iset<span class="token punctuation">.</span>entitys<span class="token punctuation">.</span>User org<span class="token punctuation">.</span>malred<span class="token punctuation">.</span>iset<span class="token punctuation">.</span>itest<span class="token punctuation">.</span>t<span class="token punctuation">.</span>user一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 解析结果 <span class="token operator">=</span><span class="token operator">></span> user一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 解析类实例字段名 <span class="token operator">=</span><span class="token operator">></span> org<span class="token punctuation">.</span>malred<span class="token punctuation">.</span>iset<span class="token punctuation">.</span>entitys<span class="token punctuation">.</span>tStu org<span class="token punctuation">.</span>malred<span class="token punctuation">.</span>iset<span class="token punctuation">.</span>itest<span class="token punctuation">.</span>t<span class="token punctuation">.</span>stu一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 解析结果 <span class="token operator">=</span><span class="token operator">></span> stu一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 解析类实例字段名 <span class="token operator">=</span><span class="token operator">></span> org<span class="token punctuation">.</span>malred<span class="token punctuation">.</span>iset<span class="token punctuation">.</span>entitys<span class="token punctuation">.</span>tStu org<span class="token punctuation">.</span>malred<span class="token punctuation">.</span>iset<span class="token punctuation">.</span>itest<span class="token punctuation">.</span>t<span class="token punctuation">.</span>stu1一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 解析结果 <span class="token operator">=</span><span class="token operator">></span> stu1一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 解析类实例字段名 <span class="token operator">=</span><span class="token operator">></span> org<span class="token punctuation">.</span>malred<span class="token punctuation">.</span>iset<span class="token punctuation">.</span>entitys<span class="token punctuation">.</span>tStu org<span class="token punctuation">.</span>malred<span class="token punctuation">.</span>iset<span class="token punctuation">.</span>itest<span class="token punctuation">.</span>t<span class="token punctuation">.</span>stu2一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 解析结果 <span class="token operator">=</span><span class="token operator">></span> stu2一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 为 <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span> user <span class="token punctuation">}</span> 类实例字段<span class="token punctuation">,</span>注入属性值开始一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 获取类属性名称 <span class="token operator">=</span><span class="token operator">></span> id一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 获取类属性名称 <span class="token operator">=</span><span class="token operator">></span> name一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 获取类属性名称 <span class="token operator">=</span><span class="token operator">></span> age一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 获取类属性名称 <span class="token operator">=</span><span class="token operator">></span> email一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 设置参数 <span class="token punctuation">{</span> id <span class="token punctuation">}</span> 为 <span class="token punctuation">{</span> <span class="token number">200</span> <span class="token punctuation">}</span> 中一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 设置参数 <span class="token operator">=</span><span class="token operator">></span> id 完毕一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 设置参数 <span class="token punctuation">{</span> name <span class="token punctuation">}</span> 为 <span class="token punctuation">{</span> 李四 <span class="token punctuation">}</span> 中一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 设置参数 <span class="token operator">=</span><span class="token operator">></span> name 完毕一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 设置参数 <span class="token punctuation">{</span> age <span class="token punctuation">}</span> 为 <span class="token punctuation">{</span> <span class="token number">18</span> <span class="token punctuation">}</span> 中一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 设置参数 <span class="token operator">=</span><span class="token operator">></span> age 完毕一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 设置参数 <span class="token punctuation">{</span> email <span class="token punctuation">}</span> 为 <span class="token punctuation">{</span> lisi<span class="token annotation punctuation">@qq</span><span class="token punctuation">.</span>com <span class="token punctuation">}</span> 中一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 设置参数 <span class="token operator">=</span><span class="token operator">></span> email 完毕一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 为 <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span> user <span class="token punctuation">}</span> 类实例字段<span class="token punctuation">,</span>注入属性值完毕一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 将 <span class="token punctuation">{</span> user <span class="token punctuation">}</span> 放入map中一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 为 <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span> stu <span class="token punctuation">}</span> 类实例字段<span class="token punctuation">,</span>注入属性值开始一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 获取类属性名称 <span class="token operator">=</span><span class="token operator">></span> name一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 获取类属性名称 <span class="token operator">=</span><span class="token operator">></span> age一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 设置参数 <span class="token punctuation">{</span> name <span class="token punctuation">}</span> 为 <span class="token punctuation">{</span> 张三 <span class="token punctuation">}</span> 中一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 设置参数 <span class="token operator">=</span><span class="token operator">></span> name 完毕一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 设置参数 <span class="token punctuation">{</span> age <span class="token punctuation">}</span> 为 <span class="token punctuation">{</span> <span class="token number">56</span> <span class="token punctuation">}</span> 中一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 设置参数 <span class="token operator">=</span><span class="token operator">></span> age 完毕一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 为 <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span> stu <span class="token punctuation">}</span> 类实例字段<span class="token punctuation">,</span>注入属性值完毕一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 将 <span class="token punctuation">{</span> stu <span class="token punctuation">}</span> 放入map中一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 为 <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span> stu1 <span class="token punctuation">}</span> 类实例字段<span class="token punctuation">,</span>注入属性值开始一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 获取类属性名称 <span class="token operator">=</span><span class="token operator">></span> name一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 获取类属性名称 <span class="token operator">=</span><span class="token operator">></span> age一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 设置参数 <span class="token punctuation">{</span> name <span class="token punctuation">}</span> 为 <span class="token punctuation">{</span> 王五 <span class="token punctuation">}</span> 中一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 设置参数 <span class="token operator">=</span><span class="token operator">></span> name 完毕一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 设置参数 <span class="token punctuation">{</span> age <span class="token punctuation">}</span> 为 <span class="token punctuation">{</span> <span class="token number">8</span> <span class="token punctuation">}</span> 中一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 设置参数 <span class="token operator">=</span><span class="token operator">></span> age 完毕一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 为 <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span> stu1 <span class="token punctuation">}</span> 类实例字段<span class="token punctuation">,</span>注入属性值完毕一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 将 <span class="token punctuation">{</span> stu1 <span class="token punctuation">}</span> 放入map中一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 为 <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span> stu2 <span class="token punctuation">}</span> 类实例字段<span class="token punctuation">,</span>注入属性值开始一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 获取类属性名称 <span class="token operator">=</span><span class="token operator">></span> name一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 获取类属性名称 <span class="token operator">=</span><span class="token operator">></span> age一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 设置参数 <span class="token punctuation">{</span> age <span class="token punctuation">}</span> 为 <span class="token punctuation">{</span> <span class="token number">8</span> <span class="token punctuation">}</span> 中一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 设置参数 <span class="token operator">=</span><span class="token operator">></span> age 完毕一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 为 <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span> stu2 <span class="token punctuation">}</span> 类实例字段<span class="token punctuation">,</span>注入属性值完毕一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span> 将 <span class="token punctuation">{</span> stu2 <span class="token punctuation">}</span> 放入map中一月 <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">2023</span> <span class="token number">8</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">23</span> 下午 com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>Logger warn警告<span class="token operator">:</span>         <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">>>></span> iset运行结束 <span class="token operator">&lt;&lt;</span><span class="token operator">&lt;=</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span><span class="token function">User</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">,</span> name<span class="token operator">=</span>李四<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">,</span> email<span class="token operator">=</span>lisi<span class="token annotation punctuation">@qq</span><span class="token punctuation">.</span>com<span class="token punctuation">)</span><span class="token function">tStu</span><span class="token punctuation">(</span>name<span class="token operator">=</span>张三<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">56</span><span class="token punctuation">)</span><span class="token function">tStu</span><span class="token punctuation">(</span>name<span class="token operator">=</span>王五<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token function">tStu</span><span class="token punctuation">(</span>name<span class="token operator">=</span>null<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">)</span>进程已结束，退出代码为 <span class="token number">0</span> </code></pre><h1 id="问题和拓展"><a href="#问题和拓展" class="headerlink" title="*.问题和拓展"></a>*.问题和拓展</h1><p>git仓库</p><blockquote><p><a href="https://github.com/malred/myConstruct.git">https://github.com/malred/myConstruct.git</a><br><a href="https://gitee.com/malguy/myConstruct.git">https://gitee.com/malguy/myConstruct.git</a></p></blockquote><h2 id="1-对象"><a href="#1-对象" class="headerlink" title="*.1,对象"></a>*.1,对象</h2><p>我这里没有考虑类里面有对象类型的属性的情况,如果要创建的类需要一个对象属性,如何实现?</p><h2 id="2-循环依赖"><a href="#2-循环依赖" class="headerlink" title="*.2,循环依赖"></a>*.2,循环依赖</h2><p>如果有user和stu类,user类有一个属性是stu类,而stu类也有一个user属性,那么,就会互相依赖,无法创建,如何解决?</p><h2 id="3-扫描"><a href="#3-扫描" class="headerlink" title="*.3,扫描"></a>*.3,扫描</h2><p>当前需要手动传入当前类路径,能不能实现像spring的scan一样的扫描,将某个实现@Scan注解的类的子目录全部扫描,并根据有无@compnent+@iset注解来注入呢</p>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 造轮子 </tag>
            
            <tag> 反射 </tag>
            
            <tag> 框架 </tag>
            
            <tag> 注解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jdk11缺失依赖报错</title>
      <link href="/2022/10/16/backend/java/jdk11-que-shi-yi-lai-bao-cuo/jdk11-que-shi-yi-lai-bao-cuo/"/>
      <url>/2022/10/16/backend/java/jdk11-que-shi-yi-lai-bao-cuo/jdk11-que-shi-yi-lai-bao-cuo/</url>
      
        <content type="html"><![CDATA[<p>当jdk8升级到jdk11,Java EE相关模块默认不在Java包里面了，相关的类需要增加额外依赖或者替换成其他的类,如果你直接运行,可能会出现这个问题: </p><p>error: package javax.xml.bind does not exist<br>import javax.xml.bind.JAXBException;  </p><p>Exception in thread “main” java.lang.NoClassDefFoundError: javax/xml/bind/JAXBException<br>    at monitor.Main.main(Main.java:27)<br>Caused by: java.lang.ClassNotFoundException: javax.xml.bind.JAXBException<br>    at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:582)<br>    at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:185)<br>    at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:496)<br>    … 1 more<br> 我的建议是直接加上缺失的依赖: </p><pre class=" language-xml"><code class="language-xml">       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.sun.xml.bind<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jaxb-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.2.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>javax.xml.bind<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jaxb-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.sun.xml.bind<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jaxb-impl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.2.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.glassfish.jaxb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jaxb-runtime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.2.10-b140310.1920<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>javax.activation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>activation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.1.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>       <span class="token comment" spellcheck="true">&lt;!--引⼊Jaxb，结束--></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 开发环境 </tag>
            
            <tag> bug记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>idea启动报错</title>
      <link href="/2022/10/16/backend/java/idea-qi-dong-bao-cuo/idea-qi-dong-bao-cuo/"/>
      <url>/2022/10/16/backend/java/idea-qi-dong-bao-cuo/idea-qi-dong-bao-cuo/</url>
      
        <content type="html"><![CDATA[<p>今天启动idea突然报错:   </p><p>Internal error. Please refer to <a href="https://jb.gg/ide/critical-startup-errors">https://jb.gg/ide/critical-startup-errors</a> </p><p>java.util.concurrent.CompletionException: java.net.BindException: Address already in use: bind</p><p>….</p><p>虽然不知道什么原因,但是拿报错搜了一下,找到解决方法</p><p>win+x –&gt; 以管理员身份运行powershell –&gt; 执行命令net stop winnat和 net start winnat 就可以了</p>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> ide </tag>
            
            <tag> 开发环境 </tag>
            
            <tag> bug记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人spring踩坑合集</title>
      <link href="/2022/10/15/backend/java/ge-ren-spring-cai-keng-he-ji/ge-ren-spring-cai-keng-he-ji/"/>
      <url>/2022/10/15/backend/java/ge-ren-spring-cai-keng-he-ji/ge-ren-spring-cai-keng-he-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="注册的时候赋值了不存在的参数："><a href="#注册的时候赋值了不存在的参数：" class="headerlink" title="注册的时候赋值了不存在的参数："></a>注册的时候赋值了不存在的参数：</h1><p><img src="img.png" alt="img.png"></p><h1 id="内部bean设置错误报错"><a href="#内部bean设置错误报错" class="headerlink" title="内部bean设置错误报错"></a>内部bean设置错误报错</h1><p><img src="img_1.png" alt="img_1.png"><br><img src="img_2.png" alt="img_2.png"><br><img src="img_3.png" alt="img_3.png"><br><img src="img_4.png" alt="img_4.png"></p><h2 id="不能在内部类配置接口多态"><a href="#不能在内部类配置接口多态" class="headerlink" title="不能在内部类配置接口多态"></a>不能在内部类配置接口多态</h2><h2 id="debug"><a href="#debug" class="headerlink" title="debug"></a>debug</h2><p><img src="img_5.png" alt="img_5.png"></p><h3 id="首先传入name字符串（应该是通过配置文件或别的方式），然后把-换成-，在接上class（其实就是获取name对应的类的路径），然后通过ucp的getresource方法寻找类，如果不为空就返回一个类，否则返回null"><a href="#首先传入name字符串（应该是通过配置文件或别的方式），然后把-换成-，在接上class（其实就是获取name对应的类的路径），然后通过ucp的getresource方法寻找类，如果不为空就返回一个类，否则返回null" class="headerlink" title="首先传入name字符串（应该是通过配置文件或别的方式），然后把 . 换成 / ，在接上class（其实就是获取name对应的类的路径），然后通过ucp的getresource方法寻找类，如果不为空就返回一个类，否则返回null"></a>首先传入name字符串（应该是通过配置文件或别的方式），然后把 . 换成 / ，在接上class（其实就是获取name对应的类的路径），然后通过ucp的getresource方法寻找类，如果不为空就返回一个类，否则返回null</h3><h3 id="此时result为null，返回类未找到异常"><a href="#此时result为null，返回类未找到异常" class="headerlink" title="此时result为null，返回类未找到异常"></a>此时result为null，返回类未找到异常</h3><p><img src="img_6.png" alt="img_6.png"><br><img src="img_7.png" alt="img_7.png"><br><img src="img_8.png" alt="img_8.png"><br><img src="img_9.png" alt="img_9.png"><br><img src="img_10.png" alt="img_10.png"></p><h2 id="解决：修改配置文件"><a href="#解决：修改配置文件" class="headerlink" title="解决：修改配置文件"></a>解决：修改配置文件</h2><h3 id="内部声明对象不能用property直接创建"><a href="#内部声明对象不能用property直接创建" class="headerlink" title="内部声明对象不能用property直接创建"></a>内部声明对象不能用property直接创建</h3><p><img src="img_11.png" alt="img_11.png"></p><h1 id="内部类未添加set方法而报错"><a href="#内部类未添加set方法而报错" class="headerlink" title="内部类未添加set方法而报错"></a>内部类未添加set方法而报错</h1><p><img src="img_12.png" alt="img_12.png"><br><img src="img_13.png" alt="img_13.png"></p><h2 id="配置文件会调用set方法来赋值"><a href="#配置文件会调用set方法来赋值" class="headerlink" title="配置文件会调用set方法来赋值"></a>配置文件会调用set方法来赋值</h2><p><img src="img_14.png" alt="img_14.png"></p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p><img src="img_15.png" alt="img_15.png"><br><img src="img_16.png" alt="img_16.png"></p><h1 id="外部类set和get方法齐全并创建了对象和属性，引用方未设置set方法"><a href="#外部类set和get方法齐全并创建了对象和属性，引用方未设置set方法" class="headerlink" title="外部类set和get方法齐全并创建了对象和属性，引用方未设置set方法"></a>外部类set和get方法齐全并创建了对象和属性，引用方未设置set方法</h1><p><img src="img_17.png" alt="img_17.png"><br><img src="img_18.png" alt="img_18.png"></p><h2 id="在创建属性时会调用set方法，引用类没set方法就无法让外部类赋值过来"><a href="#在创建属性时会调用set方法，引用类没set方法就无法让外部类赋值过来" class="headerlink" title="在创建属性时会调用set方法，引用类没set方法就无法让外部类赋值过来"></a>在创建属性时会调用set方法，引用类没set方法就无法让外部类赋值过来</h2><h1 id="创建内部类的属性时，没设置get方法（类就无法调用内部类的属性），报错"><a href="#创建内部类的属性时，没设置get方法（类就无法调用内部类的属性），报错" class="headerlink" title="创建内部类的属性时，没设置get方法（类就无法调用内部类的属性），报错"></a>创建内部类的属性时，没设置get方法（类就无法调用内部类的属性），报错</h1><h2 id="这里面还有一个错误：调用内部类属性需要xxx-xx这种命名方式，外部类的名字必须和内部类的外部类属性名一致"><a href="#这里面还有一个错误：调用内部类属性需要xxx-xx这种命名方式，外部类的名字必须和内部类的外部类属性名一致" class="headerlink" title="这里面还有一个错误：调用内部类属性需要xxx.xx这种命名方式，外部类的名字必须和内部类的外部类属性名一致"></a>这里面还有一个错误：调用内部类属性需要xxx.xx这种命名方式，外部类的名字必须和内部类的外部类属性名一致</h2><p><img src="img_19.png" alt="img_19.png"></p><h2 id="改正："><a href="#改正：" class="headerlink" title="改正："></a>改正：</h2><p><img src="img_20.png" alt="img_20.png"><br><img src="img_21.png" alt="img_21.png"></p><h1 id="xml配置错误"><a href="#xml配置错误" class="headerlink" title="xml配置错误"></a>xml配置错误</h1><p><img src="img_22.png" alt="img_22.png"><br><img src="img_23.png" alt="img_23.png">   </p><h2 id="更正"><a href="#更正" class="headerlink" title="更正"></a>更正</h2><p><img src="img_24.png" alt="img_24.png"></p><h1 id="按照名称注入报错"><a href="#按照名称注入报错" class="headerlink" title="按照名称注入报错"></a>按照名称注入报错</h1><h2 id="解决，默认bean名是类名且首字母小写"><a href="#解决，默认bean名是类名且首字母小写" class="headerlink" title="解决，默认bean名是类名且首字母小写"></a>解决，默认bean名是类名且首字母小写</h2><p><img src="img_25.png" alt="img_25.png"></p><h1 id="过时的数据库api"><a href="#过时的数据库api" class="headerlink" title="过时的数据库api"></a>过时的数据库api</h1><p><img src="img_26.png" alt="img_26.png"></p><h2 id="把com-mysql-jdbc-Driver改为com-mysql-cj-jdbc-Driver"><a href="#把com-mysql-jdbc-Driver改为com-mysql-cj-jdbc-Driver" class="headerlink" title="把com.mysql.jdbc.Driver改为com.mysql.cj.jdbc.Driver"></a>把com.mysql.jdbc.Driver改为com.mysql.cj.jdbc.Driver</h2><h1 id="数据库参数不匹配"><a href="#数据库参数不匹配" class="headerlink" title="数据库参数不匹配"></a>数据库参数不匹配</h1><p><img src="img_27.png" alt="img_27.png"></p><h2 id="args参数要和数据库完全匹配，不能多也不能少"><a href="#args参数要和数据库完全匹配，不能多也不能少" class="headerlink" title="args参数要和数据库完全匹配，不能多也不能少"></a>args参数要和数据库完全匹配，不能多也不能少</h2><p><img src="img_28.png" alt="img_28.png"></p><h1 id="未指定映射类"><a href="#未指定映射类" class="headerlink" title="未指定映射类"></a>未指定映射类</h1><h2 id="使用BeanPropertyRowMapper时，构造器未传递参数"><a href="#使用BeanPropertyRowMapper时，构造器未传递参数" class="headerlink" title="使用BeanPropertyRowMapper时，构造器未传递参数"></a>使用BeanPropertyRowMapper时，构造器未传递参数</h2><h2 id="解决：在构造器里传递要映射的类Book-class"><a href="#解决：在构造器里传递要映射的类Book-class" class="headerlink" title="解决：在构造器里传递要映射的类Book.class"></a>解决：在构造器里传递要映射的类Book.class</h2><p><img src="img_29.png" alt="img_29.png"><br><img src="img_30.png" alt="img_30.png"></p>]]></content>
      
      
      <categories>
          
          <category> ssm </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bug记录 </tag>
            
            <tag> Java </tag>
            
            <tag> 框架 </tag>
            
            <tag> spring </tag>
            
            <tag> ssm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分布式理论</title>
      <link href="/2022/10/13/backend/java/fen-bu-shi-li-lun/fen-bu-shi-li-lun/"/>
      <url>/2022/10/13/backend/java/fen-bu-shi-li-lun/fen-bu-shi-li-lun/</url>
      
        <content type="html"><![CDATA[<h1 id="二-分布式理论"><a href="#二-分布式理论" class="headerlink" title="二,分布式理论"></a>二,分布式理论</h1><h2 id="2-1-数据一致性"><a href="#2-1-数据一致性" class="headerlink" title="2.1,数据一致性"></a>2.1,数据一致性</h2><h3 id="2-1-1-什么是数据一致性"><a href="#2-1-1-什么是数据一致性" class="headerlink" title="2.1.1,什么是数据一致性"></a>2.1.1,什么是数据一致性</h3><p>数据在多副本中保存,各副本数据都是一样的</p><h3 id="2-1-2-副本一致性"><a href="#2-1-2-副本一致性" class="headerlink" title="2.1.2,副本一致性"></a>2.1.2,副本一致性</h3><p>分布式系统中,数据往往有多个副本,则带来了<strong>数据同步</strong>的问题,因为延迟等因素,几乎无法保证同时更新所有副本数据,<br>在性能和一致性之间,需要权衡-&gt;分布式一致性协议</p><h3 id="2-1-3-一致性分类"><a href="#2-1-3-一致性分类" class="headerlink" title="2.1.3,一致性分类"></a>2.1.3,一致性分类</h3><p>强一致性-&gt;系统写什么,读出来就是什么,但是对系统性能影响大,也很难实现  </p><p>弱一致性-&gt;写入成功后,不一定立刻且不一定多久可以读到写入的值,但尽可能在某个时间级别后让数据达到一致性状态</p><p>最终一致性-&gt;<strong>也是弱一致性的一种</strong>,<strong>保证一段时间后,节点数据达到一致性状态</strong>,<br>在一致性状态前的时间片段称为[不一致窗口]</p><p>最终一致性又有多个变种-&gt;因果一致性||读己所写一致性||会话一致性||单调/写读一致性||</p><p><img src="img1.png" alt="一致性分类"></p><h2 id="2-2-CAP定理"><a href="#2-2-CAP定理" class="headerlink" title="2.2,CAP定理"></a>2.2,CAP定理</h2><h3 id="2-2-1-CAP定理介绍"><a href="#2-2-1-CAP定理介绍" class="headerlink" title="2.2.1,CAP定理介绍"></a>2.2.1,CAP定理介绍</h3><p>又称布鲁尔定理,它指出,对一个分布式系统,<strong>不可能同时满足以下三点</strong>:</p><p><img src="img3.png" alt="CAP定理"></p><h4 id="1-一致性"><a href="#1-一致性" class="headerlink" title="1.一致性"></a>1.一致性</h4><p>指的是强一致性,一旦客户端写入数据,则其他节点访问的任何一台服务器节点得到的都是最新的数据</p><h4 id="2-可用性"><a href="#2-可用性" class="headerlink" title="2.可用性"></a>2.可用性</h4><p>系统中的非故障节点收到每个请求都有响应,不允许服务器忽略请求</p><h4 id="3-分区容错性"><a href="#3-分区容错性" class="headerlink" title="3.分区容错性"></a>3.分区容错性</h4><p>允许网络丢失任意节点间的消息丢失(不同步)</p><h3 id="2-2-2-CAP如何选择"><a href="#2-2-2-CAP如何选择" class="headerlink" title="2.2.2,CAP如何选择"></a>2.2.2,CAP如何选择</h3><p><img src="img03.png" alt="img.png"></p><ul><li>CA系统,关注一致性和可用性,不能容忍网络问题或节点错误,出现这种错误,就会拒绝写请求,变成只读</li><li>CP系统,关注一致性和分区容错性,保证大多数节点数据一致,少数节点会在没有同步的时候处于不可用状态</li><li>AP系统,关注可用性和分区容错性,系统不能达成一致,需要给出数据冲突,给出数据冲突就需要维护数据版本</li></ul><p>互联网电商更多是AP,而银行必须保证C</p><h2 id="2-3-BASE理论"><a href="#2-3-BASE理论" class="headerlink" title="2.3,BASE理论"></a>2.3,BASE理论</h2><p>BASE-&gt;基本可用+软状态+最终一致性;是一致性和可用性的权衡,基于CAP定理演化  </p><p>核心思想: 无法做到强一致性,则根据不同应用的特点采用合适的方式达到最终一致性  </p><h3 id="2-3-1-基本可用"><a href="#2-3-1-基本可用" class="headerlink" title="2.3.1,基本可用"></a>2.3.1,基本可用</h3><p>出现不可预知的故障,但还是能用,相比一般系统,可能出现:</p><ul><li>响应时间的损失: 正常系统在0.5内返回结果,基本可用则在1秒内返回</li><li>功能上的损失: 正常购物可以顺利交易,但是活动流量大的时候,为了保证稳定,部分消费者可能被引导到降级页面  </li></ul><h3 id="2-3-2-软状态"><a href="#2-3-2-软状态" class="headerlink" title="2.3.2,软状态"></a>2.3.2,软状态</h3><p>硬状态要求多个节点数据副本一致,软状态则允许系统中的数据存在中间状态,允许不同节点的副本数据存在数据延时</p><h3 id="2-3-3-最终一致性"><a href="#2-3-3-最终一致性" class="headerlink" title="2.3.3,最终一致性"></a>2.3.3,最终一致性</h3><p>软状态在一定时间内达到副本数据一致</p>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微服务 </tag>
            
            <tag> Java </tag>
            
            <tag> 分布式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分布式架构与理论</title>
      <link href="/2022/10/13/backend/java/fen-bu-shi-yi-zhi-xing-xie-yi/fen-bu-shi-yi-zhi-xing-xie-yi/"/>
      <url>/2022/10/13/backend/java/fen-bu-shi-yi-zhi-xing-xie-yi/fen-bu-shi-yi-zhi-xing-xie-yi/</url>
      
        <content type="html"><![CDATA[<h1 id="3-1-二阶段提交协议-2PC"><a href="#3-1-二阶段提交协议-2PC" class="headerlink" title="3.1,二阶段提交协议(2PC)"></a>3.1,二阶段提交协议(2PC)</h1><h2 id="3-1-1-二阶段提交协议"><a href="#3-1-1-二阶段提交协议" class="headerlink" title="3.1.1,二阶段提交协议"></a>3.1.1,二阶段提交协议</h2><p>简称2PC,是比较常见的解决分布式事务问题的方式: 要么所有参与进程都提交事务,要么都取消事务,即实现ACID的A原子性</p><blockquote><p>分布式事务: 事务提供一种操作本地数据库的不可分割的一系列操作,”要么什么都不做,要么做全套(All or Nothing)”的机制,<br>而分布式事务就是为了操作不同数据库的不可分割的一系列操作的机制</p></blockquote><p><img src="img4.png" alt="img.png"> </p><h2 id="3-1-2-执行流程"><a href="#3-1-2-执行流程" class="headerlink" title="3.1.2,执行流程"></a>3.1.2,执行流程</h2><h3 id="1-成功执行的事务提交流程"><a href="#1-成功执行的事务提交流程" class="headerlink" title="1,成功执行的事务提交流程"></a>1,成功执行的事务提交流程</h3><p><img src="img.png" alt="img.png"><br>阶段一: </p><ul><li>事务询问</li><li>执行事务</li><li>各参与者向协调者反馈事务询问的响应 </li></ul><p>阶段二: </p><ul><li>发送提交请求</li><li>事务提交</li><li>反馈事务提交结果</li><li>完成事务</li></ul><h3 id="2-中断事务流程"><a href="#2-中断事务流程" class="headerlink" title="2,中断事务流程"></a>2,中断事务流程</h3><p>假如任何一个参与者挂了(超时等),协调者无法接收到反馈,会中断事务  </p><p>阶段一: </p><ul><li>事务询问</li><li>执行事务</li><li>各参与者向协调者反馈事务询问的响应 </li></ul><p>阶段二: </p><ul><li>发送回滚请求</li><li>事务回滚</li><li>反馈事务回滚结果 </li><li>中断事务</li></ul><h2 id="3-1-3-2PC的优缺点"><a href="#3-1-3-2PC的优缺点" class="headerlink" title="3.1.3 2PC的优缺点"></a>3.1.3 2PC的优缺点</h2><h3 id="1-优点"><a href="#1-优点" class="headerlink" title="1,优点"></a>1,优点</h3><p>原理简单</p><h3 id="2-缺点"><a href="#2-缺点" class="headerlink" title="2,缺点"></a>2,缺点</h3><ul><li>同步阻塞<br>在二阶段提交的执行过程中,事务处于阻塞状态,如果参与者占用公共资源,则其他节点访问会被阻塞</li><li>单点问题<br>协调者出现问题,提交流程出现问题,所有参与者一直处于事务锁定状态</li><li>数据不一致<br>协调者发送commit请求,如果一部分参与者网络故障或宕机,则会出现无法接收commit请求来完成事务操作,出现数据不一致问题</li><li>没有完善的容错机制<br>任何一个节点的失败都会导致整个事务的失败</li></ul><h1 id="3-2-三阶段提交协议-3PC"><a href="#3-2-三阶段提交协议-3PC" class="headerlink" title="3.2,三阶段提交协议(3PC)"></a>3.2,三阶段提交协议(3PC)</h1><h1 id="3-3-NWR协议"><a href="#3-3-NWR协议" class="headerlink" title="3.3,NWR协议"></a>3.3,NWR协议</h1><h1 id="3-4-Gossip协议"><a href="#3-4-Gossip协议" class="headerlink" title="3.4,Gossip协议"></a>3.4,Gossip协议</h1><h1 id="3-5-Paxos协议"><a href="#3-5-Paxos协议" class="headerlink" title="3.5,Paxos协议"></a>3.5,Paxos协议</h1><h1 id="3-6-Raft协议"><a href="#3-6-Raft协议" class="headerlink" title="3.6,Raft协议"></a>3.6,Raft协议</h1><h1 id="3-7-Lease机制"><a href="#3-7-Lease机制" class="headerlink" title="3.7,Lease机制"></a>3.7,Lease机制</h1>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微服务 </tag>
            
            <tag> Java </tag>
            
            <tag> 分布式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分布式架构与理论</title>
      <link href="/2022/10/05/backend/java/fen-bu-shi-jia-gou-she-ji/fen-bu-shi-jia-gou-she-ji/"/>
      <url>/2022/10/05/backend/java/fen-bu-shi-jia-gou-she-ji/fen-bu-shi-jia-gou-she-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="一-分布式架构与理论"><a href="#一-分布式架构与理论" class="headerlink" title="一,分布式架构与理论"></a>一,分布式架构与理论</h1><h2 id="一-分布式架构与理论-1"><a href="#一-分布式架构与理论-1" class="headerlink" title="一,分布式架构与理论"></a>一,分布式架构与理论</h2><h3 id="1-1-什么是分布式系统"><a href="#1-1-什么是分布式系统" class="headerlink" title="1.1,什么是分布式系统"></a>1.1,什么是分布式系统</h3><p>分布式系统是硬软件分布在不同网络计算机上,彼此通过消息传递进行通信协调的系统  </p><p>把一个大的业务拆成多个可以独立部署和实现功能的子模块,分布在不同服务器节点,共同构成的系统  </p><p><img src="img0.png" alt="分布式系统">  </p><h3 id="1-2-分布式和集群的区别"><a href="#1-2-分布式和集群的区别" class="headerlink" title="1.2,分布式和集群的区别"></a>1.2,分布式和集群的区别</h3><p>集群-&gt;多个服务做同一件事  </p><p>分布式-&gt;多个服务做不同的事  </p><h3 id="1-3-分布式系统特性"><a href="#1-3-分布式系统特性" class="headerlink" title="1.3,分布式系统特性"></a>1.3,分布式系统特性</h3><p>分布性-&gt;可以分布在不同空间(物理)   </p><p>对等性-&gt;计算机服务节点没有主从之分  </p><p>并发性-&gt;分布式系统的多个节点,可能并发地操作资源(数据库等)  </p><p>缺乏全局时钟-&gt;由于处于不同机器,而且是远程通信,事件执行的先后顺序难以确认  </p><p>故障容易发生-&gt;机器越多,越有可能发生局部的故障  </p><p>单点故障-&gt;如果某个功能/角色只有一台计算机支撑,则它出现的故障就是单点故障</p><h3 id="1-4-分布式系统面临的问题"><a href="#1-4-分布式系统面临的问题" class="headerlink" title="1.4,分布式系统面临的问题"></a>1.4,分布式系统面临的问题</h3><h4 id="1-通信异常"><a href="#1-通信异常" class="headerlink" title="1,通信异常"></a>1,通信异常</h4><p>网络本身可能异常,则会出现<strong>分布式系统无法完成一次网络通信</strong>的情况,<br>而且,远程通信也有延迟,综上,分布式系统很容易出现<strong>消息丢失和延迟</strong></p><h4 id="2-网络分区"><a href="#2-网络分区" class="headerlink" title="2,网络分区"></a>2,网络分区</h4><p>部分网络不连通,但是子网络内部的网络通信正常,导致网络环境分成了不同的区域,出现<strong>局部小集群</strong>,<br>此时需要这些小集群完成服务,对分布式一致性提出巨大挑战</p><h4 id="3-节点故障"><a href="#3-节点故障" class="headerlink" title="3,节点故障"></a>3,节点故障</h4><p>组成微服务的服务器节点宕机或僵死</p><h4 id="4-三态-重发"><a href="#4-三态-重发" class="headerlink" title="4,三态,重发"></a>4,三态,重发</h4><p>三态-&gt;分布式系统每次请求响应都有<strong>成功/失败/超时</strong>三种状态  </p><p>重发-&gt;超时/失败的情况就需要重新发起调用</p><h4 id="5-幂等"><a href="#5-幂等" class="headerlink" title="5,幂等"></a>5,幂等</h4><p>多次请求某个资源,对资源本身都是产生和一次调用相同的结果 </p><h1 id="四-分布式系统设计策略"><a href="#四-分布式系统设计策略" class="headerlink" title="四,分布式系统设计策略"></a>四,分布式系统设计策略</h1><h1 id="五-分布式架构服务调用"><a href="#五-分布式架构服务调用" class="headerlink" title="五,分布式架构服务调用"></a>五,分布式架构服务调用</h1><h1 id="六-分布式服务治理"><a href="#六-分布式服务治理" class="headerlink" title="六,分布式服务治理"></a>六,分布式服务治理</h1><h1 id="七-架构设计基本原则"><a href="#七-架构设计基本原则" class="headerlink" title="七,架构设计基本原则"></a>七,架构设计基本原则</h1>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微服务 </tag>
            
            <tag> Java </tag>
            
            <tag> 分布式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一代微服务</title>
      <link href="/2022/10/05/backend/java/di-yi-dai-wei-fu-wu/di-yi-dai-wei-fu-wu/"/>
      <url>/2022/10/05/backend/java/di-yi-dai-wei-fu-wu/di-yi-dai-wei-fu-wu/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> 微服务 </tag>
            
            <tag> Java </tag>
            
            <tag> 分布式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试文章</title>
      <link href="/2022/10/04/ce-shi-wen-zhang/ce-shi-wen-zhang/"/>
      <url>/2022/10/04/ce-shi-wen-zhang/ce-shi-wen-zhang/</url>
      
        <content type="html"><![CDATA[<p>测试文章</p><img src="/2022/10/04/ce-shi-wen-zhang/ce-shi-wen-zhang/test.jpg" class="" title="图片引用方法一"><p><img src="test.jpg" alt="图片引用方法二"></p><p><img src="/images/test.jpg" alt="图片引用方法三"></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
